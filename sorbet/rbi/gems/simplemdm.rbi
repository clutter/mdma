# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/simplemdm/all/simplemdm.rbi
#
# simplemdm-1.3.0

module SimpleMDM
  def self.api_key; end
  def self.api_key=(value); end
  def self.api_url; end
  def self.base_url; end
  def self.base_url=(value); end
end
class SimpleMDM::Base < Hashie::Mash
  def fetch(method, verb = nil, params = nil); end
  def new?; end
  def self.build(hash = nil); end
  def self.fetch(method, verb = nil, params = nil); end
end
class SimpleMDM::Account < Hash
  def initialize; end
  def name; end
  def self.allocate; end
  def self.new(*arg0); end
  extend Singleton::SingletonClassMethods
  include Singleton
end
class SimpleMDM::App < SimpleMDM::Base
  def binary=(val); end
  def build(hash = nil); end
  def destroy; end
  def initialize(source_hash = nil, default = nil, &blk); end
  def name=(val); end
  def save; end
  def self.all; end
  def self.find(id); end
end
class SimpleMDM::AppGroup < SimpleMDM::Base
  def add_app(app); end
  def add_device(device); end
  def add_device_group(device_group); end
  def auto_deploy=(val); end
  def build(hash = nil); end
  def destroy; end
  def name=(val); end
  def push_apps; end
  def remove_app(app); end
  def remove_device(device); end
  def remove_device_group(device_group); end
  def save; end
  def self.all; end
  def self.find(id); end
end
class SimpleMDM::Device < SimpleMDM::Base
  def clear_passcode; end
  def installed_apps; end
  def lock(options = nil); end
  def push_apps; end
  def save; end
  def self.all; end
  def self.find(id); end
  def wipe; end
end
class SimpleMDM::DeviceGroup < SimpleMDM::Base
  def add_device(device); end
  def self.all; end
  def self.find(id); end
end
class SimpleMDM::InstalledApp < SimpleMDM::Base
  def self.find(id); end
  def uninstall; end
end
