# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `aws-sdk-s3` gem.
# Please instead update this file by running `bin/tapioca gem aws-sdk-s3`.

# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/accelerate.rb#1
module Aws
  class << self
    # source://aws-sdk-core/3.63.0/lib/aws-sdk-core.rb#102
    def config; end

    # source://aws-sdk-core/3.63.0/lib/aws-sdk-core.rb#105
    def config=(config); end

    # source://aws-sdk-core/3.63.0/lib/aws-sdk-core.rb#164
    def eager_autoload!(*args); end

    # source://aws-sdk-core/3.63.0/lib/aws-sdk-core.rb#157
    def empty_connection_pools!; end

    # source://aws-sdk-core/3.63.0/lib/aws-sdk-core.rb#114
    def partition(partition_name); end

    # source://aws-sdk-core/3.63.0/lib/aws-sdk-core.rb#119
    def partitions; end

    # source://aws-sdk-core/3.63.0/lib/aws-sdk-core.rb#95
    def shared_config; end

    # source://aws-sdk-core/3.63.0/lib/aws-sdk-core.rb#134
    def use_bundled_cert!; end
  end
end

# source://aws-sdk-core/3.63.0/lib/aws-sdk-core.rb#88
Aws::CORE_GEM_VERSION = T.let(T.unsafe(nil), String)

# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/master/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8
module Aws::S3; end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_region_cache.rb#76
Aws::S3::BUCKET_REGIONS = T.let(T.unsafe(nil), Aws::S3::BucketRegionCache)

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#9
class Aws::S3::Bucket
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [Bucket] a new instance of Bucket
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#19
  def initialize(*args); end

  # @return [BucketAcl]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#438
  def acl; end

  # Deletes all objects and versioned objects from this bucket
  #
  # @example
  #
  #   bucket.clear!
  # @return [void]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/bucket.rb#14
  def clear!; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#42
  def client; end

  # @return [BucketCors]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#446
  def cors; end

  # @example Request syntax with placeholder values
  #
  #   bucket.create({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read
  #   create_bucket_configuration: {
  #   location_constraint: "EU", # accepts EU, eu-west-1, us-west-1, us-west-2, ap-south-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1, cn-north-1, eu-central-1
  #   },
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write: "GrantWrite",
  #   grant_write_acp: "GrantWriteACP",
  #   object_lock_enabled_for_bucket: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::CreateBucketOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#248
  def create(options = T.unsafe(nil)); end

  # Date the bucket was created.
  #
  # @return [Time]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#35
  def creation_date; end

  # @raise [NotImplementedError] Raises when {#data_loaded?} is `false`.
  # @return [Types::Bucket] Returns the data for this {Bucket}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#57
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#65
  def data_loaded?; end

  # @example Request syntax with placeholder values
  #
  #   bucket.delete()
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#259
  def delete(options = T.unsafe(nil)); end

  # Deletes all objects and versioned objects from this bucket and
  # then deletes the bucket.
  #
  # @example
  #
  #   bucket.delete!
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [void]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/bucket.rb#34
  def delete!(options = T.unsafe(nil)); end

  # @example Request syntax with placeholder values
  #
  #   bucket.delete_objects({
  #   delete: { # required
  #   objects: [ # required
  #   {
  #   key: "ObjectKey", # required
  #   version_id: "ObjectVersionId",
  #   },
  #   ],
  #   quiet: false,
  #   },
  #   mfa: "MFA",
  #   request_payer: "requester", # accepts requester
  #   bypass_governance_retention: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::DeleteObjectsOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#297
  def delete_objects(options = T.unsafe(nil)); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#680
  def deprecated_identifiers; end

  # @param options [Hash] ({})
  # @return [Boolean] Returns `true` if the Bucket exists.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#72
  def exists?(options = T.unsafe(nil)); end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # @return [BucketLifecycle]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#454
  def lifecycle; end

  # @return [BucketLifecycleConfiguration]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#462
  def lifecycle_configuration; end

  # @api private
  # @raise [NotImplementedError]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/bucket.rb#101
  def load; end

  # @return [BucketLogging]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#470
  def logging; end

  # @example Request syntax with placeholder values
  #
  #   multipart_uploads = bucket.multipart_uploads({
  #   delimiter: "Delimiter",
  #   encoding_type: "url", # accepts url
  #   key_marker: "KeyMarker",
  #   prefix: "Prefix",
  #   upload_id_marker: "UploadIdMarker",
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [MultipartUpload::Collection]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#507
  def multipart_uploads(options = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#29
  def name; end

  # @return [BucketNotification]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#529
  def notification; end

  # @param key [String]
  # @return [Object]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#538
  def object(key); end

  # @example Request syntax with placeholder values
  #
  #   object_versions = bucket.object_versions({
  #   delimiter: "Delimiter",
  #   encoding_type: "url", # accepts url
  #   key_marker: "KeyMarker",
  #   prefix: "Prefix",
  #   version_id_marker: "VersionIdMarker",
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [ObjectVersion::Collection]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#572
  def object_versions(options = T.unsafe(nil)); end

  # @example Request syntax with placeholder values
  #
  #   objects = bucket.objects({
  #   delimiter: "Delimiter",
  #   encoding_type: "url", # accepts url
  #   prefix: "Prefix",
  #   request_payer: "requester", # accepts requester
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [ObjectSummary::Collection]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#618
  def objects(options = T.unsafe(nil)); end

  # @return [BucketPolicy]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#639
  def policy; end

  # Creates a {PresignedPost} that makes it easy to upload a file from
  # a web browser direct to Amazon S3 using an HTML post form with
  # a file field.
  #
  # See the {PresignedPost} documentation for more information.
  #
  # @note You must specify `:key` or `:key_starts_with`. All other options
  #   are optional.
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @return [PresignedPost]
  # @see PresignedPost
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/bucket.rb#91
  def presigned_post(options = T.unsafe(nil)); end

  # @example Request syntax with placeholder values
  #
  #   object = bucket.put_object({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   body: source_file,
  #   cache_control: "CacheControl",
  #   content_disposition: "ContentDisposition",
  #   content_encoding: "ContentEncoding",
  #   content_language: "ContentLanguage",
  #   content_length: 1,
  #   content_md5: "ContentMD5",
  #   content_type: "ContentType",
  #   expires: Time.now,
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write_acp: "GrantWriteACP",
  #   key: "ObjectKey", # required
  #   metadata: {
  #   "MetadataKey" => "MetadataValue",
  #   },
  #   server_side_encryption: "AES256", # accepts AES256, aws:kms
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   website_redirect_location: "WebsiteRedirectLocation",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   ssekms_key_id: "SSEKMSKeyId",
  #   ssekms_encryption_context: "SSEKMSEncryptionContext",
  #   request_payer: "requester", # accepts requester
  #   tagging: "TaggingHeader",
  #   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   object_lock_retain_until_date: Time.now,
  #   object_lock_legal_hold_status: "ON", # accepts ON, OFF
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Object]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#425
  def put_object(options = T.unsafe(nil)); end

  # @api private
  # @raise [NotImplementedError]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#48
  def reload; end

  # @return [BucketRequestPayment]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#647
  def request_payment; end

  # @return [BucketTagging]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#655
  def tagging; end

  # Returns a public URL for this bucket.
  #
  #     bucket = s3.bucket('bucket-name')
  #     bucket.url
  #     #=> "https://bucket-name.s3.amazonaws.com"
  #
  # You can pass `virtual_host: true` to use the bucket name as the
  # host name.
  #
  #     bucket = s3.bucket('my.bucket.com')
  #     bucket.url(virtual_host: true)
  #     #=> "http://my.bucket.com"
  #
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [String] the URL for this bucket.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/bucket.rb#73
  def url(options = T.unsafe(nil)); end

  # @return [BucketVersioning]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#663
  def versioning; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#195
  def wait_until(options = T.unsafe(nil), &block); end

  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#89
  def wait_until_exists(options = T.unsafe(nil), &block); end

  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#106
  def wait_until_not_exists(options = T.unsafe(nil), &block); end

  # @return [BucketWebsite]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#671
  def website; end

  private

  # @return [Boolean]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/bucket.rb#120
  def bucket_as_hostname?(https); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#687
  def extract_name(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/bucket.rb#109
  def s3_bucket_url; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#708
  def separate_params_and_options(options); end

  # @yield [waiter.waiter]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#698
  def yield_waiter_and_warn(waiter, &block); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket.rb#723
class Aws::S3::Bucket::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#9
class Aws::S3::BucketAcl
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [BucketAcl] a new instance of BucketAcl
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#19
  def initialize(*args); end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#235
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#29
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#48
  def client; end

  # @return [Types::GetBucketAclOutput] Returns the data for this {BucketAcl}. Calls
  #   {Client#get_bucket_acl} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#68
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#76
  def data_loaded?; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#244
  def deprecated_identifiers; end

  # A list of grants.
  #
  # @return [Array<Types::Grant>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#41
  def grants; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Loads, or reloads {#data} for the current {BucketAcl}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_acl.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#58
  def load; end

  # @return [Types::Owner]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#35
  def owner; end

  # @example Request syntax with placeholder values
  #
  #   bucket_acl.put({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read
  #   access_control_policy: {
  #   grants: [
  #   {
  #   grantee: {
  #   display_name: "DisplayName",
  #   email_address: "EmailAddress",
  #   id: "ID",
  #   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
  #   uri: "URI",
  #   },
  #   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
  #   },
  #   ],
  #   owner: {
  #   display_name: "DisplayName",
  #   id: "ID",
  #   },
  #   },
  #   content_md5: "ContentMD5",
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write: "GrantWrite",
  #   grant_write_acp: "GrantWriteACP",
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#226
  def put(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {BucketAcl}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_acl.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#58
  def reload; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#158
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#251
  def extract_bucket_name(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_acl.rb#262
class Aws::S3::BucketAcl::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#9
class Aws::S3::BucketCors
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [BucketCors] a new instance of BucketCors
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#19
  def initialize(*args); end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#211
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#29
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#42
  def client; end

  # @return [Array<Types::CORSRule>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#35
  def cors_rules; end

  # @return [Types::GetBucketCorsOutput] Returns the data for this {BucketCors}. Calls
  #   {Client#get_bucket_cors} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#62
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#70
  def data_loaded?; end

  # @example Request syntax with placeholder values
  #
  #   bucket_cors.delete()
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#176
  def delete(options = T.unsafe(nil)); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#220
  def deprecated_identifiers; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Loads, or reloads {#data} for the current {BucketCors}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_cors.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#52
  def load; end

  # @example Request syntax with placeholder values
  #
  #   bucket_cors.put({
  #   cors_configuration: { # required
  #   cors_rules: [ # required
  #   {
  #   allowed_headers: ["AllowedHeader"],
  #   allowed_methods: ["AllowedMethod"], # required
  #   allowed_origins: ["AllowedOrigin"], # required
  #   expose_headers: ["ExposeHeader"],
  #   max_age_seconds: 1,
  #   },
  #   ],
  #   },
  #   content_md5: "ContentMD5",
  #   })
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#202
  def put(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {BucketCors}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_cors.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#52
  def reload; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#152
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#227
  def extract_bucket_name(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_cors.rb#238
class Aws::S3::BucketCors::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#9
class Aws::S3::BucketLifecycle
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [BucketLifecycle] a new instance of BucketLifecycle
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#19
  def initialize(*args); end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#229
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#29
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#42
  def client; end

  # @return [Types::GetBucketLifecycleOutput] Returns the data for this {BucketLifecycle}. Calls
  #   {Client#get_bucket_lifecycle} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#62
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#70
  def data_loaded?; end

  # @example Request syntax with placeholder values
  #
  #   bucket_lifecycle.delete()
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#176
  def delete(options = T.unsafe(nil)); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#238
  def deprecated_identifiers; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Loads, or reloads {#data} for the current {BucketLifecycle}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_lifecycle.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#52
  def load; end

  # @example Request syntax with placeholder values
  #
  #   bucket_lifecycle.put({
  #   content_md5: "ContentMD5",
  #   lifecycle_configuration: {
  #   rules: [ # required
  #   {
  #   expiration: {
  #   date: Time.now,
  #   days: 1,
  #   expired_object_delete_marker: false,
  #   },
  #   id: "ID",
  #   prefix: "Prefix", # required
  #   status: "Enabled", # required, accepts Enabled, Disabled
  #   transition: {
  #   date: Time.now,
  #   days: 1,
  #   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
  #   },
  #   noncurrent_version_transition: {
  #   noncurrent_days: 1,
  #   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
  #   },
  #   noncurrent_version_expiration: {
  #   noncurrent_days: 1,
  #   },
  #   abort_incomplete_multipart_upload: {
  #   days_after_initiation: 1,
  #   },
  #   },
  #   ],
  #   },
  #   })
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#220
  def put(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {BucketLifecycle}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_lifecycle.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#52
  def reload; end

  # @return [Array<Types::Rule>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#35
  def rules; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#152
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#245
  def extract_bucket_name(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle.rb#256
class Aws::S3::BucketLifecycle::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#9
class Aws::S3::BucketLifecycleConfiguration
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [BucketLifecycleConfiguration] a new instance of BucketLifecycleConfiguration
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#19
  def initialize(*args); end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#247
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#29
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#42
  def client; end

  # @return [Types::GetBucketLifecycleConfigurationOutput] Returns the data for this {BucketLifecycleConfiguration}. Calls
  #   {Client#get_bucket_lifecycle_configuration} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#62
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#70
  def data_loaded?; end

  # @example Request syntax with placeholder values
  #
  #   bucket_lifecycle_configuration.delete()
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#176
  def delete(options = T.unsafe(nil)); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#256
  def deprecated_identifiers; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Loads, or reloads {#data} for the current {BucketLifecycleConfiguration}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_lifecycle_configuration.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#52
  def load; end

  # @example Request syntax with placeholder values
  #
  #   bucket_lifecycle_configuration.put({
  #   lifecycle_configuration: {
  #   rules: [ # required
  #   {
  #   expiration: {
  #   date: Time.now,
  #   days: 1,
  #   expired_object_delete_marker: false,
  #   },
  #   id: "ID",
  #   prefix: "Prefix",
  #   filter: {
  #   prefix: "Prefix",
  #   tag: {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   and: {
  #   prefix: "Prefix",
  #   tags: [
  #   {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   ],
  #   },
  #   },
  #   status: "Enabled", # required, accepts Enabled, Disabled
  #   transitions: [
  #   {
  #   date: Time.now,
  #   days: 1,
  #   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
  #   },
  #   ],
  #   noncurrent_version_transitions: [
  #   {
  #   noncurrent_days: 1,
  #   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
  #   },
  #   ],
  #   noncurrent_version_expiration: {
  #   noncurrent_days: 1,
  #   },
  #   abort_incomplete_multipart_upload: {
  #   days_after_initiation: 1,
  #   },
  #   },
  #   ],
  #   },
  #   })
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#238
  def put(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {BucketLifecycleConfiguration}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_lifecycle_configuration.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#52
  def reload; end

  # @return [Array<Types::LifecycleRule>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#35
  def rules; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#152
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#263
  def extract_bucket_name(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_lifecycle_configuration.rb#274
class Aws::S3::BucketLifecycleConfiguration::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#9
class Aws::S3::BucketLogging
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [BucketLogging] a new instance of BucketLogging
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#19
  def initialize(*args); end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#207
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#29
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#42
  def client; end

  # @return [Types::GetBucketLoggingOutput] Returns the data for this {BucketLogging}. Calls
  #   {Client#get_bucket_logging} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#62
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#70
  def data_loaded?; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#216
  def deprecated_identifiers; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Loads, or reloads {#data} for the current {BucketLogging}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_logging.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#52
  def load; end

  # @return [Types::LoggingEnabled]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#35
  def logging_enabled; end

  # @example Request syntax with placeholder values
  #
  #   bucket_logging.put({
  #   bucket_logging_status: { # required
  #   logging_enabled: {
  #   target_bucket: "TargetBucket", # required
  #   target_grants: [
  #   {
  #   grantee: {
  #   display_name: "DisplayName",
  #   email_address: "EmailAddress",
  #   id: "ID",
  #   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
  #   uri: "URI",
  #   },
  #   permission: "FULL_CONTROL", # accepts FULL_CONTROL, READ, WRITE
  #   },
  #   ],
  #   target_prefix: "TargetPrefix", # required
  #   },
  #   },
  #   content_md5: "ContentMD5",
  #   })
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#198
  def put(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {BucketLogging}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_logging.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#52
  def reload; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#152
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#223
  def extract_bucket_name(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_logging.rb#234
class Aws::S3::BucketLogging::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#9
class Aws::S3::BucketNotification
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [BucketNotification] a new instance of BucketNotification
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#19
  def initialize(*args); end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#255
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#29
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#57
  def client; end

  # @return [Types::NotificationConfiguration] Returns the data for this {BucketNotification}. Calls
  #   {Client#get_bucket_notification_configuration} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#77
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#85
  def data_loaded?; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#264
  def deprecated_identifiers; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Describes the AWS Lambda functions to invoke and the events for which
  # to invoke them.
  #
  # @return [Array<Types::LambdaFunctionConfiguration>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#50
  def lambda_function_configurations; end

  # Loads, or reloads {#data} for the current {BucketNotification}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_notification.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#67
  def load; end

  # @example Request syntax with placeholder values
  #
  #   bucket_notification.put({
  #   notification_configuration: { # required
  #   topic_configurations: [
  #   {
  #   id: "NotificationId",
  #   topic_arn: "TopicArn", # required
  #   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   filter: {
  #   key: {
  #   filter_rules: [
  #   {
  #   name: "prefix", # accepts prefix, suffix
  #   value: "FilterRuleValue",
  #   },
  #   ],
  #   },
  #   },
  #   },
  #   ],
  #   queue_configurations: [
  #   {
  #   id: "NotificationId",
  #   queue_arn: "QueueArn", # required
  #   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   filter: {
  #   key: {
  #   filter_rules: [
  #   {
  #   name: "prefix", # accepts prefix, suffix
  #   value: "FilterRuleValue",
  #   },
  #   ],
  #   },
  #   },
  #   },
  #   ],
  #   lambda_function_configurations: [
  #   {
  #   id: "NotificationId",
  #   lambda_function_arn: "LambdaFunctionArn", # required
  #   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   filter: {
  #   key: {
  #   filter_rules: [
  #   {
  #   name: "prefix", # accepts prefix, suffix
  #   value: "FilterRuleValue",
  #   },
  #   ],
  #   },
  #   },
  #   },
  #   ],
  #   },
  #   })
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#246
  def put(options = T.unsafe(nil)); end

  # The Amazon Simple Queue Service queues to publish messages to and the
  # events for which to publish messages.
  #
  # @return [Array<Types::QueueConfiguration>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#43
  def queue_configurations; end

  # Loads, or reloads {#data} for the current {BucketNotification}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_notification.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#67
  def reload; end

  # The topic to which notifications are sent and the events for which
  # notifications are generated.
  #
  # @return [Array<Types::TopicConfiguration>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#36
  def topic_configurations; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#167
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#271
  def extract_bucket_name(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_notification.rb#282
class Aws::S3::BucketNotification::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#9
class Aws::S3::BucketPolicy
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [BucketPolicy] a new instance of BucketPolicy
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#19
  def initialize(*args); end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#206
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#29
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#42
  def client; end

  # @return [Types::GetBucketPolicyOutput] Returns the data for this {BucketPolicy}. Calls
  #   {Client#get_bucket_policy} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#62
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#70
  def data_loaded?; end

  # @example Request syntax with placeholder values
  #
  #   bucket_policy.delete()
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#176
  def delete(options = T.unsafe(nil)); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#215
  def deprecated_identifiers; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Loads, or reloads {#data} for the current {BucketPolicy}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_policy.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#52
  def load; end

  # The bucket policy as a JSON document.
  #
  # @return [IO]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#35
  def policy; end

  # @example Request syntax with placeholder values
  #
  #   bucket_policy.put({
  #   content_md5: "ContentMD5",
  #   confirm_remove_self_bucket_access: false,
  #   policy: "Policy", # required
  #   })
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#197
  def put(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {BucketPolicy}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_policy.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#52
  def reload; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#152
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#222
  def extract_bucket_name(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_policy.rb#233
class Aws::S3::BucketPolicy::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_region_cache.rb#5
class Aws::S3::BucketRegionCache
  # @return [BucketRegionCache] a new instance of BucketRegionCache
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_region_cache.rb#7
  def initialize; end

  # @api private
  # @param bucket_name [String]
  # @return [String, nil] Returns the cached region for the named bucket.
  #   Returns `nil` if the bucket is not in the cache.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_region_cache.rb#43
  def [](bucket_name); end

  # Caches a bucket's region. Calling this method will trigger each
  # of the {#bucket_added} listener callbacks.
  #
  # @api private
  # @param bucket_name [String]
  # @param region_name [String]
  # @return [void]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_region_cache.rb#53
  def []=(bucket_name, region_name); end

  # Registers a block as a callback. This listener is called when a
  # new bucket/region pair is added to the cache.
  #
  #     S3::BUCKET_REGIONS.bucket_added do |bucket_name, region_name|
  #       # ...
  #     end
  #
  # This happens when a request is made against the classic endpoint,
  # "s3.amazonaws.com" and an error is returned requiring the request
  # to be resent with Signature Version 4. At this point, multiple
  # requests are made to discover the bucket region so that a v4
  # signature can be generated.
  #
  # An application can register listeners here to avoid these extra
  # requests in the future. By constructing an {S3::Client} with
  # the proper region, a proper signature can be generated and redirects
  # avoided.
  #
  # @return [void]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_region_cache.rb#31
  def bucket_added(&block); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_region_cache.rb#61
  def clear; end

  # @return [Hash] Returns a hash of cached bucket names and region names.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_region_cache.rb#66
  def to_h; end

  # @return [Hash] Returns a hash of cached bucket names and region names.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_region_cache.rb#66
  def to_hash; end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#9
class Aws::S3::BucketRequestPayment
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [BucketRequestPayment] a new instance of BucketRequestPayment
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#19
  def initialize(*args); end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#192
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#29
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#42
  def client; end

  # @return [Types::GetBucketRequestPaymentOutput] Returns the data for this {BucketRequestPayment}. Calls
  #   {Client#get_bucket_request_payment} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#62
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#70
  def data_loaded?; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#201
  def deprecated_identifiers; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Loads, or reloads {#data} for the current {BucketRequestPayment}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_request_payment.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#52
  def load; end

  # Specifies who pays for the download and request fees.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#35
  def payer; end

  # @example Request syntax with placeholder values
  #
  #   bucket_request_payment.put({
  #   content_md5: "ContentMD5",
  #   request_payment_configuration: { # required
  #   payer: "Requester", # required, accepts Requester, BucketOwner
  #   },
  #   })
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#183
  def put(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {BucketRequestPayment}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_request_payment.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#52
  def reload; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#152
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#208
  def extract_bucket_name(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_request_payment.rb#219
class Aws::S3::BucketRequestPayment::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#9
class Aws::S3::BucketTagging
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [BucketTagging] a new instance of BucketTagging
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#19
  def initialize(*args); end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#208
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#29
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#42
  def client; end

  # @return [Types::GetBucketTaggingOutput] Returns the data for this {BucketTagging}. Calls
  #   {Client#get_bucket_tagging} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#62
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#70
  def data_loaded?; end

  # @example Request syntax with placeholder values
  #
  #   bucket_tagging.delete()
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#176
  def delete(options = T.unsafe(nil)); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#217
  def deprecated_identifiers; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Loads, or reloads {#data} for the current {BucketTagging}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_tagging.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#52
  def load; end

  # @example Request syntax with placeholder values
  #
  #   bucket_tagging.put({
  #   content_md5: "ContentMD5",
  #   tagging: { # required
  #   tag_set: [ # required
  #   {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   ],
  #   },
  #   })
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#199
  def put(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {BucketTagging}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_tagging.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#52
  def reload; end

  # @return [Array<Types::Tag>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#35
  def tag_set; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#152
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#224
  def extract_bucket_name(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_tagging.rb#235
class Aws::S3::BucketTagging::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#9
class Aws::S3::BucketVersioning
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [BucketVersioning] a new instance of BucketVersioning
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#19
  def initialize(*args); end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#252
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#29
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#51
  def client; end

  # @return [Types::GetBucketVersioningOutput] Returns the data for this {BucketVersioning}. Calls
  #   {Client#get_bucket_versioning} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#71
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#79
  def data_loaded?; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#261
  def deprecated_identifiers; end

  # @example Request syntax with placeholder values
  #
  #   bucket_versioning.enable({
  #   content_md5: "ContentMD5",
  #   mfa: "MFA",
  #   })
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#192
  def enable(options = T.unsafe(nil)); end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Loads, or reloads {#data} for the current {BucketVersioning}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_versioning.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#61
  def load; end

  # Specifies whether MFA delete is enabled in the bucket versioning
  # configuration. This element is only returned if the bucket has been
  # configured with MFA delete. If the bucket has never been so
  # configured, this element is not returned.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#44
  def mfa_delete; end

  # @example Request syntax with placeholder values
  #
  #   bucket_versioning.put({
  #   content_md5: "ContentMD5",
  #   mfa: "MFA",
  #   versioning_configuration: { # required
  #   mfa_delete: "Enabled", # accepts Enabled, Disabled
  #   status: "Enabled", # accepts Enabled, Suspended
  #   },
  #   })
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#220
  def put(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {BucketVersioning}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_versioning.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#61
  def reload; end

  # The versioning state of the bucket.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#35
  def status; end

  # @example Request syntax with placeholder values
  #
  #   bucket_versioning.suspend({
  #   content_md5: "ContentMD5",
  #   mfa: "MFA",
  #   })
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#238
  def suspend(options = T.unsafe(nil)); end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#161
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#268
  def extract_bucket_name(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_versioning.rb#279
class Aws::S3::BucketVersioning::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#9
class Aws::S3::BucketWebsite
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [BucketWebsite] a new instance of BucketWebsite
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#19
  def initialize(*args); end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#245
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#29
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#60
  def client; end

  # @return [Types::GetBucketWebsiteOutput] Returns the data for this {BucketWebsite}. Calls
  #   {Client#get_bucket_website} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#80
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#88
  def data_loaded?; end

  # @example Request syntax with placeholder values
  #
  #   bucket_website.delete()
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#194
  def delete(options = T.unsafe(nil)); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#254
  def deprecated_identifiers; end

  # @return [Types::ErrorDocument]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#47
  def error_document; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # @return [Types::IndexDocument]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#41
  def index_document; end

  # Loads, or reloads {#data} for the current {BucketWebsite}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_website.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#70
  def load; end

  # @example Request syntax with placeholder values
  #
  #   bucket_website.put({
  #   content_md5: "ContentMD5",
  #   website_configuration: { # required
  #   error_document: {
  #   key: "ObjectKey", # required
  #   },
  #   index_document: {
  #   suffix: "Suffix", # required
  #   },
  #   redirect_all_requests_to: {
  #   host_name: "HostName", # required
  #   protocol: "http", # accepts http, https
  #   },
  #   routing_rules: [
  #   {
  #   condition: {
  #   http_error_code_returned_equals: "HttpErrorCodeReturnedEquals",
  #   key_prefix_equals: "KeyPrefixEquals",
  #   },
  #   redirect: { # required
  #   host_name: "HostName",
  #   http_redirect_code: "HttpRedirectCode",
  #   protocol: "http", # accepts http, https
  #   replace_key_prefix_with: "ReplaceKeyPrefixWith",
  #   replace_key_with: "ReplaceKeyWith",
  #   },
  #   },
  #   ],
  #   },
  #   })
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [EmptyStructure]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#236
  def put(options = T.unsafe(nil)); end

  # @return [Types::RedirectAllRequestsTo]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#35
  def redirect_all_requests_to; end

  # Loads, or reloads {#data} for the current {BucketWebsite}.
  # Returns `self` making it possible to chain methods.
  #
  #     bucket_website.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#70
  def reload; end

  # @return [Array<Types::RoutingRule>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#53
  def routing_rules; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#170
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#261
  def extract_bucket_name(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/bucket_website.rb#272
class Aws::S3::BucketWebsite::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#47
class Aws::S3::Client < ::Seahorse::Client::Base
  include ::Aws::ClientStubs

  # @overload initialize
  # @return [Client] a new instance of Client
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#316
  def initialize(*args); end

  # Aborts a multipart upload.
  #
  # To verify that all parts have been removed, so you don't get charged
  # for the part storage, you should call the List Parts operation and
  # ensure the parts list is empty.
  #
  # @example Response structure
  #
  #   resp.request_charged #=> String, one of "requester"
  # @example Example: To abort a multipart upload
  #
  #   # The following example aborts a multipart upload.
  #
  #   resp = client.abort_multipart_upload({
  #   bucket: "examplebucket",
  #   key: "bigobject",
  #   upload_id: "xadcOB_7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.abort_multipart_upload({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   upload_id: "MultipartUploadId", # required
  #   request_payer: "requester", # accepts requester
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload abort_multipart_upload
  # @param params [Hash] ({})
  # @return [Types::AbortMultipartUploadOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::AbortMultipartUploadOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AbortMultipartUpload AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#380
  def abort_multipart_upload(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # @api private
  # @param params [{}]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#7093
  def build_request(operation_name, params = T.unsafe(nil)); end

  # Completes a multipart upload by assembling previously uploaded parts.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.complete_multipart_upload({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   multipart_upload: {
  #   parts: [
  #   {
  #   etag: "ETag",
  #   part_number: 1,
  #   },
  #   ],
  #   },
  #   upload_id: "MultipartUploadId", # required
  #   request_payer: "requester", # accepts requester
  #   })
  # @example Example: To complete multipart upload
  #
  #   # The following example completes a multipart upload.
  #
  #   resp = client.complete_multipart_upload({
  #   bucket: "examplebucket",
  #   key: "bigobject",
  #   multipart_upload: {
  #   parts: [
  #   {
  #   etag: "\"d8c2eafd90c266e19ab9dcacc479f8af\"",
  #   part_number: 1,
  #   },
  #   {
  #   etag: "\"d8c2eafd90c266e19ab9dcacc479f8af\"",
  #   part_number: 2,
  #   },
  #   ],
  #   },
  #   upload_id: "7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   bucket: "acexamplebucket",
  #   etag: "\"4d9031c7644d8081c2829f4ea23c55f7-2\"",
  #   key: "bigobject",
  #   location: "https://examplebucket.s3.amazonaws.com/bigobject",
  #   }
  # @example Response structure
  #
  #   resp.location #=> String
  #   resp.bucket #=> String
  #   resp.key #=> String
  #   resp.expiration #=> String
  #   resp.etag #=> String
  #   resp.server_side_encryption #=> String, one of "AES256", "aws:kms"
  #   resp.version_id #=> String
  #   resp.ssekms_key_id #=> String
  #   resp.request_charged #=> String, one of "requester"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload complete_multipart_upload
  # @param params [Hash] ({})
  # @return [Types::CompleteMultipartUploadOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CompleteMultipartUploadOutput#location #location} => String
  #   * {Types::CompleteMultipartUploadOutput#bucket #bucket} => String
  #   * {Types::CompleteMultipartUploadOutput#key #key} => String
  #   * {Types::CompleteMultipartUploadOutput#expiration #expiration} => String
  #   * {Types::CompleteMultipartUploadOutput#etag #etag} => String
  #   * {Types::CompleteMultipartUploadOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::CompleteMultipartUploadOutput#version_id #version_id} => String
  #   * {Types::CompleteMultipartUploadOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::CompleteMultipartUploadOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CompleteMultipartUpload AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#478
  def complete_multipart_upload(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a copy of an object that is already stored in Amazon S3.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.copy_object({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   bucket: "BucketName", # required
  #   cache_control: "CacheControl",
  #   content_disposition: "ContentDisposition",
  #   content_encoding: "ContentEncoding",
  #   content_language: "ContentLanguage",
  #   content_type: "ContentType",
  #   copy_source: "CopySource", # required
  #   copy_source_if_match: "CopySourceIfMatch",
  #   copy_source_if_modified_since: Time.now,
  #   copy_source_if_none_match: "CopySourceIfNoneMatch",
  #   copy_source_if_unmodified_since: Time.now,
  #   expires: Time.now,
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write_acp: "GrantWriteACP",
  #   key: "ObjectKey", # required
  #   metadata: {
  #   "MetadataKey" => "MetadataValue",
  #   },
  #   metadata_directive: "COPY", # accepts COPY, REPLACE
  #   tagging_directive: "COPY", # accepts COPY, REPLACE
  #   server_side_encryption: "AES256", # accepts AES256, aws:kms
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   website_redirect_location: "WebsiteRedirectLocation",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   ssekms_key_id: "SSEKMSKeyId",
  #   ssekms_encryption_context: "SSEKMSEncryptionContext",
  #   copy_source_sse_customer_algorithm: "CopySourceSSECustomerAlgorithm",
  #   copy_source_sse_customer_key: "CopySourceSSECustomerKey",
  #   copy_source_sse_customer_key_md5: "CopySourceSSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   tagging: "TaggingHeader",
  #   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   object_lock_retain_until_date: Time.now,
  #   object_lock_legal_hold_status: "ON", # accepts ON, OFF
  #   })
  # @example Response structure
  #
  #   resp.copy_object_result.etag #=> String
  #   resp.copy_object_result.last_modified #=> Time
  #   resp.expiration #=> String
  #   resp.copy_source_version_id #=> String
  #   resp.version_id #=> String
  #   resp.server_side_encryption #=> String, one of "AES256", "aws:kms"
  #   resp.sse_customer_algorithm #=> String
  #   resp.sse_customer_key_md5 #=> String
  #   resp.ssekms_key_id #=> String
  #   resp.ssekms_encryption_context #=> String
  #   resp.request_charged #=> String, one of "requester"
  # @example Example: To copy an object
  #
  #   # The following example copies an object from one bucket to another.
  #
  #   resp = client.copy_object({
  #   bucket: "destinationbucket",
  #   copy_source: "/sourcebucket/HappyFacejpg",
  #   key: "HappyFaceCopyjpg",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   copy_object_result: {
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   last_modified: Time.parse("2016-12-15T17:38:53.000Z"),
  #   },
  #   }
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload copy_object
  # @param params [Hash] ({})
  # @return [Types::CopyObjectOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CopyObjectOutput#copy_object_result #copy_object_result} => Types::CopyObjectResult
  #   * {Types::CopyObjectOutput#expiration #expiration} => String
  #   * {Types::CopyObjectOutput#copy_source_version_id #copy_source_version_id} => String
  #   * {Types::CopyObjectOutput#version_id #version_id} => String
  #   * {Types::CopyObjectOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::CopyObjectOutput#sse_customer_algorithm #sse_customer_algorithm} => String
  #   * {Types::CopyObjectOutput#sse_customer_key_md5 #sse_customer_key_md5} => String
  #   * {Types::CopyObjectOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::CopyObjectOutput#ssekms_encryption_context #ssekms_encryption_context} => String
  #   * {Types::CopyObjectOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CopyObject AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#724
  def copy_object(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a new bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.create_bucket({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read
  #   bucket: "BucketName", # required
  #   create_bucket_configuration: {
  #   location_constraint: "EU", # accepts EU, eu-west-1, us-west-1, us-west-2, ap-south-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1, cn-north-1, eu-central-1
  #   },
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write: "GrantWrite",
  #   grant_write_acp: "GrantWriteACP",
  #   object_lock_enabled_for_bucket: false,
  #   })
  # @example Response structure
  #
  #   resp.location #=> String
  # @example Example: To create a bucket
  #
  #   # The following example creates a bucket.
  #
  #   resp = client.create_bucket({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   location: "/examplebucket",
  #   }
  # @example Example: To create a bucket in a specific region
  #
  #   # The following example creates a bucket. The request specifies an AWS region where to create the bucket.
  #
  #   resp = client.create_bucket({
  #   bucket: "examplebucket",
  #   create_bucket_configuration: {
  #   location_constraint: "eu-west-1",
  #   },
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   location: "http://examplebucket.s3.amazonaws.com/",
  #   }
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload create_bucket
  # @param params [Hash] ({})
  # @return [Types::CreateBucketOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CreateBucketOutput#location #location} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CreateBucket AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#817
  def create_bucket(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Initiates a multipart upload and returns an upload ID.
  #
  # **Note:** After you initiate multipart upload and upload one or more
  # parts, you must either complete or abort multipart upload in order to
  # stop getting charged for storage of the uploaded parts. Only after you
  # either complete or abort multipart upload, Amazon S3 frees up the
  # parts storage and stops charging you for the parts storage.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.create_multipart_upload({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   bucket: "BucketName", # required
  #   cache_control: "CacheControl",
  #   content_disposition: "ContentDisposition",
  #   content_encoding: "ContentEncoding",
  #   content_language: "ContentLanguage",
  #   content_type: "ContentType",
  #   expires: Time.now,
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write_acp: "GrantWriteACP",
  #   key: "ObjectKey", # required
  #   metadata: {
  #   "MetadataKey" => "MetadataValue",
  #   },
  #   server_side_encryption: "AES256", # accepts AES256, aws:kms
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   website_redirect_location: "WebsiteRedirectLocation",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   ssekms_key_id: "SSEKMSKeyId",
  #   ssekms_encryption_context: "SSEKMSEncryptionContext",
  #   request_payer: "requester", # accepts requester
  #   tagging: "TaggingHeader",
  #   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   object_lock_retain_until_date: Time.now,
  #   object_lock_legal_hold_status: "ON", # accepts ON, OFF
  #   })
  # @example Response structure
  #
  #   resp.abort_date #=> Time
  #   resp.abort_rule_id #=> String
  #   resp.bucket #=> String
  #   resp.key #=> String
  #   resp.upload_id #=> String
  #   resp.server_side_encryption #=> String, one of "AES256", "aws:kms"
  #   resp.sse_customer_algorithm #=> String
  #   resp.sse_customer_key_md5 #=> String
  #   resp.ssekms_key_id #=> String
  #   resp.ssekms_encryption_context #=> String
  #   resp.request_charged #=> String, one of "requester"
  # @example Example: To initiate a multipart upload
  #
  #   # The following example initiates a multipart upload.
  #
  #   resp = client.create_multipart_upload({
  #   bucket: "examplebucket",
  #   key: "largeobject",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   bucket: "examplebucket",
  #   key: "largeobject",
  #   upload_id: "ibZBv_75gd9r8lH_gqXatLdxMVpAlj6ZQjEs.OwyF3953YdwbcQnMA2BLGn8Lx12fQNICtMw5KyteFeHw.Sjng--",
  #   }
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload create_multipart_upload
  # @param params [Hash] ({})
  # @return [Types::CreateMultipartUploadOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CreateMultipartUploadOutput#abort_date #abort_date} => Time
  #   * {Types::CreateMultipartUploadOutput#abort_rule_id #abort_rule_id} => String
  #   * {Types::CreateMultipartUploadOutput#bucket #bucket} => String
  #   * {Types::CreateMultipartUploadOutput#key #key} => String
  #   * {Types::CreateMultipartUploadOutput#upload_id #upload_id} => String
  #   * {Types::CreateMultipartUploadOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::CreateMultipartUploadOutput#sse_customer_algorithm #sse_customer_algorithm} => String
  #   * {Types::CreateMultipartUploadOutput#sse_customer_key_md5 #sse_customer_key_md5} => String
  #   * {Types::CreateMultipartUploadOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::CreateMultipartUploadOutput#ssekms_encryption_context #ssekms_encryption_context} => String
  #   * {Types::CreateMultipartUploadOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CreateMultipartUpload AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1018
  def create_multipart_upload(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes the bucket. All objects (including all object versions and
  # Delete Markers) in the bucket must be deleted before the bucket itself
  # can be deleted.
  #
  # @example Example: To delete a bucket
  #
  #   # The following example deletes the specified bucket.
  #
  #   resp = client.delete_bucket({
  #   bucket: "forrandall2",
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_bucket({
  #   bucket: "BucketName", # required
  #   })
  # @option params
  # @overload delete_bucket
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucket AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1050
  def delete_bucket(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes an analytics configuration for the bucket (specified by the
  # analytics configuration ID).
  #
  # To use this operation, you must have permissions to perform the
  # s3:PutAnalyticsConfiguration action. The bucket owner has this
  # permission by default. The bucket owner can grant this permission to
  # others.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_bucket_analytics_configuration({
  #   bucket: "BucketName", # required
  #   id: "AnalyticsId", # required
  #   })
  # @option params
  # @option params
  # @overload delete_bucket_analytics_configuration
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketAnalyticsConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1083
  def delete_bucket_analytics_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes the CORS configuration information set for the bucket.
  #
  # @example Example: To delete cors configuration on a bucket.
  #
  #   # The following example deletes CORS configuration on a bucket.
  #
  #   resp = client.delete_bucket_cors({
  #   bucket: "examplebucket",
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_bucket_cors({
  #   bucket: "BucketName", # required
  #   })
  # @option params
  # @overload delete_bucket_cors
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketCors AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1113
  def delete_bucket_cors(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes the server-side encryption configuration from the bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_bucket_encryption({
  #   bucket: "BucketName", # required
  #   })
  # @option params
  # @overload delete_bucket_encryption
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketEncryption AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1136
  def delete_bucket_encryption(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes an inventory configuration (identified by the inventory ID)
  # from the bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_bucket_inventory_configuration({
  #   bucket: "BucketName", # required
  #   id: "InventoryId", # required
  #   })
  # @option params
  # @option params
  # @overload delete_bucket_inventory_configuration
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketInventoryConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1164
  def delete_bucket_inventory_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes the lifecycle configuration from the bucket.
  #
  # @example Example: To delete lifecycle configuration on a bucket.
  #
  #   # The following example deletes lifecycle configuration on a bucket.
  #
  #   resp = client.delete_bucket_lifecycle({
  #   bucket: "examplebucket",
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_bucket_lifecycle({
  #   bucket: "BucketName", # required
  #   })
  # @option params
  # @overload delete_bucket_lifecycle
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketLifecycle AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1194
  def delete_bucket_lifecycle(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes a metrics configuration (specified by the metrics
  # configuration ID) from the bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_bucket_metrics_configuration({
  #   bucket: "BucketName", # required
  #   id: "MetricsId", # required
  #   })
  # @option params
  # @option params
  # @overload delete_bucket_metrics_configuration
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketMetricsConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1221
  def delete_bucket_metrics_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes the policy from the bucket.
  #
  # @example Example: To delete bucket policy
  #
  #   # The following example deletes bucket policy on the specified bucket.
  #
  #   resp = client.delete_bucket_policy({
  #   bucket: "examplebucket",
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_bucket_policy({
  #   bucket: "BucketName", # required
  #   })
  # @option params
  # @overload delete_bucket_policy
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketPolicy AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1251
  def delete_bucket_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes the replication configuration from the bucket. For information
  # about replication configuration, see [Cross-Region Replication
  # (CRR)][1] in the *Amazon S3 Developer Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html
  #
  # @example Example: To delete bucket replication configuration
  #
  #   # The following example deletes replication configuration set on bucket.
  #
  #   resp = client.delete_bucket_replication({
  #   bucket: "example",
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_bucket_replication({
  #   bucket: "BucketName", # required
  #   })
  # @option params
  # @overload delete_bucket_replication
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketReplication AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1293
  def delete_bucket_replication(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes the tags from the bucket.
  #
  # @example Example: To delete bucket tags
  #
  #   # The following example deletes bucket tags.
  #
  #   resp = client.delete_bucket_tagging({
  #   bucket: "examplebucket",
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_bucket_tagging({
  #   bucket: "BucketName", # required
  #   })
  # @option params
  # @overload delete_bucket_tagging
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketTagging AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1323
  def delete_bucket_tagging(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # This operation removes the website configuration from the bucket.
  #
  # @example Example: To delete bucket website configuration
  #
  #   # The following example deletes bucket website configuration.
  #
  #   resp = client.delete_bucket_website({
  #   bucket: "examplebucket",
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_bucket_website({
  #   bucket: "BucketName", # required
  #   })
  # @option params
  # @overload delete_bucket_website
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketWebsite AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1353
  def delete_bucket_website(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Removes the null version (if there is one) of an object and inserts a
  # delete marker, which becomes the latest version of the object. If
  # there isn't a null version, Amazon S3 does not remove any objects.
  #
  # @example Response structure
  #
  #   resp.delete_marker #=> Boolean
  #   resp.version_id #=> String
  #   resp.request_charged #=> String, one of "requester"
  # @example Example: To delete an object (from a non-versioned bucket)
  #
  #   # The following example deletes an object from a non-versioned bucket.
  #
  #   resp = client.delete_object({
  #   bucket: "ExampleBucket",
  #   key: "HappyFace.jpg",
  #   })
  # @example Example: To delete an object
  #
  #   # The following example deletes an object from an S3 bucket.
  #
  #   resp = client.delete_object({
  #   bucket: "examplebucket",
  #   key: "objectkey.jpg",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_object({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   mfa: "MFA",
  #   version_id: "ObjectVersionId",
  #   request_payer: "requester", # accepts requester
  #   bypass_governance_retention: false,
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload delete_object
  # @param params [Hash] ({})
  # @return [Types::DeleteObjectOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DeleteObjectOutput#delete_marker #delete_marker} => Boolean
  #   * {Types::DeleteObjectOutput#version_id #version_id} => String
  #   * {Types::DeleteObjectOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObject AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1434
  def delete_object(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Removes the tag-set from an existing object.
  #
  # @example Example: To remove tag set from an object version
  #
  #   # The following example removes tag set associated with the specified object version. The request specifies both the
  #   # object key and object version.
  #
  #   resp = client.delete_object_tagging({
  #   bucket: "examplebucket",
  #   key: "HappyFace.jpg",
  #   version_id: "ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   version_id: "ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI",
  #   }
  # @example Example: To remove tag set from an object
  #
  #   # The following example removes tag set associated with the specified object. If the bucket is versioning enabled, the
  #   # operation removes tag set from the latest object version.
  #
  #   resp = client.delete_object_tagging({
  #   bucket: "examplebucket",
  #   key: "HappyFace.jpg",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   version_id: "null",
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_object_tagging({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   version_id: "ObjectVersionId",
  #   })
  # @example Response structure
  #
  #   resp.version_id #=> String
  # @option params
  # @option params
  # @option params
  # @overload delete_object_tagging
  # @param params [Hash] ({})
  # @return [Types::DeleteObjectTaggingOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DeleteObjectTaggingOutput#version_id #version_id} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjectTagging AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1500
  def delete_object_tagging(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # This operation enables you to delete multiple objects from a bucket
  # using a single HTTP request. You may specify up to 1000 keys.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_objects({
  #   bucket: "BucketName", # required
  #   delete: { # required
  #   objects: [ # required
  #   {
  #   key: "ObjectKey", # required
  #   version_id: "ObjectVersionId",
  #   },
  #   ],
  #   quiet: false,
  #   },
  #   mfa: "MFA",
  #   request_payer: "requester", # accepts requester
  #   bypass_governance_retention: false,
  #   })
  # @example Example: To delete multiple object versions from a versioned bucket
  #
  #   # The following example deletes objects from a bucket. The request specifies object versions. S3 deletes specific object
  #   # versions and returns the key and versions of deleted objects in the response.
  #
  #   resp = client.delete_objects({
  #   bucket: "examplebucket",
  #   delete: {
  #   objects: [
  #   {
  #   key: "HappyFace.jpg",
  #   version_id: "2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b",
  #   },
  #   {
  #   key: "HappyFace.jpg",
  #   version_id: "yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd",
  #   },
  #   ],
  #   quiet: false,
  #   },
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   deleted: [
  #   {
  #   key: "HappyFace.jpg",
  #   version_id: "yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd",
  #   },
  #   {
  #   key: "HappyFace.jpg",
  #   version_id: "2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b",
  #   },
  #   ],
  #   }
  # @example Response structure
  #
  #   resp.deleted #=> Array
  #   resp.deleted[0].key #=> String
  #   resp.deleted[0].version_id #=> String
  #   resp.deleted[0].delete_marker #=> Boolean
  #   resp.deleted[0].delete_marker_version_id #=> String
  #   resp.request_charged #=> String, one of "requester"
  #   resp.errors #=> Array
  #   resp.errors[0].key #=> String
  #   resp.errors[0].version_id #=> String
  #   resp.errors[0].code #=> String
  #   resp.errors[0].message #=> String
  # @example Example: To delete multiple objects from a versioned bucket
  #
  #   # The following example deletes objects from a bucket. The bucket is versioned, and the request does not specify the
  #   # object version to delete. In this case, all versions remain in the bucket and S3 adds a delete marker.
  #
  #   resp = client.delete_objects({
  #   bucket: "examplebucket",
  #   delete: {
  #   objects: [
  #   {
  #   key: "objectkey1",
  #   },
  #   {
  #   key: "objectkey2",
  #   },
  #   ],
  #   quiet: false,
  #   },
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   deleted: [
  #   {
  #   delete_marker: true,
  #   delete_marker_version_id: "A._w1z6EFiCF5uhtQMDal9JDkID9tQ7F",
  #   key: "objectkey1",
  #   },
  #   {
  #   delete_marker: true,
  #   delete_marker_version_id: "iOd_ORxhkKe_e8G8_oSGxt2PjsCZKlkt",
  #   key: "objectkey2",
  #   },
  #   ],
  #   }
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload delete_objects
  # @param params [Hash] ({})
  # @return [Types::DeleteObjectsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DeleteObjectsOutput#deleted #deleted} => Array&lt;Types::DeletedObject&gt;
  #   * {Types::DeleteObjectsOutput#request_charged #request_charged} => String
  #   * {Types::DeleteObjectsOutput#errors #errors} => Array&lt;Types::Error&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjects AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1643
  def delete_objects(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Removes the `PublicAccessBlock` configuration from an Amazon S3
  # bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_public_access_block({
  #   bucket: "BucketName", # required
  #   })
  # @option params
  # @overload delete_public_access_block
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeletePublicAccessBlock AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1667
  def delete_public_access_block(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the accelerate configuration of a bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_accelerate_configuration({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.status #=> String, one of "Enabled", "Suspended"
  # @option params
  # @overload get_bucket_accelerate_configuration
  # @param params [Hash] ({})
  # @return [Types::GetBucketAccelerateConfigurationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketAccelerateConfigurationOutput#status #status} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAccelerateConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1696
  def get_bucket_accelerate_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets the access control policy for the bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_acl({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.owner.display_name #=> String
  #   resp.owner.id #=> String
  #   resp.grants #=> Array
  #   resp.grants[0].grantee.display_name #=> String
  #   resp.grants[0].grantee.email_address #=> String
  #   resp.grants[0].grantee.id #=> String
  #   resp.grants[0].grantee.type #=> String, one of "CanonicalUser", "AmazonCustomerByEmail", "Group"
  #   resp.grants[0].grantee.uri #=> String
  #   resp.grants[0].permission #=> String, one of "FULL_CONTROL", "WRITE", "WRITE_ACP", "READ", "READ_ACP"
  # @option params
  # @overload get_bucket_acl
  # @param params [Hash] ({})
  # @return [Types::GetBucketAclOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketAclOutput#owner #owner} => Types::Owner
  #   * {Types::GetBucketAclOutput#grants #grants} => Array&lt;Types::Grant&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAcl AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1732
  def get_bucket_acl(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets an analytics configuration for the bucket (specified by the
  # analytics configuration ID).
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_analytics_configuration({
  #   bucket: "BucketName", # required
  #   id: "AnalyticsId", # required
  #   })
  # @example Response structure
  #
  #   resp.analytics_configuration.id #=> String
  #   resp.analytics_configuration.filter.prefix #=> String
  #   resp.analytics_configuration.filter.tag.key #=> String
  #   resp.analytics_configuration.filter.tag.value #=> String
  #   resp.analytics_configuration.filter.and.prefix #=> String
  #   resp.analytics_configuration.filter.and.tags #=> Array
  #   resp.analytics_configuration.filter.and.tags[0].key #=> String
  #   resp.analytics_configuration.filter.and.tags[0].value #=> String
  #   resp.analytics_configuration.storage_class_analysis.data_export.output_schema_version #=> String, one of "V_1"
  #   resp.analytics_configuration.storage_class_analysis.data_export.destination.s3_bucket_destination.format #=> String, one of "CSV"
  #   resp.analytics_configuration.storage_class_analysis.data_export.destination.s3_bucket_destination.bucket_account_id #=> String
  #   resp.analytics_configuration.storage_class_analysis.data_export.destination.s3_bucket_destination.bucket #=> String
  #   resp.analytics_configuration.storage_class_analysis.data_export.destination.s3_bucket_destination.prefix #=> String
  # @option params
  # @option params
  # @overload get_bucket_analytics_configuration
  # @param params [Hash] ({})
  # @return [Types::GetBucketAnalyticsConfigurationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketAnalyticsConfigurationOutput#analytics_configuration #analytics_configuration} => Types::AnalyticsConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAnalyticsConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1778
  def get_bucket_analytics_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the CORS configuration for the bucket.
  #
  # @example Example: To get cors configuration set on a bucket
  #
  #   # The following example returns cross-origin resource sharing (CORS) configuration set on a bucket.
  #
  #   resp = client.get_bucket_cors({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   cors_rules: [
  #   {
  #   allowed_headers: [
  #   "Authorization",
  #   ],
  #   allowed_methods: [
  #   "GET",
  #   ],
  #   allowed_origins: [
  #   "*",
  #   ],
  #   max_age_seconds: 3000,
  #   },
  #   ],
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_cors({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.cors_rules #=> Array
  #   resp.cors_rules[0].allowed_headers #=> Array
  #   resp.cors_rules[0].allowed_headers[0] #=> String
  #   resp.cors_rules[0].allowed_methods #=> Array
  #   resp.cors_rules[0].allowed_methods[0] #=> String
  #   resp.cors_rules[0].allowed_origins #=> Array
  #   resp.cors_rules[0].allowed_origins[0] #=> String
  #   resp.cors_rules[0].expose_headers #=> Array
  #   resp.cors_rules[0].expose_headers[0] #=> String
  #   resp.cors_rules[0].max_age_seconds #=> Integer
  # @option params
  # @overload get_bucket_cors
  # @param params [Hash] ({})
  # @return [Types::GetBucketCorsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketCorsOutput#cors_rules #cors_rules} => Array&lt;Types::CORSRule&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketCors AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1841
  def get_bucket_cors(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the server-side encryption configuration of a bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_encryption({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.server_side_encryption_configuration.rules #=> Array
  #   resp.server_side_encryption_configuration.rules[0].apply_server_side_encryption_by_default.sse_algorithm #=> String, one of "AES256", "aws:kms"
  #   resp.server_side_encryption_configuration.rules[0].apply_server_side_encryption_by_default.kms_master_key_id #=> String
  # @option params
  # @overload get_bucket_encryption
  # @param params [Hash] ({})
  # @return [Types::GetBucketEncryptionOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketEncryptionOutput#server_side_encryption_configuration #server_side_encryption_configuration} => Types::ServerSideEncryptionConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketEncryption AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1872
  def get_bucket_encryption(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns an inventory configuration (identified by the inventory ID)
  # from the bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_inventory_configuration({
  #   bucket: "BucketName", # required
  #   id: "InventoryId", # required
  #   })
  # @example Response structure
  #
  #   resp.inventory_configuration.destination.s3_bucket_destination.account_id #=> String
  #   resp.inventory_configuration.destination.s3_bucket_destination.bucket #=> String
  #   resp.inventory_configuration.destination.s3_bucket_destination.format #=> String, one of "CSV", "ORC", "Parquet"
  #   resp.inventory_configuration.destination.s3_bucket_destination.prefix #=> String
  #   resp.inventory_configuration.destination.s3_bucket_destination.encryption.ssekms.key_id #=> String
  #   resp.inventory_configuration.is_enabled #=> Boolean
  #   resp.inventory_configuration.filter.prefix #=> String
  #   resp.inventory_configuration.id #=> String
  #   resp.inventory_configuration.included_object_versions #=> String, one of "All", "Current"
  #   resp.inventory_configuration.optional_fields #=> Array
  #   resp.inventory_configuration.optional_fields[0] #=> String, one of "Size", "LastModifiedDate", "StorageClass", "ETag", "IsMultipartUploaded", "ReplicationStatus", "EncryptionStatus", "ObjectLockRetainUntilDate", "ObjectLockMode", "ObjectLockLegalHoldStatus"
  #   resp.inventory_configuration.schedule.frequency #=> String, one of "Daily", "Weekly"
  # @option params
  # @option params
  # @overload get_bucket_inventory_configuration
  # @param params [Hash] ({})
  # @return [Types::GetBucketInventoryConfigurationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketInventoryConfigurationOutput#inventory_configuration #inventory_configuration} => Types::InventoryConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketInventoryConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1917
  def get_bucket_inventory_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # No longer used, see the GetBucketLifecycleConfiguration operation.
  #
  # @example Example: To get a bucket acl
  #
  #   # The following example gets ACL on the specified bucket.
  #
  #   resp = client.get_bucket_lifecycle({
  #   bucket: "acl1",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   rules: [
  #   {
  #   expiration: {
  #   days: 1,
  #   },
  #   id: "delete logs",
  #   prefix: "123/",
  #   status: "Enabled",
  #   },
  #   ],
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_lifecycle({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.rules #=> Array
  #   resp.rules[0].expiration.date #=> Time
  #   resp.rules[0].expiration.days #=> Integer
  #   resp.rules[0].expiration.expired_object_delete_marker #=> Boolean
  #   resp.rules[0].id #=> String
  #   resp.rules[0].prefix #=> String
  #   resp.rules[0].status #=> String, one of "Enabled", "Disabled"
  #   resp.rules[0].transition.date #=> Time
  #   resp.rules[0].transition.days #=> Integer
  #   resp.rules[0].transition.storage_class #=> String, one of "GLACIER", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "DEEP_ARCHIVE"
  #   resp.rules[0].noncurrent_version_transition.noncurrent_days #=> Integer
  #   resp.rules[0].noncurrent_version_transition.storage_class #=> String, one of "GLACIER", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "DEEP_ARCHIVE"
  #   resp.rules[0].noncurrent_version_expiration.noncurrent_days #=> Integer
  #   resp.rules[0].abort_incomplete_multipart_upload.days_after_initiation #=> Integer
  # @option params
  # @overload get_bucket_lifecycle
  # @param params [Hash] ({})
  # @return [Types::GetBucketLifecycleOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketLifecycleOutput#rules #rules} => Array&lt;Types::Rule&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLifecycle AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#1980
  def get_bucket_lifecycle(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the lifecycle configuration information set on the bucket.
  #
  # @example Example: To get lifecycle configuration on a bucket
  #
  #   # The following example retrieves lifecycle configuration on set on a bucket.
  #
  #   resp = client.get_bucket_lifecycle_configuration({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   rules: [
  #   {
  #   id: "Rule for TaxDocs/",
  #   prefix: "TaxDocs",
  #   status: "Enabled",
  #   transitions: [
  #   {
  #   days: 365,
  #   storage_class: "STANDARD_IA",
  #   },
  #   ],
  #   },
  #   ],
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_lifecycle_configuration({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.rules #=> Array
  #   resp.rules[0].expiration.date #=> Time
  #   resp.rules[0].expiration.days #=> Integer
  #   resp.rules[0].expiration.expired_object_delete_marker #=> Boolean
  #   resp.rules[0].id #=> String
  #   resp.rules[0].prefix #=> String
  #   resp.rules[0].filter.prefix #=> String
  #   resp.rules[0].filter.tag.key #=> String
  #   resp.rules[0].filter.tag.value #=> String
  #   resp.rules[0].filter.and.prefix #=> String
  #   resp.rules[0].filter.and.tags #=> Array
  #   resp.rules[0].filter.and.tags[0].key #=> String
  #   resp.rules[0].filter.and.tags[0].value #=> String
  #   resp.rules[0].status #=> String, one of "Enabled", "Disabled"
  #   resp.rules[0].transitions #=> Array
  #   resp.rules[0].transitions[0].date #=> Time
  #   resp.rules[0].transitions[0].days #=> Integer
  #   resp.rules[0].transitions[0].storage_class #=> String, one of "GLACIER", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "DEEP_ARCHIVE"
  #   resp.rules[0].noncurrent_version_transitions #=> Array
  #   resp.rules[0].noncurrent_version_transitions[0].noncurrent_days #=> Integer
  #   resp.rules[0].noncurrent_version_transitions[0].storage_class #=> String, one of "GLACIER", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "DEEP_ARCHIVE"
  #   resp.rules[0].noncurrent_version_expiration.noncurrent_days #=> Integer
  #   resp.rules[0].abort_incomplete_multipart_upload.days_after_initiation #=> Integer
  # @option params
  # @overload get_bucket_lifecycle_configuration
  # @param params [Hash] ({})
  # @return [Types::GetBucketLifecycleConfigurationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketLifecycleConfigurationOutput#rules #rules} => Array&lt;Types::LifecycleRule&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLifecycleConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2055
  def get_bucket_lifecycle_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the region the bucket resides in.
  #
  # @example Example: To get bucket location
  #
  #   # The following example returns bucket location.
  #
  #   resp = client.get_bucket_location({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   location_constraint: "us-west-2",
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_location({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.location_constraint #=> String, one of "EU", "eu-west-1", "us-west-1", "us-west-2", "ap-south-1", "ap-southeast-1", "ap-southeast-2", "ap-northeast-1", "sa-east-1", "cn-north-1", "eu-central-1"
  # @option params
  # @overload get_bucket_location
  # @param params [Hash] ({})
  # @return [Types::GetBucketLocationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketLocationOutput#location_constraint #location_constraint} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLocation AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2096
  def get_bucket_location(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the logging status of a bucket and the permissions users have
  # to view and modify that status. To use GET, you must be the bucket
  # owner.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_logging({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.logging_enabled.target_bucket #=> String
  #   resp.logging_enabled.target_grants #=> Array
  #   resp.logging_enabled.target_grants[0].grantee.display_name #=> String
  #   resp.logging_enabled.target_grants[0].grantee.email_address #=> String
  #   resp.logging_enabled.target_grants[0].grantee.id #=> String
  #   resp.logging_enabled.target_grants[0].grantee.type #=> String, one of "CanonicalUser", "AmazonCustomerByEmail", "Group"
  #   resp.logging_enabled.target_grants[0].grantee.uri #=> String
  #   resp.logging_enabled.target_grants[0].permission #=> String, one of "FULL_CONTROL", "READ", "WRITE"
  #   resp.logging_enabled.target_prefix #=> String
  # @option params
  # @overload get_bucket_logging
  # @param params [Hash] ({})
  # @return [Types::GetBucketLoggingOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketLoggingOutput#logging_enabled #logging_enabled} => Types::LoggingEnabled
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLogging AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2133
  def get_bucket_logging(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets a metrics configuration (specified by the metrics configuration
  # ID) from the bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_metrics_configuration({
  #   bucket: "BucketName", # required
  #   id: "MetricsId", # required
  #   })
  # @example Response structure
  #
  #   resp.metrics_configuration.id #=> String
  #   resp.metrics_configuration.filter.prefix #=> String
  #   resp.metrics_configuration.filter.tag.key #=> String
  #   resp.metrics_configuration.filter.tag.value #=> String
  #   resp.metrics_configuration.filter.and.prefix #=> String
  #   resp.metrics_configuration.filter.and.tags #=> Array
  #   resp.metrics_configuration.filter.and.tags[0].key #=> String
  #   resp.metrics_configuration.filter.and.tags[0].value #=> String
  # @option params
  # @option params
  # @overload get_bucket_metrics_configuration
  # @param params [Hash] ({})
  # @return [Types::GetBucketMetricsConfigurationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketMetricsConfigurationOutput#metrics_configuration #metrics_configuration} => Types::MetricsConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketMetricsConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2174
  def get_bucket_metrics_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # No longer used, see the GetBucketNotificationConfiguration operation.
  #
  # @example Example: To get notification configuration set on a bucket
  #
  #   # The following example returns notification configuration set on a bucket.
  #
  #   resp = client.get_bucket_notification({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   queue_configuration: {
  #   event: "s3:ObjectCreated:Put",
  #   events: [
  #   "s3:ObjectCreated:Put",
  #   ],
  #   id: "MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx",
  #   queue: "arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue",
  #   },
  #   topic_configuration: {
  #   event: "s3:ObjectCreated:Copy",
  #   events: [
  #   "s3:ObjectCreated:Copy",
  #   ],
  #   id: "YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi",
  #   topic: "arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic",
  #   },
  #   }
  # @example Example: To get notification configuration set on a bucket
  #
  #   # The following example returns notification configuration set on a bucket.
  #
  #   resp = client.get_bucket_notification({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   queue_configuration: {
  #   event: "s3:ObjectCreated:Put",
  #   events: [
  #   "s3:ObjectCreated:Put",
  #   ],
  #   id: "MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx",
  #   queue: "arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue",
  #   },
  #   topic_configuration: {
  #   event: "s3:ObjectCreated:Copy",
  #   events: [
  #   "s3:ObjectCreated:Copy",
  #   ],
  #   id: "YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi",
  #   topic: "arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic",
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_notification({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.topic_configuration.id #=> String
  #   resp.topic_configuration.events #=> Array
  #   resp.topic_configuration.events[0] #=> String, one of "s3:ReducedRedundancyLostObject", "s3:ObjectCreated:*", "s3:ObjectCreated:Put", "s3:ObjectCreated:Post", "s3:ObjectCreated:Copy", "s3:ObjectCreated:CompleteMultipartUpload", "s3:ObjectRemoved:*", "s3:ObjectRemoved:Delete", "s3:ObjectRemoved:DeleteMarkerCreated", "s3:ObjectRestore:Post", "s3:ObjectRestore:Completed"
  #   resp.topic_configuration.event #=> String, one of "s3:ReducedRedundancyLostObject", "s3:ObjectCreated:*", "s3:ObjectCreated:Put", "s3:ObjectCreated:Post", "s3:ObjectCreated:Copy", "s3:ObjectCreated:CompleteMultipartUpload", "s3:ObjectRemoved:*", "s3:ObjectRemoved:Delete", "s3:ObjectRemoved:DeleteMarkerCreated", "s3:ObjectRestore:Post", "s3:ObjectRestore:Completed"
  #   resp.topic_configuration.topic #=> String
  #   resp.queue_configuration.id #=> String
  #   resp.queue_configuration.event #=> String, one of "s3:ReducedRedundancyLostObject", "s3:ObjectCreated:*", "s3:ObjectCreated:Put", "s3:ObjectCreated:Post", "s3:ObjectCreated:Copy", "s3:ObjectCreated:CompleteMultipartUpload", "s3:ObjectRemoved:*", "s3:ObjectRemoved:Delete", "s3:ObjectRemoved:DeleteMarkerCreated", "s3:ObjectRestore:Post", "s3:ObjectRestore:Completed"
  #   resp.queue_configuration.events #=> Array
  #   resp.queue_configuration.events[0] #=> String, one of "s3:ReducedRedundancyLostObject", "s3:ObjectCreated:*", "s3:ObjectCreated:Put", "s3:ObjectCreated:Post", "s3:ObjectCreated:Copy", "s3:ObjectCreated:CompleteMultipartUpload", "s3:ObjectRemoved:*", "s3:ObjectRemoved:Delete", "s3:ObjectRemoved:DeleteMarkerCreated", "s3:ObjectRestore:Post", "s3:ObjectRestore:Completed"
  #   resp.queue_configuration.queue #=> String
  #   resp.cloud_function_configuration.id #=> String
  #   resp.cloud_function_configuration.event #=> String, one of "s3:ReducedRedundancyLostObject", "s3:ObjectCreated:*", "s3:ObjectCreated:Put", "s3:ObjectCreated:Post", "s3:ObjectCreated:Copy", "s3:ObjectCreated:CompleteMultipartUpload", "s3:ObjectRemoved:*", "s3:ObjectRemoved:Delete", "s3:ObjectRemoved:DeleteMarkerCreated", "s3:ObjectRestore:Post", "s3:ObjectRestore:Completed"
  #   resp.cloud_function_configuration.events #=> Array
  #   resp.cloud_function_configuration.events[0] #=> String, one of "s3:ReducedRedundancyLostObject", "s3:ObjectCreated:*", "s3:ObjectCreated:Put", "s3:ObjectCreated:Post", "s3:ObjectCreated:Copy", "s3:ObjectCreated:CompleteMultipartUpload", "s3:ObjectRemoved:*", "s3:ObjectRemoved:Delete", "s3:ObjectRemoved:DeleteMarkerCreated", "s3:ObjectRestore:Post", "s3:ObjectRestore:Completed"
  #   resp.cloud_function_configuration.cloud_function #=> String
  #   resp.cloud_function_configuration.invocation_role #=> String
  # @option params
  # @overload get_bucket_notification
  # @param params [Hash] ({})
  # @return [Types::NotificationConfigurationDeprecated] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::NotificationConfigurationDeprecated#topic_configuration #topic_configuration} => Types::TopicConfigurationDeprecated
  #   * {Types::NotificationConfigurationDeprecated#queue_configuration #queue_configuration} => Types::QueueConfigurationDeprecated
  #   * {Types::NotificationConfigurationDeprecated#cloud_function_configuration #cloud_function_configuration} => Types::CloudFunctionConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketNotification AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2276
  def get_bucket_notification(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the notification configuration of a bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_notification_configuration({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.topic_configurations #=> Array
  #   resp.topic_configurations[0].id #=> String
  #   resp.topic_configurations[0].topic_arn #=> String
  #   resp.topic_configurations[0].events #=> Array
  #   resp.topic_configurations[0].events[0] #=> String, one of "s3:ReducedRedundancyLostObject", "s3:ObjectCreated:*", "s3:ObjectCreated:Put", "s3:ObjectCreated:Post", "s3:ObjectCreated:Copy", "s3:ObjectCreated:CompleteMultipartUpload", "s3:ObjectRemoved:*", "s3:ObjectRemoved:Delete", "s3:ObjectRemoved:DeleteMarkerCreated", "s3:ObjectRestore:Post", "s3:ObjectRestore:Completed"
  #   resp.topic_configurations[0].filter.key.filter_rules #=> Array
  #   resp.topic_configurations[0].filter.key.filter_rules[0].name #=> String, one of "prefix", "suffix"
  #   resp.topic_configurations[0].filter.key.filter_rules[0].value #=> String
  #   resp.queue_configurations #=> Array
  #   resp.queue_configurations[0].id #=> String
  #   resp.queue_configurations[0].queue_arn #=> String
  #   resp.queue_configurations[0].events #=> Array
  #   resp.queue_configurations[0].events[0] #=> String, one of "s3:ReducedRedundancyLostObject", "s3:ObjectCreated:*", "s3:ObjectCreated:Put", "s3:ObjectCreated:Post", "s3:ObjectCreated:Copy", "s3:ObjectCreated:CompleteMultipartUpload", "s3:ObjectRemoved:*", "s3:ObjectRemoved:Delete", "s3:ObjectRemoved:DeleteMarkerCreated", "s3:ObjectRestore:Post", "s3:ObjectRestore:Completed"
  #   resp.queue_configurations[0].filter.key.filter_rules #=> Array
  #   resp.queue_configurations[0].filter.key.filter_rules[0].name #=> String, one of "prefix", "suffix"
  #   resp.queue_configurations[0].filter.key.filter_rules[0].value #=> String
  #   resp.lambda_function_configurations #=> Array
  #   resp.lambda_function_configurations[0].id #=> String
  #   resp.lambda_function_configurations[0].lambda_function_arn #=> String
  #   resp.lambda_function_configurations[0].events #=> Array
  #   resp.lambda_function_configurations[0].events[0] #=> String, one of "s3:ReducedRedundancyLostObject", "s3:ObjectCreated:*", "s3:ObjectCreated:Put", "s3:ObjectCreated:Post", "s3:ObjectCreated:Copy", "s3:ObjectCreated:CompleteMultipartUpload", "s3:ObjectRemoved:*", "s3:ObjectRemoved:Delete", "s3:ObjectRemoved:DeleteMarkerCreated", "s3:ObjectRestore:Post", "s3:ObjectRestore:Completed"
  #   resp.lambda_function_configurations[0].filter.key.filter_rules #=> Array
  #   resp.lambda_function_configurations[0].filter.key.filter_rules[0].name #=> String, one of "prefix", "suffix"
  #   resp.lambda_function_configurations[0].filter.key.filter_rules[0].value #=> String
  # @option params
  # @overload get_bucket_notification_configuration
  # @param params [Hash] ({})
  # @return [Types::NotificationConfiguration] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::NotificationConfiguration#topic_configurations #topic_configurations} => Array&lt;Types::TopicConfiguration&gt;
  #   * {Types::NotificationConfiguration#queue_configurations #queue_configurations} => Array&lt;Types::QueueConfiguration&gt;
  #   * {Types::NotificationConfiguration#lambda_function_configurations #lambda_function_configurations} => Array&lt;Types::LambdaFunctionConfiguration&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketNotificationConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2329
  def get_bucket_notification_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the policy of a specified bucket.
  #
  # @example Example: To get bucket policy
  #
  #   # The following example returns bucket policy associated with a bucket.
  #
  #   resp = client.get_bucket_policy({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   policy: "{\"Version\":\"2008-10-17\",\"Id\":\"LogPolicy\",\"Statement\":[{\"Sid\":\"Enables the log delivery group to publish logs to your bucket \",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"111122223333\"},\"Action\":[\"s3:GetBucketAcl\",\"s3:GetObjectAcl\",\"s3:PutObject\"],\"Resource\":[\"arn:aws:s3:::policytest1/*\",\"arn:aws:s3:::policytest1\"]}]}",
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_policy({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.policy #=> String
  # @option params
  # @overload get_bucket_policy
  # @param params [Hash] ({})
  # @return [Types::GetBucketPolicyOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketPolicyOutput#policy #policy} => IO
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketPolicy AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2370
  def get_bucket_policy(params = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # Retrieves the policy status for an Amazon S3 bucket, indicating
  # whether the bucket is public.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_policy_status({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.policy_status.is_public #=> Boolean
  # @option params
  # @overload get_bucket_policy_status
  # @param params [Hash] ({})
  # @return [Types::GetBucketPolicyStatusOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketPolicyStatusOutput#policy_status #policy_status} => Types::PolicyStatus
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketPolicyStatus AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2400
  def get_bucket_policy_status(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the replication configuration of a bucket.
  #
  # <note markdown="1"> It can take a while to propagate the put or delete a replication
  # configuration to all Amazon S3 systems. Therefore, a get request soon
  # after put or delete can return a wrong result.
  #
  #  </note>
  #
  # @example Example: To get replication configuration set on a bucket
  #
  #   # The following example returns replication configuration set on a bucket.
  #
  #   resp = client.get_bucket_replication({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   replication_configuration: {
  #   role: "arn:aws:iam::acct-id:role/example-role",
  #   rules: [
  #   {
  #   destination: {
  #   bucket: "arn:aws:s3:::destination-bucket",
  #   },
  #   id: "MWIwNTkwZmItMTE3MS00ZTc3LWJkZDEtNzRmODQwYzc1OTQy",
  #   prefix: "Tax",
  #   status: "Enabled",
  #   },
  #   ],
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_replication({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.replication_configuration.role #=> String
  #   resp.replication_configuration.rules #=> Array
  #   resp.replication_configuration.rules[0].id #=> String
  #   resp.replication_configuration.rules[0].priority #=> Integer
  #   resp.replication_configuration.rules[0].prefix #=> String
  #   resp.replication_configuration.rules[0].filter.prefix #=> String
  #   resp.replication_configuration.rules[0].filter.tag.key #=> String
  #   resp.replication_configuration.rules[0].filter.tag.value #=> String
  #   resp.replication_configuration.rules[0].filter.and.prefix #=> String
  #   resp.replication_configuration.rules[0].filter.and.tags #=> Array
  #   resp.replication_configuration.rules[0].filter.and.tags[0].key #=> String
  #   resp.replication_configuration.rules[0].filter.and.tags[0].value #=> String
  #   resp.replication_configuration.rules[0].status #=> String, one of "Enabled", "Disabled"
  #   resp.replication_configuration.rules[0].source_selection_criteria.sse_kms_encrypted_objects.status #=> String, one of "Enabled", "Disabled"
  #   resp.replication_configuration.rules[0].destination.bucket #=> String
  #   resp.replication_configuration.rules[0].destination.account #=> String
  #   resp.replication_configuration.rules[0].destination.storage_class #=> String, one of "STANDARD", "REDUCED_REDUNDANCY", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "GLACIER", "DEEP_ARCHIVE"
  #   resp.replication_configuration.rules[0].destination.access_control_translation.owner #=> String, one of "Destination"
  #   resp.replication_configuration.rules[0].destination.encryption_configuration.replica_kms_key_id #=> String
  #   resp.replication_configuration.rules[0].delete_marker_replication.status #=> String, one of "Enabled", "Disabled"
  # @option params
  # @overload get_bucket_replication
  # @param params [Hash] ({})
  # @return [Types::GetBucketReplicationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketReplicationOutput#replication_configuration #replication_configuration} => Types::ReplicationConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketReplication AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2478
  def get_bucket_replication(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the request payment configuration of a bucket.
  #
  # @example Example: To get bucket versioning configuration
  #
  #   # The following example retrieves bucket versioning configuration.
  #
  #   resp = client.get_bucket_request_payment({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   payer: "BucketOwner",
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_request_payment({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.payer #=> String, one of "Requester", "BucketOwner"
  # @option params
  # @overload get_bucket_request_payment
  # @param params [Hash] ({})
  # @return [Types::GetBucketRequestPaymentOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketRequestPaymentOutput#payer #payer} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketRequestPayment AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2519
  def get_bucket_request_payment(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the tag set associated with the bucket.
  #
  # @example Example: To get tag set associated with a bucket
  #
  #   # The following example returns tag set associated with a bucket
  #
  #   resp = client.get_bucket_tagging({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   tag_set: [
  #   {
  #   key: "key1",
  #   value: "value1",
  #   },
  #   {
  #   key: "key2",
  #   value: "value2",
  #   },
  #   ],
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_tagging({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.tag_set #=> Array
  #   resp.tag_set[0].key #=> String
  #   resp.tag_set[0].value #=> String
  # @option params
  # @overload get_bucket_tagging
  # @param params [Hash] ({})
  # @return [Types::GetBucketTaggingOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketTaggingOutput#tag_set #tag_set} => Array&lt;Types::Tag&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketTagging AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2571
  def get_bucket_tagging(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the versioning state of a bucket.
  #
  # @example Example: To get bucket versioning configuration
  #
  #   # The following example retrieves bucket versioning configuration.
  #
  #   resp = client.get_bucket_versioning({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   mfa_delete: "Disabled",
  #   status: "Enabled",
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_versioning({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.status #=> String, one of "Enabled", "Suspended"
  #   resp.mfa_delete #=> String, one of "Enabled", "Disabled"
  # @option params
  # @overload get_bucket_versioning
  # @param params [Hash] ({})
  # @return [Types::GetBucketVersioningOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketVersioningOutput#status #status} => String
  #   * {Types::GetBucketVersioningOutput#mfa_delete #mfa_delete} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketVersioning AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2615
  def get_bucket_versioning(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the website configuration for a bucket.
  #
  # @example Example: To get bucket website configuration
  #
  #   # The following example retrieves website configuration of a bucket.
  #
  #   resp = client.get_bucket_website({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   error_document: {
  #   key: "error.html",
  #   },
  #   index_document: {
  #   suffix: "index.html",
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_bucket_website({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.redirect_all_requests_to.host_name #=> String
  #   resp.redirect_all_requests_to.protocol #=> String, one of "http", "https"
  #   resp.index_document.suffix #=> String
  #   resp.error_document.key #=> String
  #   resp.routing_rules #=> Array
  #   resp.routing_rules[0].condition.http_error_code_returned_equals #=> String
  #   resp.routing_rules[0].condition.key_prefix_equals #=> String
  #   resp.routing_rules[0].redirect.host_name #=> String
  #   resp.routing_rules[0].redirect.http_redirect_code #=> String
  #   resp.routing_rules[0].redirect.protocol #=> String, one of "http", "https"
  #   resp.routing_rules[0].redirect.replace_key_prefix_with #=> String
  #   resp.routing_rules[0].redirect.replace_key_with #=> String
  # @option params
  # @overload get_bucket_website
  # @param params [Hash] ({})
  # @return [Types::GetBucketWebsiteOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetBucketWebsiteOutput#redirect_all_requests_to #redirect_all_requests_to} => Types::RedirectAllRequestsTo
  #   * {Types::GetBucketWebsiteOutput#index_document #index_document} => Types::IndexDocument
  #   * {Types::GetBucketWebsiteOutput#error_document #error_document} => Types::ErrorDocument
  #   * {Types::GetBucketWebsiteOutput#routing_rules #routing_rules} => Array&lt;Types::RoutingRule&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketWebsite AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2675
  def get_bucket_website(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Retrieves objects from Amazon S3.
  #
  # @example Example: To retrieve a byte range of an object
  #
  #   # The following example retrieves an object for an S3 bucket. The request specifies the range header to retrieve a
  #   # specific byte range.
  #
  #   resp = client.get_object({
  #   bucket: "examplebucket",
  #   key: "SampleFile.txt",
  #   range: "bytes=0-9",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   accept_ranges: "bytes",
  #   content_length: 10,
  #   content_range: "bytes 0-9/43",
  #   content_type: "text/plain",
  #   etag: "\"0d94420ffd0bc68cd3d152506b97a9cc\"",
  #   last_modified: Time.parse("Thu, 09 Oct 2014 22:57:28 GMT"),
  #   metadata: {
  #   },
  #   version_id: "null",
  #   }
  # @example Download an object to disk
  #   # stream object directly to disk
  #   resp = s3.get_object(
  #   response_target: '/path/to/file',
  #   bucket: 'bucket-name',
  #   key: 'object-key')
  #
  #   # you can still access other response data
  #   resp.metadata #=> { ... }
  #   resp.etag #=> "..."
  # @example Example: To retrieve an object
  #
  #   # The following example retrieves an object for an S3 bucket.
  #
  #   resp = client.get_object({
  #   bucket: "examplebucket",
  #   key: "HappyFace.jpg",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   accept_ranges: "bytes",
  #   content_length: 3191,
  #   content_type: "image/jpeg",
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   last_modified: Time.parse("Thu, 15 Dec 2016 01:19:41 GMT"),
  #   metadata: {
  #   },
  #   tag_count: 2,
  #   version_id: "null",
  #   }
  # @example Download object into memory
  #   # omit :response_target to download to a StringIO in memory
  #   resp = s3.get_object(bucket: 'bucket-name', key: 'object-key')
  #
  #   # call #read or #string on the response body
  #   resp.body.read
  #   #=> '...'
  # @example Streaming data to a block
  #   # WARNING: yielding data to a block disables retries of networking errors
  #   File.open('/path/to/file', 'wb') do |file|
  #   s3.get_object(bucket: 'bucket-name', key: 'object-key') do |chunk|
  #   file.write(chunk)
  #   end
  #   end
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_object({
  #   bucket: "BucketName", # required
  #   if_match: "IfMatch",
  #   if_modified_since: Time.now,
  #   if_none_match: "IfNoneMatch",
  #   if_unmodified_since: Time.now,
  #   key: "ObjectKey", # required
  #   range: "Range",
  #   response_cache_control: "ResponseCacheControl",
  #   response_content_disposition: "ResponseContentDisposition",
  #   response_content_encoding: "ResponseContentEncoding",
  #   response_content_language: "ResponseContentLanguage",
  #   response_content_type: "ResponseContentType",
  #   response_expires: Time.now,
  #   version_id: "ObjectVersionId",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   part_number: 1,
  #   })
  # @example Response structure
  #
  #   resp.body #=> IO
  #   resp.delete_marker #=> Boolean
  #   resp.accept_ranges #=> String
  #   resp.expiration #=> String
  #   resp.restore #=> String
  #   resp.last_modified #=> Time
  #   resp.content_length #=> Integer
  #   resp.etag #=> String
  #   resp.missing_meta #=> Integer
  #   resp.version_id #=> String
  #   resp.cache_control #=> String
  #   resp.content_disposition #=> String
  #   resp.content_encoding #=> String
  #   resp.content_language #=> String
  #   resp.content_range #=> String
  #   resp.content_type #=> String
  #   resp.expires #=> Time
  #   resp.expires_string #=> String
  #   resp.website_redirect_location #=> String
  #   resp.server_side_encryption #=> String, one of "AES256", "aws:kms"
  #   resp.metadata #=> Hash
  #   resp.metadata["MetadataKey"] #=> String
  #   resp.sse_customer_algorithm #=> String
  #   resp.sse_customer_key_md5 #=> String
  #   resp.ssekms_key_id #=> String
  #   resp.storage_class #=> String, one of "STANDARD", "REDUCED_REDUNDANCY", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "GLACIER", "DEEP_ARCHIVE"
  #   resp.request_charged #=> String, one of "requester"
  #   resp.replication_status #=> String, one of "COMPLETE", "PENDING", "FAILED", "REPLICA"
  #   resp.parts_count #=> Integer
  #   resp.tag_count #=> Integer
  #   resp.object_lock_mode #=> String, one of "GOVERNANCE", "COMPLIANCE"
  #   resp.object_lock_retain_until_date #=> Time
  #   resp.object_lock_legal_hold_status #=> String, one of "ON", "OFF"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload get_object
  # @param params [Hash] ({})
  # @return [Types::GetObjectOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetObjectOutput#body #body} => IO
  #   * {Types::GetObjectOutput#delete_marker #delete_marker} => Boolean
  #   * {Types::GetObjectOutput#accept_ranges #accept_ranges} => String
  #   * {Types::GetObjectOutput#expiration #expiration} => String
  #   * {Types::GetObjectOutput#restore #restore} => String
  #   * {Types::GetObjectOutput#last_modified #last_modified} => Time
  #   * {Types::GetObjectOutput#content_length #content_length} => Integer
  #   * {Types::GetObjectOutput#etag #etag} => String
  #   * {Types::GetObjectOutput#missing_meta #missing_meta} => Integer
  #   * {Types::GetObjectOutput#version_id #version_id} => String
  #   * {Types::GetObjectOutput#cache_control #cache_control} => String
  #   * {Types::GetObjectOutput#content_disposition #content_disposition} => String
  #   * {Types::GetObjectOutput#content_encoding #content_encoding} => String
  #   * {Types::GetObjectOutput#content_language #content_language} => String
  #   * {Types::GetObjectOutput#content_range #content_range} => String
  #   * {Types::GetObjectOutput#content_type #content_type} => String
  #   * {Types::GetObjectOutput#expires #expires} => Time
  #   * {Types::GetObjectOutput#expires_string #expires_string} => String
  #   * {Types::GetObjectOutput#website_redirect_location #website_redirect_location} => String
  #   * {Types::GetObjectOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::GetObjectOutput#metadata #metadata} => Hash&lt;String,String&gt;
  #   * {Types::GetObjectOutput#sse_customer_algorithm #sse_customer_algorithm} => String
  #   * {Types::GetObjectOutput#sse_customer_key_md5 #sse_customer_key_md5} => String
  #   * {Types::GetObjectOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::GetObjectOutput#storage_class #storage_class} => String
  #   * {Types::GetObjectOutput#request_charged #request_charged} => String
  #   * {Types::GetObjectOutput#replication_status #replication_status} => String
  #   * {Types::GetObjectOutput#parts_count #parts_count} => Integer
  #   * {Types::GetObjectOutput#tag_count #tag_count} => Integer
  #   * {Types::GetObjectOutput#object_lock_mode #object_lock_mode} => String
  #   * {Types::GetObjectOutput#object_lock_retain_until_date #object_lock_retain_until_date} => Time
  #   * {Types::GetObjectOutput#object_lock_legal_hold_status #object_lock_legal_hold_status} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObject AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#2933
  def get_object(params = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # Returns the access control list (ACL) of an object.
  #
  # @example Response structure
  #
  #   resp.owner.display_name #=> String
  #   resp.owner.id #=> String
  #   resp.grants #=> Array
  #   resp.grants[0].grantee.display_name #=> String
  #   resp.grants[0].grantee.email_address #=> String
  #   resp.grants[0].grantee.id #=> String
  #   resp.grants[0].grantee.type #=> String, one of "CanonicalUser", "AmazonCustomerByEmail", "Group"
  #   resp.grants[0].grantee.uri #=> String
  #   resp.grants[0].permission #=> String, one of "FULL_CONTROL", "WRITE", "WRITE_ACP", "READ", "READ_ACP"
  #   resp.request_charged #=> String, one of "requester"
  # @example Example: To retrieve object ACL
  #
  #   # The following example retrieves access control list (ACL) of an object.
  #
  #   resp = client.get_object_acl({
  #   bucket: "examplebucket",
  #   key: "HappyFace.jpg",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   grants: [
  #   {
  #   grantee: {
  #   display_name: "owner-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   type: "CanonicalUser",
  #   },
  #   permission: "WRITE",
  #   },
  #   {
  #   grantee: {
  #   display_name: "owner-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   type: "CanonicalUser",
  #   },
  #   permission: "WRITE_ACP",
  #   },
  #   {
  #   grantee: {
  #   display_name: "owner-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   type: "CanonicalUser",
  #   },
  #   permission: "READ",
  #   },
  #   {
  #   grantee: {
  #   display_name: "owner-display-name",
  #   id: "852b113eexamplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   type: "CanonicalUser",
  #   },
  #   permission: "READ_ACP",
  #   },
  #   ],
  #   owner: {
  #   display_name: "owner-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_object_acl({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   version_id: "ObjectVersionId",
  #   request_payer: "requester", # accepts requester
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload get_object_acl
  # @param params [Hash] ({})
  # @return [Types::GetObjectAclOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetObjectAclOutput#owner #owner} => Types::Owner
  #   * {Types::GetObjectAclOutput#grants #grants} => Array&lt;Types::Grant&gt;
  #   * {Types::GetObjectAclOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectAcl AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3038
  def get_object_acl(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets an object's current Legal Hold status.
  #
  # @example Response structure
  #
  #   resp.legal_hold.status #=> String, one of "ON", "OFF"
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_object_legal_hold({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   version_id: "ObjectVersionId",
  #   request_payer: "requester", # accepts requester
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload get_object_legal_hold
  # @param params [Hash] ({})
  # @return [Types::GetObjectLegalHoldOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetObjectLegalHoldOutput#legal_hold #legal_hold} => Types::ObjectLockLegalHold
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectLegalHold AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3085
  def get_object_legal_hold(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets the object lock configuration for a bucket. The rule specified in
  # the object lock configuration will be applied by default to every new
  # object placed in the specified bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_object_lock_configuration({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.object_lock_configuration.object_lock_enabled #=> String, one of "Enabled"
  #   resp.object_lock_configuration.rule.default_retention.mode #=> String, one of "GOVERNANCE", "COMPLIANCE"
  #   resp.object_lock_configuration.rule.default_retention.days #=> Integer
  #   resp.object_lock_configuration.rule.default_retention.years #=> Integer
  # @option params
  # @overload get_object_lock_configuration
  # @param params [Hash] ({})
  # @return [Types::GetObjectLockConfigurationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetObjectLockConfigurationOutput#object_lock_configuration #object_lock_configuration} => Types::ObjectLockConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectLockConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3118
  def get_object_lock_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Retrieves an object's retention settings.
  #
  # @example Response structure
  #
  #   resp.retention.mode #=> String, one of "GOVERNANCE", "COMPLIANCE"
  #   resp.retention.retain_until_date #=> Time
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_object_retention({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   version_id: "ObjectVersionId",
  #   request_payer: "requester", # accepts requester
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload get_object_retention
  # @param params [Hash] ({})
  # @return [Types::GetObjectRetentionOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetObjectRetentionOutput#retention #retention} => Types::ObjectLockRetention
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectRetention AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3166
  def get_object_retention(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the tag-set of an object.
  #
  # @example Example: To retrieve tag set of an object
  #
  #   # The following example retrieves tag set of an object.
  #
  #   resp = client.get_object_tagging({
  #   bucket: "examplebucket",
  #   key: "HappyFace.jpg",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   tag_set: [
  #   {
  #   key: "Key4",
  #   value: "Value4",
  #   },
  #   {
  #   key: "Key3",
  #   value: "Value3",
  #   },
  #   ],
  #   version_id: "null",
  #   }
  # @example Example: To retrieve tag set of a specific object version
  #
  #   # The following example retrieves tag set of an object. The request specifies object version.
  #
  #   resp = client.get_object_tagging({
  #   bucket: "examplebucket",
  #   key: "exampleobject",
  #   version_id: "ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   tag_set: [
  #   {
  #   key: "Key1",
  #   value: "Value1",
  #   },
  #   ],
  #   version_id: "ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI",
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_object_tagging({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   version_id: "ObjectVersionId",
  #   })
  # @example Response structure
  #
  #   resp.version_id #=> String
  #   resp.tag_set #=> Array
  #   resp.tag_set[0].key #=> String
  #   resp.tag_set[0].value #=> String
  # @option params
  # @option params
  # @option params
  # @overload get_object_tagging
  # @param params [Hash] ({})
  # @return [Types::GetObjectTaggingOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetObjectTaggingOutput#version_id #version_id} => String
  #   * {Types::GetObjectTaggingOutput#tag_set #tag_set} => Array&lt;Types::Tag&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectTagging AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3249
  def get_object_tagging(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Return torrent files from a bucket.
  #
  # @example Response structure
  #
  #   resp.body #=> IO
  #   resp.request_charged #=> String, one of "requester"
  # @example Example: To retrieve torrent files for an object
  #
  #   # The following example retrieves torrent files of an object.
  #
  #   resp = client.get_object_torrent({
  #   bucket: "examplebucket",
  #   key: "HappyFace.jpg",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_object_torrent({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   request_payer: "requester", # accepts requester
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload get_object_torrent
  # @param params [Hash] ({})
  # @return [Types::GetObjectTorrentOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetObjectTorrentOutput#body #body} => IO
  #   * {Types::GetObjectTorrentOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectTorrent AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3306
  def get_object_torrent(params = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # Retrieves the `PublicAccessBlock` configuration for an Amazon S3
  # bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_public_access_block({
  #   bucket: "BucketName", # required
  #   })
  # @example Response structure
  #
  #   resp.public_access_block_configuration.block_public_acls #=> Boolean
  #   resp.public_access_block_configuration.ignore_public_acls #=> Boolean
  #   resp.public_access_block_configuration.block_public_policy #=> Boolean
  #   resp.public_access_block_configuration.restrict_public_buckets #=> Boolean
  # @option params
  # @overload get_public_access_block
  # @param params [Hash] ({})
  # @return [Types::GetPublicAccessBlockOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetPublicAccessBlockOutput#public_access_block_configuration #public_access_block_configuration} => Types::PublicAccessBlockConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetPublicAccessBlock AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3339
  def get_public_access_block(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # This operation is useful to determine if a bucket exists and you have
  # permission to access it.
  #
  # @example Example: To determine if bucket exists
  #
  #   # This operation checks to see if a bucket exists.
  #
  #   resp = client.head_bucket({
  #   bucket: "acl1",
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.head_bucket({
  #   bucket: "BucketName", # required
  #   })
  # @option params
  # @overload head_bucket
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadBucket AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3370
  def head_bucket(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # The HEAD operation retrieves metadata from an object without returning
  # the object itself. This operation is useful if you're only interested
  # in an object's metadata. To use HEAD, you must have READ access to
  # the object.
  #
  # @example Example: To retrieve metadata of an object without returning the object itself
  #
  #   # The following example retrieves an object metadata.
  #
  #   resp = client.head_object({
  #   bucket: "examplebucket",
  #   key: "HappyFace.jpg",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   accept_ranges: "bytes",
  #   content_length: 3191,
  #   content_type: "image/jpeg",
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   last_modified: Time.parse("Thu, 15 Dec 2016 01:19:41 GMT"),
  #   metadata: {
  #   },
  #   version_id: "null",
  #   }
  # @example Response structure
  #
  #   resp.delete_marker #=> Boolean
  #   resp.accept_ranges #=> String
  #   resp.expiration #=> String
  #   resp.restore #=> String
  #   resp.last_modified #=> Time
  #   resp.content_length #=> Integer
  #   resp.etag #=> String
  #   resp.missing_meta #=> Integer
  #   resp.version_id #=> String
  #   resp.cache_control #=> String
  #   resp.content_disposition #=> String
  #   resp.content_encoding #=> String
  #   resp.content_language #=> String
  #   resp.content_type #=> String
  #   resp.expires #=> Time
  #   resp.expires_string #=> String
  #   resp.website_redirect_location #=> String
  #   resp.server_side_encryption #=> String, one of "AES256", "aws:kms"
  #   resp.metadata #=> Hash
  #   resp.metadata["MetadataKey"] #=> String
  #   resp.sse_customer_algorithm #=> String
  #   resp.sse_customer_key_md5 #=> String
  #   resp.ssekms_key_id #=> String
  #   resp.storage_class #=> String, one of "STANDARD", "REDUCED_REDUNDANCY", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "GLACIER", "DEEP_ARCHIVE"
  #   resp.request_charged #=> String, one of "requester"
  #   resp.replication_status #=> String, one of "COMPLETE", "PENDING", "FAILED", "REPLICA"
  #   resp.parts_count #=> Integer
  #   resp.object_lock_mode #=> String, one of "GOVERNANCE", "COMPLIANCE"
  #   resp.object_lock_retain_until_date #=> Time
  #   resp.object_lock_legal_hold_status #=> String, one of "ON", "OFF"
  # @example Request syntax with placeholder values
  #
  #   resp = client.head_object({
  #   bucket: "BucketName", # required
  #   if_match: "IfMatch",
  #   if_modified_since: Time.now,
  #   if_none_match: "IfNoneMatch",
  #   if_unmodified_since: Time.now,
  #   key: "ObjectKey", # required
  #   range: "Range",
  #   version_id: "ObjectVersionId",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   part_number: 1,
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload head_object
  # @param params [Hash] ({})
  # @return [Types::HeadObjectOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::HeadObjectOutput#delete_marker #delete_marker} => Boolean
  #   * {Types::HeadObjectOutput#accept_ranges #accept_ranges} => String
  #   * {Types::HeadObjectOutput#expiration #expiration} => String
  #   * {Types::HeadObjectOutput#restore #restore} => String
  #   * {Types::HeadObjectOutput#last_modified #last_modified} => Time
  #   * {Types::HeadObjectOutput#content_length #content_length} => Integer
  #   * {Types::HeadObjectOutput#etag #etag} => String
  #   * {Types::HeadObjectOutput#missing_meta #missing_meta} => Integer
  #   * {Types::HeadObjectOutput#version_id #version_id} => String
  #   * {Types::HeadObjectOutput#cache_control #cache_control} => String
  #   * {Types::HeadObjectOutput#content_disposition #content_disposition} => String
  #   * {Types::HeadObjectOutput#content_encoding #content_encoding} => String
  #   * {Types::HeadObjectOutput#content_language #content_language} => String
  #   * {Types::HeadObjectOutput#content_type #content_type} => String
  #   * {Types::HeadObjectOutput#expires #expires} => Time
  #   * {Types::HeadObjectOutput#expires_string #expires_string} => String
  #   * {Types::HeadObjectOutput#website_redirect_location #website_redirect_location} => String
  #   * {Types::HeadObjectOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::HeadObjectOutput#metadata #metadata} => Hash&lt;String,String&gt;
  #   * {Types::HeadObjectOutput#sse_customer_algorithm #sse_customer_algorithm} => String
  #   * {Types::HeadObjectOutput#sse_customer_key_md5 #sse_customer_key_md5} => String
  #   * {Types::HeadObjectOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::HeadObjectOutput#storage_class #storage_class} => String
  #   * {Types::HeadObjectOutput#request_charged #request_charged} => String
  #   * {Types::HeadObjectOutput#replication_status #replication_status} => String
  #   * {Types::HeadObjectOutput#parts_count #parts_count} => Integer
  #   * {Types::HeadObjectOutput#object_lock_mode #object_lock_mode} => String
  #   * {Types::HeadObjectOutput#object_lock_retain_until_date #object_lock_retain_until_date} => Time
  #   * {Types::HeadObjectOutput#object_lock_legal_hold_status #object_lock_legal_hold_status} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadObject AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3546
  def head_object(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Lists the analytics configurations for the bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_bucket_analytics_configurations({
  #   bucket: "BucketName", # required
  #   continuation_token: "Token",
  #   })
  # @example Response structure
  #
  #   resp.is_truncated #=> Boolean
  #   resp.continuation_token #=> String
  #   resp.next_continuation_token #=> String
  #   resp.analytics_configuration_list #=> Array
  #   resp.analytics_configuration_list[0].id #=> String
  #   resp.analytics_configuration_list[0].filter.prefix #=> String
  #   resp.analytics_configuration_list[0].filter.tag.key #=> String
  #   resp.analytics_configuration_list[0].filter.tag.value #=> String
  #   resp.analytics_configuration_list[0].filter.and.prefix #=> String
  #   resp.analytics_configuration_list[0].filter.and.tags #=> Array
  #   resp.analytics_configuration_list[0].filter.and.tags[0].key #=> String
  #   resp.analytics_configuration_list[0].filter.and.tags[0].value #=> String
  #   resp.analytics_configuration_list[0].storage_class_analysis.data_export.output_schema_version #=> String, one of "V_1"
  #   resp.analytics_configuration_list[0].storage_class_analysis.data_export.destination.s3_bucket_destination.format #=> String, one of "CSV"
  #   resp.analytics_configuration_list[0].storage_class_analysis.data_export.destination.s3_bucket_destination.bucket_account_id #=> String
  #   resp.analytics_configuration_list[0].storage_class_analysis.data_export.destination.s3_bucket_destination.bucket #=> String
  #   resp.analytics_configuration_list[0].storage_class_analysis.data_export.destination.s3_bucket_destination.prefix #=> String
  # @option params
  # @option params
  # @overload list_bucket_analytics_configurations
  # @param params [Hash] ({})
  # @return [Types::ListBucketAnalyticsConfigurationsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListBucketAnalyticsConfigurationsOutput#is_truncated #is_truncated} => Boolean
  #   * {Types::ListBucketAnalyticsConfigurationsOutput#continuation_token #continuation_token} => String
  #   * {Types::ListBucketAnalyticsConfigurationsOutput#next_continuation_token #next_continuation_token} => String
  #   * {Types::ListBucketAnalyticsConfigurationsOutput#analytics_configuration_list #analytics_configuration_list} => Array&lt;Types::AnalyticsConfiguration&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketAnalyticsConfigurations AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3599
  def list_bucket_analytics_configurations(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns a list of inventory configurations for the bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_bucket_inventory_configurations({
  #   bucket: "BucketName", # required
  #   continuation_token: "Token",
  #   })
  # @example Response structure
  #
  #   resp.continuation_token #=> String
  #   resp.inventory_configuration_list #=> Array
  #   resp.inventory_configuration_list[0].destination.s3_bucket_destination.account_id #=> String
  #   resp.inventory_configuration_list[0].destination.s3_bucket_destination.bucket #=> String
  #   resp.inventory_configuration_list[0].destination.s3_bucket_destination.format #=> String, one of "CSV", "ORC", "Parquet"
  #   resp.inventory_configuration_list[0].destination.s3_bucket_destination.prefix #=> String
  #   resp.inventory_configuration_list[0].destination.s3_bucket_destination.encryption.ssekms.key_id #=> String
  #   resp.inventory_configuration_list[0].is_enabled #=> Boolean
  #   resp.inventory_configuration_list[0].filter.prefix #=> String
  #   resp.inventory_configuration_list[0].id #=> String
  #   resp.inventory_configuration_list[0].included_object_versions #=> String, one of "All", "Current"
  #   resp.inventory_configuration_list[0].optional_fields #=> Array
  #   resp.inventory_configuration_list[0].optional_fields[0] #=> String, one of "Size", "LastModifiedDate", "StorageClass", "ETag", "IsMultipartUploaded", "ReplicationStatus", "EncryptionStatus", "ObjectLockRetainUntilDate", "ObjectLockMode", "ObjectLockLegalHoldStatus"
  #   resp.inventory_configuration_list[0].schedule.frequency #=> String, one of "Daily", "Weekly"
  #   resp.is_truncated #=> Boolean
  #   resp.next_continuation_token #=> String
  # @option params
  # @option params
  # @overload list_bucket_inventory_configurations
  # @param params [Hash] ({})
  # @return [Types::ListBucketInventoryConfigurationsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListBucketInventoryConfigurationsOutput#continuation_token #continuation_token} => String
  #   * {Types::ListBucketInventoryConfigurationsOutput#inventory_configuration_list #inventory_configuration_list} => Array&lt;Types::InventoryConfiguration&gt;
  #   * {Types::ListBucketInventoryConfigurationsOutput#is_truncated #is_truncated} => Boolean
  #   * {Types::ListBucketInventoryConfigurationsOutput#next_continuation_token #next_continuation_token} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketInventoryConfigurations AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3653
  def list_bucket_inventory_configurations(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Lists the metrics configurations for the bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_bucket_metrics_configurations({
  #   bucket: "BucketName", # required
  #   continuation_token: "Token",
  #   })
  # @example Response structure
  #
  #   resp.is_truncated #=> Boolean
  #   resp.continuation_token #=> String
  #   resp.next_continuation_token #=> String
  #   resp.metrics_configuration_list #=> Array
  #   resp.metrics_configuration_list[0].id #=> String
  #   resp.metrics_configuration_list[0].filter.prefix #=> String
  #   resp.metrics_configuration_list[0].filter.tag.key #=> String
  #   resp.metrics_configuration_list[0].filter.tag.value #=> String
  #   resp.metrics_configuration_list[0].filter.and.prefix #=> String
  #   resp.metrics_configuration_list[0].filter.and.tags #=> Array
  #   resp.metrics_configuration_list[0].filter.and.tags[0].key #=> String
  #   resp.metrics_configuration_list[0].filter.and.tags[0].value #=> String
  # @option params
  # @option params
  # @overload list_bucket_metrics_configurations
  # @param params [Hash] ({})
  # @return [Types::ListBucketMetricsConfigurationsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListBucketMetricsConfigurationsOutput#is_truncated #is_truncated} => Boolean
  #   * {Types::ListBucketMetricsConfigurationsOutput#continuation_token #continuation_token} => String
  #   * {Types::ListBucketMetricsConfigurationsOutput#next_continuation_token #next_continuation_token} => String
  #   * {Types::ListBucketMetricsConfigurationsOutput#metrics_configuration_list #metrics_configuration_list} => Array&lt;Types::MetricsConfiguration&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketMetricsConfigurations AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3703
  def list_bucket_metrics_configurations(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns a list of all buckets owned by the authenticated sender of the
  # request.
  #
  # @example Example: To list object versions
  #
  #   # The following example return versions of an object with specific key name prefix. The request limits the number of items
  #   # returned to two. If there are are more than two object version, S3 returns NextToken in the response. You can specify
  #   # this token value in your next request to fetch next set of object versions.
  #
  #   resp = client.list_buckets({
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   buckets: [
  #   {
  #   creation_date: Time.parse("2012-02-15T21: 03: 02.000Z"),
  #   name: "examplebucket",
  #   },
  #   {
  #   creation_date: Time.parse("2011-07-24T19: 33: 50.000Z"),
  #   name: "examplebucket2",
  #   },
  #   {
  #   creation_date: Time.parse("2010-12-17T00: 56: 49.000Z"),
  #   name: "examplebucket3",
  #   },
  #   ],
  #   owner: {
  #   display_name: "own-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31",
  #   },
  #   }
  # @example Response structure
  #
  #   resp.buckets #=> Array
  #   resp.buckets[0].name #=> String
  #   resp.buckets[0].creation_date #=> Time
  #   resp.owner.display_name #=> String
  #   resp.owner.id #=> String
  # @overload list_buckets
  # @param params [Hash] ({})
  # @return [Types::ListBucketsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListBucketsOutput#buckets #buckets} => Array&lt;Types::Bucket&gt;
  #   * {Types::ListBucketsOutput#owner #owner} => Types::Owner
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBuckets AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3760
  def list_buckets(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # This operation lists in-progress multipart uploads.
  #
  # @example Example: List next set of multipart uploads when previous result is truncated
  #
  #   # The following example specifies the upload-id-marker and key-marker from previous truncated response to retrieve next
  #   # setup of multipart uploads.
  #
  #   resp = client.list_multipart_uploads({
  #   bucket: "examplebucket",
  #   key_marker: "nextkeyfrompreviousresponse",
  #   max_uploads: 2,
  #   upload_id_marker: "valuefrompreviousresponse",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   bucket: "acl1",
  #   is_truncated: true,
  #   key_marker: "",
  #   max_uploads: 2,
  #   next_key_marker: "someobjectkey",
  #   next_upload_id_marker: "examplelo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--",
  #   upload_id_marker: "",
  #   uploads: [
  #   {
  #   initiated: Time.parse("2014-05-01T05:40:58.000Z"),
  #   initiator: {
  #   display_name: "ownder-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   key: "JavaFile",
  #   owner: {
  #   display_name: "mohanataws",
  #   id: "852b113e7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   storage_class: "STANDARD",
  #   upload_id: "gZ30jIqlUa.CInXklLQtSMJITdUnoZ1Y5GACB5UckOtspm5zbDMCkPF_qkfZzMiFZ6dksmcnqxJyIBvQMG9X9Q--",
  #   },
  #   {
  #   initiated: Time.parse("2014-05-01T05:41:27.000Z"),
  #   initiator: {
  #   display_name: "ownder-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   key: "JavaFile",
  #   owner: {
  #   display_name: "ownder-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   storage_class: "STANDARD",
  #   upload_id: "b7tZSqIlo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--",
  #   },
  #   ],
  #   }
  # @example Example: To list in-progress multipart uploads on a bucket
  #
  #   # The following example lists in-progress multipart uploads on a specific bucket.
  #
  #   resp = client.list_multipart_uploads({
  #   bucket: "examplebucket",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   uploads: [
  #   {
  #   initiated: Time.parse("2014-05-01T05:40:58.000Z"),
  #   initiator: {
  #   display_name: "display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   key: "JavaFile",
  #   owner: {
  #   display_name: "display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   storage_class: "STANDARD",
  #   upload_id: "examplelUa.CInXklLQtSMJITdUnoZ1Y5GACB5UckOtspm5zbDMCkPF_qkfZzMiFZ6dksmcnqxJyIBvQMG9X9Q--",
  #   },
  #   {
  #   initiated: Time.parse("2014-05-01T05:41:27.000Z"),
  #   initiator: {
  #   display_name: "display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   key: "JavaFile",
  #   owner: {
  #   display_name: "display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   storage_class: "STANDARD",
  #   upload_id: "examplelo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--",
  #   },
  #   ],
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_multipart_uploads({
  #   bucket: "BucketName", # required
  #   delimiter: "Delimiter",
  #   encoding_type: "url", # accepts url
  #   key_marker: "KeyMarker",
  #   max_uploads: 1,
  #   prefix: "Prefix",
  #   upload_id_marker: "UploadIdMarker",
  #   })
  # @example Response structure
  #
  #   resp.bucket #=> String
  #   resp.key_marker #=> String
  #   resp.upload_id_marker #=> String
  #   resp.next_key_marker #=> String
  #   resp.prefix #=> String
  #   resp.delimiter #=> String
  #   resp.next_upload_id_marker #=> String
  #   resp.max_uploads #=> Integer
  #   resp.is_truncated #=> Boolean
  #   resp.uploads #=> Array
  #   resp.uploads[0].upload_id #=> String
  #   resp.uploads[0].key #=> String
  #   resp.uploads[0].initiated #=> Time
  #   resp.uploads[0].storage_class #=> String, one of "STANDARD", "REDUCED_REDUNDANCY", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "GLACIER", "DEEP_ARCHIVE"
  #   resp.uploads[0].owner.display_name #=> String
  #   resp.uploads[0].owner.id #=> String
  #   resp.uploads[0].initiator.id #=> String
  #   resp.uploads[0].initiator.display_name #=> String
  #   resp.common_prefixes #=> Array
  #   resp.common_prefixes[0].prefix #=> String
  #   resp.encoding_type #=> String, one of "url"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload list_multipart_uploads
  # @param params [Hash] ({})
  # @return [Types::ListMultipartUploadsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListMultipartUploadsOutput#bucket #bucket} => String
  #   * {Types::ListMultipartUploadsOutput#key_marker #key_marker} => String
  #   * {Types::ListMultipartUploadsOutput#upload_id_marker #upload_id_marker} => String
  #   * {Types::ListMultipartUploadsOutput#next_key_marker #next_key_marker} => String
  #   * {Types::ListMultipartUploadsOutput#prefix #prefix} => String
  #   * {Types::ListMultipartUploadsOutput#delimiter #delimiter} => String
  #   * {Types::ListMultipartUploadsOutput#next_upload_id_marker #next_upload_id_marker} => String
  #   * {Types::ListMultipartUploadsOutput#max_uploads #max_uploads} => Integer
  #   * {Types::ListMultipartUploadsOutput#is_truncated #is_truncated} => Boolean
  #   * {Types::ListMultipartUploadsOutput#uploads #uploads} => Array&lt;Types::MultipartUpload&gt;
  #   * {Types::ListMultipartUploadsOutput#common_prefixes #common_prefixes} => Array&lt;Types::CommonPrefix&gt;
  #   * {Types::ListMultipartUploadsOutput#encoding_type #encoding_type} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListMultipartUploads AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#3949
  def list_multipart_uploads(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns metadata about all of the versions of objects in a bucket.
  #
  # @example Example: To list object versions
  #
  #   # The following example return versions of an object with specific key name prefix. The request limits the number of items
  #   # returned to two. If there are are more than two object version, S3 returns NextToken in the response. You can specify
  #   # this token value in your next request to fetch next set of object versions.
  #
  #   resp = client.list_object_versions({
  #   bucket: "examplebucket",
  #   prefix: "HappyFace.jpg",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   versions: [
  #   {
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   is_latest: true,
  #   key: "HappyFace.jpg",
  #   last_modified: Time.parse("2016-12-15T01:19:41.000Z"),
  #   owner: {
  #   display_name: "owner-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   size: 3191,
  #   storage_class: "STANDARD",
  #   version_id: "null",
  #   },
  #   {
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   is_latest: false,
  #   key: "HappyFace.jpg",
  #   last_modified: Time.parse("2016-12-13T00:58:26.000Z"),
  #   owner: {
  #   display_name: "owner-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   size: 3191,
  #   storage_class: "STANDARD",
  #   version_id: "PHtexPGjH2y.zBgT8LmB7wwLI2mpbz.k",
  #   },
  #   ],
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_object_versions({
  #   bucket: "BucketName", # required
  #   delimiter: "Delimiter",
  #   encoding_type: "url", # accepts url
  #   key_marker: "KeyMarker",
  #   max_keys: 1,
  #   prefix: "Prefix",
  #   version_id_marker: "VersionIdMarker",
  #   })
  # @example Response structure
  #
  #   resp.is_truncated #=> Boolean
  #   resp.key_marker #=> String
  #   resp.version_id_marker #=> String
  #   resp.next_key_marker #=> String
  #   resp.next_version_id_marker #=> String
  #   resp.versions #=> Array
  #   resp.versions[0].etag #=> String
  #   resp.versions[0].size #=> Integer
  #   resp.versions[0].storage_class #=> String, one of "STANDARD"
  #   resp.versions[0].key #=> String
  #   resp.versions[0].version_id #=> String
  #   resp.versions[0].is_latest #=> Boolean
  #   resp.versions[0].last_modified #=> Time
  #   resp.versions[0].owner.display_name #=> String
  #   resp.versions[0].owner.id #=> String
  #   resp.delete_markers #=> Array
  #   resp.delete_markers[0].owner.display_name #=> String
  #   resp.delete_markers[0].owner.id #=> String
  #   resp.delete_markers[0].key #=> String
  #   resp.delete_markers[0].version_id #=> String
  #   resp.delete_markers[0].is_latest #=> Boolean
  #   resp.delete_markers[0].last_modified #=> Time
  #   resp.name #=> String
  #   resp.prefix #=> String
  #   resp.delimiter #=> String
  #   resp.max_keys #=> Integer
  #   resp.common_prefixes #=> Array
  #   resp.common_prefixes[0].prefix #=> String
  #   resp.encoding_type #=> String, one of "url"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload list_object_versions
  # @param params [Hash] ({})
  # @return [Types::ListObjectVersionsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListObjectVersionsOutput#is_truncated #is_truncated} => Boolean
  #   * {Types::ListObjectVersionsOutput#key_marker #key_marker} => String
  #   * {Types::ListObjectVersionsOutput#version_id_marker #version_id_marker} => String
  #   * {Types::ListObjectVersionsOutput#next_key_marker #next_key_marker} => String
  #   * {Types::ListObjectVersionsOutput#next_version_id_marker #next_version_id_marker} => String
  #   * {Types::ListObjectVersionsOutput#versions #versions} => Array&lt;Types::ObjectVersion&gt;
  #   * {Types::ListObjectVersionsOutput#delete_markers #delete_markers} => Array&lt;Types::DeleteMarkerEntry&gt;
  #   * {Types::ListObjectVersionsOutput#name #name} => String
  #   * {Types::ListObjectVersionsOutput#prefix #prefix} => String
  #   * {Types::ListObjectVersionsOutput#delimiter #delimiter} => String
  #   * {Types::ListObjectVersionsOutput#max_keys #max_keys} => Integer
  #   * {Types::ListObjectVersionsOutput#common_prefixes #common_prefixes} => Array&lt;Types::CommonPrefix&gt;
  #   * {Types::ListObjectVersionsOutput#encoding_type #encoding_type} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectVersions AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4090
  def list_object_versions(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns some or all (up to 1000) of the objects in a bucket. You can
  # use the request parameters as selection criteria to return a subset of
  # the objects in a bucket.
  #
  # @example Example: To list objects in a bucket
  #
  #   # The following example list two objects in a bucket.
  #
  #   resp = client.list_objects({
  #   bucket: "examplebucket",
  #   max_keys: 2,
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   contents: [
  #   {
  #   etag: "\"70ee1738b6b21e2c8a43f3a5ab0eee71\"",
  #   key: "example1.jpg",
  #   last_modified: Time.parse("2014-11-21T19:40:05.000Z"),
  #   owner: {
  #   display_name: "myname",
  #   id: "12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   size: 11,
  #   storage_class: "STANDARD",
  #   },
  #   {
  #   etag: "\"9c8af9a76df052144598c115ef33e511\"",
  #   key: "example2.jpg",
  #   last_modified: Time.parse("2013-11-15T01:10:49.000Z"),
  #   owner: {
  #   display_name: "myname",
  #   id: "12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   size: 713193,
  #   storage_class: "STANDARD",
  #   },
  #   ],
  #   next_marker: "eyJNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ==",
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_objects({
  #   bucket: "BucketName", # required
  #   delimiter: "Delimiter",
  #   encoding_type: "url", # accepts url
  #   marker: "Marker",
  #   max_keys: 1,
  #   prefix: "Prefix",
  #   request_payer: "requester", # accepts requester
  #   })
  # @example Response structure
  #
  #   resp.is_truncated #=> Boolean
  #   resp.marker #=> String
  #   resp.next_marker #=> String
  #   resp.contents #=> Array
  #   resp.contents[0].key #=> String
  #   resp.contents[0].last_modified #=> Time
  #   resp.contents[0].etag #=> String
  #   resp.contents[0].size #=> Integer
  #   resp.contents[0].storage_class #=> String, one of "STANDARD", "REDUCED_REDUNDANCY", "GLACIER", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "DEEP_ARCHIVE"
  #   resp.contents[0].owner.display_name #=> String
  #   resp.contents[0].owner.id #=> String
  #   resp.name #=> String
  #   resp.prefix #=> String
  #   resp.delimiter #=> String
  #   resp.max_keys #=> Integer
  #   resp.common_prefixes #=> Array
  #   resp.common_prefixes[0].prefix #=> String
  #   resp.encoding_type #=> String, one of "url"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload list_objects
  # @param params [Hash] ({})
  # @return [Types::ListObjectsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListObjectsOutput#is_truncated #is_truncated} => Boolean
  #   * {Types::ListObjectsOutput#marker #marker} => String
  #   * {Types::ListObjectsOutput#next_marker #next_marker} => String
  #   * {Types::ListObjectsOutput#contents #contents} => Array&lt;Types::Object&gt;
  #   * {Types::ListObjectsOutput#name #name} => String
  #   * {Types::ListObjectsOutput#prefix #prefix} => String
  #   * {Types::ListObjectsOutput#delimiter #delimiter} => String
  #   * {Types::ListObjectsOutput#max_keys #max_keys} => Integer
  #   * {Types::ListObjectsOutput#common_prefixes #common_prefixes} => Array&lt;Types::CommonPrefix&gt;
  #   * {Types::ListObjectsOutput#encoding_type #encoding_type} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjects AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4216
  def list_objects(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns some or all (up to 1000) of the objects in a bucket. You can
  # use the request parameters as selection criteria to return a subset of
  # the objects in a bucket. Note: ListObjectsV2 is the revised List
  # Objects API and we recommend you use this revised API for new
  # application development.
  #
  # @example Response structure
  #
  #   resp.is_truncated #=> Boolean
  #   resp.contents #=> Array
  #   resp.contents[0].key #=> String
  #   resp.contents[0].last_modified #=> Time
  #   resp.contents[0].etag #=> String
  #   resp.contents[0].size #=> Integer
  #   resp.contents[0].storage_class #=> String, one of "STANDARD", "REDUCED_REDUNDANCY", "GLACIER", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "DEEP_ARCHIVE"
  #   resp.contents[0].owner.display_name #=> String
  #   resp.contents[0].owner.id #=> String
  #   resp.name #=> String
  #   resp.prefix #=> String
  #   resp.delimiter #=> String
  #   resp.max_keys #=> Integer
  #   resp.common_prefixes #=> Array
  #   resp.common_prefixes[0].prefix #=> String
  #   resp.encoding_type #=> String, one of "url"
  #   resp.key_count #=> Integer
  #   resp.continuation_token #=> String
  #   resp.next_continuation_token #=> String
  #   resp.start_after #=> String
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_objects_v2({
  #   bucket: "BucketName", # required
  #   delimiter: "Delimiter",
  #   encoding_type: "url", # accepts url
  #   max_keys: 1,
  #   prefix: "Prefix",
  #   continuation_token: "Token",
  #   fetch_owner: false,
  #   start_after: "StartAfter",
  #   request_payer: "requester", # accepts requester
  #   })
  # @example Example: To get object list
  #
  #   # The following example retrieves object list. The request specifies max keys to limit response to include only 2 object
  #   # keys.
  #
  #   resp = client.list_objects_v2({
  #   bucket: "examplebucket",
  #   max_keys: 2,
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   contents: [
  #   {
  #   etag: "\"70ee1738b6b21e2c8a43f3a5ab0eee71\"",
  #   key: "happyface.jpg",
  #   last_modified: Time.parse("2014-11-21T19:40:05.000Z"),
  #   size: 11,
  #   storage_class: "STANDARD",
  #   },
  #   {
  #   etag: "\"becf17f89c30367a9a44495d62ed521a-1\"",
  #   key: "test.jpg",
  #   last_modified: Time.parse("2014-05-02T04:51:50.000Z"),
  #   size: 4192256,
  #   storage_class: "STANDARD",
  #   },
  #   ],
  #   is_truncated: true,
  #   key_count: 2,
  #   max_keys: 2,
  #   name: "examplebucket",
  #   next_continuation_token: "1w41l63U0xa8q7smH50vCxyTQqdxo69O3EmK28Bi5PcROI4wI/EyIJg==",
  #   prefix: "",
  #   }
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload list_objects_v2
  # @param params [Hash] ({})
  # @return [Types::ListObjectsV2Output] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListObjectsV2Output#is_truncated #is_truncated} => Boolean
  #   * {Types::ListObjectsV2Output#contents #contents} => Array&lt;Types::Object&gt;
  #   * {Types::ListObjectsV2Output#name #name} => String
  #   * {Types::ListObjectsV2Output#prefix #prefix} => String
  #   * {Types::ListObjectsV2Output#delimiter #delimiter} => String
  #   * {Types::ListObjectsV2Output#max_keys #max_keys} => Integer
  #   * {Types::ListObjectsV2Output#common_prefixes #common_prefixes} => Array&lt;Types::CommonPrefix&gt;
  #   * {Types::ListObjectsV2Output#encoding_type #encoding_type} => String
  #   * {Types::ListObjectsV2Output#key_count #key_count} => Integer
  #   * {Types::ListObjectsV2Output#continuation_token #continuation_token} => String
  #   * {Types::ListObjectsV2Output#next_continuation_token #next_continuation_token} => String
  #   * {Types::ListObjectsV2Output#start_after #start_after} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectsV2 AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4356
  def list_objects_v2(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Lists the parts that have been uploaded for a specific multipart
  # upload.
  #
  # @example Example: To list parts of a multipart upload.
  #
  #   # The following example lists parts uploaded for a specific multipart upload.
  #
  #   resp = client.list_parts({
  #   bucket: "examplebucket",
  #   key: "bigobject",
  #   upload_id: "example7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   initiator: {
  #   display_name: "owner-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   owner: {
  #   display_name: "owner-display-name",
  #   id: "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
  #   },
  #   parts: [
  #   {
  #   etag: "\"d8c2eafd90c266e19ab9dcacc479f8af\"",
  #   last_modified: Time.parse("2016-12-16T00:11:42.000Z"),
  #   part_number: 1,
  #   size: 26246026,
  #   },
  #   {
  #   etag: "\"d8c2eafd90c266e19ab9dcacc479f8af\"",
  #   last_modified: Time.parse("2016-12-16T00:15:01.000Z"),
  #   part_number: 2,
  #   size: 26246026,
  #   },
  #   ],
  #   storage_class: "STANDARD",
  #   }
  # @example Response structure
  #
  #   resp.abort_date #=> Time
  #   resp.abort_rule_id #=> String
  #   resp.bucket #=> String
  #   resp.key #=> String
  #   resp.upload_id #=> String
  #   resp.part_number_marker #=> Integer
  #   resp.next_part_number_marker #=> Integer
  #   resp.max_parts #=> Integer
  #   resp.is_truncated #=> Boolean
  #   resp.parts #=> Array
  #   resp.parts[0].part_number #=> Integer
  #   resp.parts[0].last_modified #=> Time
  #   resp.parts[0].etag #=> String
  #   resp.parts[0].size #=> Integer
  #   resp.initiator.id #=> String
  #   resp.initiator.display_name #=> String
  #   resp.owner.display_name #=> String
  #   resp.owner.id #=> String
  #   resp.storage_class #=> String, one of "STANDARD", "REDUCED_REDUNDANCY", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "GLACIER", "DEEP_ARCHIVE"
  #   resp.request_charged #=> String, one of "requester"
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_parts({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   max_parts: 1,
  #   part_number_marker: 1,
  #   upload_id: "MultipartUploadId", # required
  #   request_payer: "requester", # accepts requester
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload list_parts
  # @param params [Hash] ({})
  # @return [Types::ListPartsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListPartsOutput#abort_date #abort_date} => Time
  #   * {Types::ListPartsOutput#abort_rule_id #abort_rule_id} => String
  #   * {Types::ListPartsOutput#bucket #bucket} => String
  #   * {Types::ListPartsOutput#key #key} => String
  #   * {Types::ListPartsOutput#upload_id #upload_id} => String
  #   * {Types::ListPartsOutput#part_number_marker #part_number_marker} => Integer
  #   * {Types::ListPartsOutput#next_part_number_marker #next_part_number_marker} => Integer
  #   * {Types::ListPartsOutput#max_parts #max_parts} => Integer
  #   * {Types::ListPartsOutput#is_truncated #is_truncated} => Boolean
  #   * {Types::ListPartsOutput#parts #parts} => Array&lt;Types::Part&gt;
  #   * {Types::ListPartsOutput#initiator #initiator} => Types::Initiator
  #   * {Types::ListPartsOutput#owner #owner} => Types::Owner
  #   * {Types::ListPartsOutput#storage_class #storage_class} => String
  #   * {Types::ListPartsOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListParts AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4479
  def list_parts(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets the accelerate configuration of an existing bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_accelerate_configuration({
  #   bucket: "BucketName", # required
  #   accelerate_configuration: { # required
  #   status: "Enabled", # accepts Enabled, Suspended
  #   },
  #   })
  # @option params
  # @option params
  # @overload put_bucket_accelerate_configuration
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAccelerateConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4507
  def put_bucket_accelerate_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets the permissions on a bucket using access control lists (ACL).
  #
  # @example Example: Put bucket acl
  #
  #   # The following example replaces existing ACL on a bucket. The ACL grants the bucket owner (specified using the owner ID)
  #   # and write permission to the LogDelivery group. Because this is a replace operation, you must specify all the grants in
  #   # your request. To incrementally add or remove ACL grants, you might use the console.
  #
  #   resp = client.put_bucket_acl({
  #   bucket: "examplebucket",
  #   grant_full_control: "id=examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484",
  #   grant_write: "uri=http://acs.amazonaws.com/groups/s3/LogDelivery",
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_acl({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read
  #   access_control_policy: {
  #   grants: [
  #   {
  #   grantee: {
  #   display_name: "DisplayName",
  #   email_address: "EmailAddress",
  #   id: "ID",
  #   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
  #   uri: "URI",
  #   },
  #   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
  #   },
  #   ],
  #   owner: {
  #   display_name: "DisplayName",
  #   id: "ID",
  #   },
  #   },
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write: "GrantWrite",
  #   grant_write_acp: "GrantWriteACP",
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_acl
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAcl AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4592
  def put_bucket_acl(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets an analytics configuration for the bucket (specified by the
  # analytics configuration ID).
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_analytics_configuration({
  #   bucket: "BucketName", # required
  #   id: "AnalyticsId", # required
  #   analytics_configuration: { # required
  #   id: "AnalyticsId", # required
  #   filter: {
  #   prefix: "Prefix",
  #   tag: {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   and: {
  #   prefix: "Prefix",
  #   tags: [
  #   {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   ],
  #   },
  #   },
  #   storage_class_analysis: { # required
  #   data_export: {
  #   output_schema_version: "V_1", # required, accepts V_1
  #   destination: { # required
  #   s3_bucket_destination: { # required
  #   format: "CSV", # required, accepts CSV
  #   bucket_account_id: "AccountId",
  #   bucket: "BucketName", # required
  #   prefix: "Prefix",
  #   },
  #   },
  #   },
  #   },
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_analytics_configuration
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAnalyticsConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4654
  def put_bucket_analytics_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets the CORS configuration for a bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_cors({
  #   bucket: "BucketName", # required
  #   cors_configuration: { # required
  #   cors_rules: [ # required
  #   {
  #   allowed_headers: ["AllowedHeader"],
  #   allowed_methods: ["AllowedMethod"], # required
  #   allowed_origins: ["AllowedOrigin"], # required
  #   expose_headers: ["ExposeHeader"],
  #   max_age_seconds: 1,
  #   },
  #   ],
  #   },
  #   content_md5: "ContentMD5",
  #   })
  # @example Example: To set cors configuration on a bucket.
  #
  #   # The following example enables PUT, POST, and DELETE requests from www.example.com, and enables GET requests from any
  #   # domain.
  #
  #   resp = client.put_bucket_cors({
  #   bucket: "",
  #   cors_configuration: {
  #   cors_rules: [
  #   {
  #   allowed_headers: [
  #   "*",
  #   ],
  #   allowed_methods: [
  #   "PUT",
  #   "POST",
  #   "DELETE",
  #   ],
  #   allowed_origins: [
  #   "http://www.example.com",
  #   ],
  #   expose_headers: [
  #   "x-amz-server-side-encryption",
  #   ],
  #   max_age_seconds: 3000,
  #   },
  #   {
  #   allowed_headers: [
  #   "Authorization",
  #   ],
  #   allowed_methods: [
  #   "GET",
  #   ],
  #   allowed_origins: [
  #   "*",
  #   ],
  #   max_age_seconds: 3000,
  #   },
  #   ],
  #   },
  #   content_md5: "",
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_cors
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketCors AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4735
  def put_bucket_cors(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a new server-side encryption configuration (or replaces an
  # existing one, if present).
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_encryption({
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   server_side_encryption_configuration: { # required
  #   rules: [ # required
  #   {
  #   apply_server_side_encryption_by_default: {
  #   sse_algorithm: "AES256", # required, accepts AES256, aws:kms
  #   kms_master_key_id: "SSEKMSKeyId",
  #   },
  #   },
  #   ],
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_encryption
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketEncryption AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4784
  def put_bucket_encryption(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Adds an inventory configuration (identified by the inventory ID) from
  # the bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_inventory_configuration({
  #   bucket: "BucketName", # required
  #   id: "InventoryId", # required
  #   inventory_configuration: { # required
  #   destination: { # required
  #   s3_bucket_destination: { # required
  #   account_id: "AccountId",
  #   bucket: "BucketName", # required
  #   format: "CSV", # required, accepts CSV, ORC, Parquet
  #   prefix: "Prefix",
  #   encryption: {
  #   sses3: {
  #   },
  #   ssekms: {
  #   key_id: "SSEKMSKeyId", # required
  #   },
  #   },
  #   },
  #   },
  #   is_enabled: false, # required
  #   filter: {
  #   prefix: "Prefix", # required
  #   },
  #   id: "InventoryId", # required
  #   included_object_versions: "All", # required, accepts All, Current
  #   optional_fields: ["Size"], # accepts Size, LastModifiedDate, StorageClass, ETag, IsMultipartUploaded, ReplicationStatus, EncryptionStatus, ObjectLockRetainUntilDate, ObjectLockMode, ObjectLockLegalHoldStatus
  #   schedule: { # required
  #   frequency: "Daily", # required, accepts Daily, Weekly
  #   },
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_inventory_configuration
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketInventoryConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4842
  def put_bucket_inventory_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # No longer used, see the PutBucketLifecycleConfiguration operation.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_lifecycle({
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   lifecycle_configuration: {
  #   rules: [ # required
  #   {
  #   expiration: {
  #   date: Time.now,
  #   days: 1,
  #   expired_object_delete_marker: false,
  #   },
  #   id: "ID",
  #   prefix: "Prefix", # required
  #   status: "Enabled", # required, accepts Enabled, Disabled
  #   transition: {
  #   date: Time.now,
  #   days: 1,
  #   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
  #   },
  #   noncurrent_version_transition: {
  #   noncurrent_days: 1,
  #   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
  #   },
  #   noncurrent_version_expiration: {
  #   noncurrent_days: 1,
  #   },
  #   abort_incomplete_multipart_upload: {
  #   days_after_initiation: 1,
  #   },
  #   },
  #   ],
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_lifecycle
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLifecycle AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4897
  def put_bucket_lifecycle(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets lifecycle configuration for your bucket. If a lifecycle
  # configuration exists, it replaces it.
  #
  # @example Example: Put bucket lifecycle
  #
  #   # The following example replaces existing lifecycle configuration, if any, on the specified bucket.
  #
  #   resp = client.put_bucket_lifecycle_configuration({
  #   bucket: "examplebucket",
  #   lifecycle_configuration: {
  #   rules: [
  #   {
  #   expiration: {
  #   days: 3650,
  #   },
  #   filter: {
  #   prefix: "documents/",
  #   },
  #   id: "TestOnly",
  #   status: "Enabled",
  #   transitions: [
  #   {
  #   days: 365,
  #   storage_class: "GLACIER",
  #   },
  #   ],
  #   },
  #   ],
  #   },
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_lifecycle_configuration({
  #   bucket: "BucketName", # required
  #   lifecycle_configuration: {
  #   rules: [ # required
  #   {
  #   expiration: {
  #   date: Time.now,
  #   days: 1,
  #   expired_object_delete_marker: false,
  #   },
  #   id: "ID",
  #   prefix: "Prefix",
  #   filter: {
  #   prefix: "Prefix",
  #   tag: {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   and: {
  #   prefix: "Prefix",
  #   tags: [
  #   {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   ],
  #   },
  #   },
  #   status: "Enabled", # required, accepts Enabled, Disabled
  #   transitions: [
  #   {
  #   date: Time.now,
  #   days: 1,
  #   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
  #   },
  #   ],
  #   noncurrent_version_transitions: [
  #   {
  #   noncurrent_days: 1,
  #   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
  #   },
  #   ],
  #   noncurrent_version_expiration: {
  #   noncurrent_days: 1,
  #   },
  #   abort_incomplete_multipart_upload: {
  #   days_after_initiation: 1,
  #   },
  #   },
  #   ],
  #   },
  #   })
  # @option params
  # @option params
  # @overload put_bucket_lifecycle_configuration
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLifecycleConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#4999
  def put_bucket_lifecycle_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Set the logging parameters for a bucket and to specify permissions for
  # who can view and modify the logging parameters. To set the logging
  # status of a bucket, you must be the bucket owner.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_logging({
  #   bucket: "BucketName", # required
  #   bucket_logging_status: { # required
  #   logging_enabled: {
  #   target_bucket: "TargetBucket", # required
  #   target_grants: [
  #   {
  #   grantee: {
  #   display_name: "DisplayName",
  #   email_address: "EmailAddress",
  #   id: "ID",
  #   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
  #   uri: "URI",
  #   },
  #   permission: "FULL_CONTROL", # accepts FULL_CONTROL, READ, WRITE
  #   },
  #   ],
  #   target_prefix: "TargetPrefix", # required
  #   },
  #   },
  #   content_md5: "ContentMD5",
  #   })
  # @example Example: Set logging configuration for a bucket
  #
  #   # The following example sets logging policy on a bucket. For the Log Delivery group to deliver logs to the destination
  #   # bucket, it needs permission for the READ_ACP action which the policy grants.
  #
  #   resp = client.put_bucket_logging({
  #   bucket: "sourcebucket",
  #   bucket_logging_status: {
  #   logging_enabled: {
  #   target_bucket: "targetbucket",
  #   target_grants: [
  #   {
  #   grantee: {
  #   type: "Group",
  #   uri: "http://acs.amazonaws.com/groups/global/AllUsers",
  #   },
  #   permission: "READ",
  #   },
  #   ],
  #   target_prefix: "MyBucketLogs/",
  #   },
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_logging
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLogging AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#5070
  def put_bucket_logging(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets a metrics configuration (specified by the metrics configuration
  # ID) for the bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_metrics_configuration({
  #   bucket: "BucketName", # required
  #   id: "MetricsId", # required
  #   metrics_configuration: { # required
  #   id: "MetricsId", # required
  #   filter: {
  #   prefix: "Prefix",
  #   tag: {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   and: {
  #   prefix: "Prefix",
  #   tags: [
  #   {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   ],
  #   },
  #   },
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_metrics_configuration
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketMetricsConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#5119
  def put_bucket_metrics_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # No longer used, see the PutBucketNotificationConfiguration operation.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_notification({
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   notification_configuration: { # required
  #   topic_configuration: {
  #   id: "NotificationId",
  #   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   topic: "TopicArn",
  #   },
  #   queue_configuration: {
  #   id: "NotificationId",
  #   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   queue: "QueueArn",
  #   },
  #   cloud_function_configuration: {
  #   id: "NotificationId",
  #   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   cloud_function: "CloudFunction",
  #   invocation_role: "CloudFunctionInvocationRole",
  #   },
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_notification
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketNotification AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#5166
  def put_bucket_notification(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Enables notifications of specified events for a bucket.
  #
  # @example Example: Set notification configuration for a bucket
  #
  #   # The following example sets notification configuration on a bucket to publish the object created events to an SNS topic.
  #
  #   resp = client.put_bucket_notification_configuration({
  #   bucket: "examplebucket",
  #   notification_configuration: {
  #   topic_configurations: [
  #   {
  #   events: [
  #   "s3:ObjectCreated:*",
  #   ],
  #   topic_arn: "arn:aws:sns:us-west-2:123456789012:s3-notification-topic",
  #   },
  #   ],
  #   },
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_notification_configuration({
  #   bucket: "BucketName", # required
  #   notification_configuration: { # required
  #   topic_configurations: [
  #   {
  #   id: "NotificationId",
  #   topic_arn: "TopicArn", # required
  #   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   filter: {
  #   key: {
  #   filter_rules: [
  #   {
  #   name: "prefix", # accepts prefix, suffix
  #   value: "FilterRuleValue",
  #   },
  #   ],
  #   },
  #   },
  #   },
  #   ],
  #   queue_configurations: [
  #   {
  #   id: "NotificationId",
  #   queue_arn: "QueueArn", # required
  #   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   filter: {
  #   key: {
  #   filter_rules: [
  #   {
  #   name: "prefix", # accepts prefix, suffix
  #   value: "FilterRuleValue",
  #   },
  #   ],
  #   },
  #   },
  #   },
  #   ],
  #   lambda_function_configurations: [
  #   {
  #   id: "NotificationId",
  #   lambda_function_arn: "LambdaFunctionArn", # required
  #   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
  #   filter: {
  #   key: {
  #   filter_rules: [
  #   {
  #   name: "prefix", # accepts prefix, suffix
  #   value: "FilterRuleValue",
  #   },
  #   ],
  #   },
  #   },
  #   },
  #   ],
  #   },
  #   })
  # @option params
  # @option params
  # @overload put_bucket_notification_configuration
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketNotificationConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#5261
  def put_bucket_notification_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Applies an Amazon S3 bucket policy to an Amazon S3 bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_policy({
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   confirm_remove_self_bucket_access: false,
  #   policy: "Policy", # required
  #   })
  # @example Example: Set bucket policy
  #
  #   # The following example sets a permission policy on a bucket.
  #
  #   resp = client.put_bucket_policy({
  #   bucket: "examplebucket",
  #   policy: "{\"Version\": \"2012-10-17\", \"Statement\": [{ \"Sid\": \"id-1\",\"Effect\": \"Allow\",\"Principal\": {\"AWS\": \"arn:aws:iam::123456789012:root\"}, \"Action\": [ \"s3:PutObject\",\"s3:PutObjectAcl\"], \"Resource\": [\"arn:aws:s3:::acl3/*\" ] } ]}",
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_policy
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketPolicy AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#5304
  def put_bucket_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a replication configuration or replaces an existing one. For
  # more information, see [Cross-Region Replication (CRR)][1] in the
  # *Amazon S3 Developer Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_replication({
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   replication_configuration: { # required
  #   role: "Role", # required
  #   rules: [ # required
  #   {
  #   id: "ID",
  #   priority: 1,
  #   prefix: "Prefix",
  #   filter: {
  #   prefix: "Prefix",
  #   tag: {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   and: {
  #   prefix: "Prefix",
  #   tags: [
  #   {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   ],
  #   },
  #   },
  #   status: "Enabled", # required, accepts Enabled, Disabled
  #   source_selection_criteria: {
  #   sse_kms_encrypted_objects: {
  #   status: "Enabled", # required, accepts Enabled, Disabled
  #   },
  #   },
  #   destination: { # required
  #   bucket: "BucketName", # required
  #   account: "AccountId",
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   access_control_translation: {
  #   owner: "Destination", # required, accepts Destination
  #   },
  #   encryption_configuration: {
  #   replica_kms_key_id: "ReplicaKmsKeyID",
  #   },
  #   },
  #   delete_marker_replication: {
  #   status: "Enabled", # accepts Enabled, Disabled
  #   },
  #   },
  #   ],
  #   },
  #   token: "ObjectLockToken",
  #   })
  # @example Example: Set replication configuration on a bucket
  #
  #   # The following example sets replication configuration on a bucket.
  #
  #   resp = client.put_bucket_replication({
  #   bucket: "examplebucket",
  #   replication_configuration: {
  #   role: "arn:aws:iam::123456789012:role/examplerole",
  #   rules: [
  #   {
  #   destination: {
  #   bucket: "arn:aws:s3:::destinationbucket",
  #   storage_class: "STANDARD",
  #   },
  #   prefix: "",
  #   status: "Enabled",
  #   },
  #   ],
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_replication
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketReplication AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#5412
  def put_bucket_replication(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets the request payment configuration for a bucket. By default, the
  # bucket owner pays for downloads from the bucket. This configuration
  # parameter enables the bucket owner (only) to specify that the person
  # requesting the download will be charged for the download.
  # Documentation on requester pays buckets can be found at
  # http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_request_payment({
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   request_payment_configuration: { # required
  #   payer: "Requester", # required, accepts Requester, BucketOwner
  #   },
  #   })
  # @example Example: Set request payment configuration on a bucket.
  #
  #   # The following example sets request payment configuration on a bucket so that person requesting the download is charged.
  #
  #   resp = client.put_bucket_request_payment({
  #   bucket: "examplebucket",
  #   request_payment_configuration: {
  #   payer: "Requester",
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_request_payment
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketRequestPayment AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#5458
  def put_bucket_request_payment(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets the tags for a bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_tagging({
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   tagging: { # required
  #   tag_set: [ # required
  #   {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   ],
  #   },
  #   })
  # @example Example: Set tags on a bucket
  #
  #   # The following example sets tags on a bucket. Any existing tags are replaced.
  #
  #   resp = client.put_bucket_tagging({
  #   bucket: "examplebucket",
  #   tagging: {
  #   tag_set: [
  #   {
  #   key: "Key1",
  #   value: "Value1",
  #   },
  #   {
  #   key: "Key2",
  #   value: "Value2",
  #   },
  #   ],
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_tagging
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketTagging AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#5513
  def put_bucket_tagging(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets the versioning state of an existing bucket. To set the versioning
  # state, you must be the bucket owner.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_versioning({
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   mfa: "MFA",
  #   versioning_configuration: { # required
  #   mfa_delete: "Enabled", # accepts Enabled, Disabled
  #   status: "Enabled", # accepts Enabled, Suspended
  #   },
  #   })
  # @example Example: Set versioning configuration on a bucket
  #
  #   # The following example sets versioning configuration on bucket. The configuration enables versioning on the bucket.
  #
  #   resp = client.put_bucket_versioning({
  #   bucket: "examplebucket",
  #   versioning_configuration: {
  #   mfa_delete: "Disabled",
  #   status: "Enabled",
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_versioning
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketVersioning AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#5562
  def put_bucket_versioning(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Set the website configuration for a bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_bucket_website({
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   website_configuration: { # required
  #   error_document: {
  #   key: "ObjectKey", # required
  #   },
  #   index_document: {
  #   suffix: "Suffix", # required
  #   },
  #   redirect_all_requests_to: {
  #   host_name: "HostName", # required
  #   protocol: "http", # accepts http, https
  #   },
  #   routing_rules: [
  #   {
  #   condition: {
  #   http_error_code_returned_equals: "HttpErrorCodeReturnedEquals",
  #   key_prefix_equals: "KeyPrefixEquals",
  #   },
  #   redirect: { # required
  #   host_name: "HostName",
  #   http_redirect_code: "HttpRedirectCode",
  #   protocol: "http", # accepts http, https
  #   replace_key_prefix_with: "ReplaceKeyPrefixWith",
  #   replace_key_with: "ReplaceKeyWith",
  #   },
  #   },
  #   ],
  #   },
  #   })
  # @example Example: Set website configuration on a bucket
  #
  #   # The following example adds website configuration to a bucket.
  #
  #   resp = client.put_bucket_website({
  #   bucket: "examplebucket",
  #   content_md5: "",
  #   website_configuration: {
  #   error_document: {
  #   key: "error.html",
  #   },
  #   index_document: {
  #   suffix: "index.html",
  #   },
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_bucket_website
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketWebsite AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#5633
  def put_bucket_website(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Adds an object to a bucket.
  #
  # @example Example: To upload object and specify user-defined metadata
  #
  #   # The following example creates an object. The request also specifies optional metadata. If the bucket is versioning
  #   # enabled, S3 returns version ID in response.
  #
  #   resp = client.put_object({
  #   body: "filetoupload",
  #   bucket: "examplebucket",
  #   key: "exampleobject",
  #   metadata: {
  #   "metadata1" => "value1",
  #   "metadata2" => "value2",
  #   },
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   version_id: "pSKidl4pHBiNwukdbcPXAIs.sshFFOc0",
  #   }
  # @example Example: To create an object.
  #
  #   # The following example creates an object. If the bucket is versioning enabled, S3 returns version ID in response.
  #
  #   resp = client.put_object({
  #   body: "filetoupload",
  #   bucket: "examplebucket",
  #   key: "objectkey",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   version_id: "Bvq0EDKxOcXLJXNo_Lkz37eM3R4pfzyQ",
  #   }
  # @example Example: To upload an object
  #
  #   # The following example uploads an object to a versioning-enabled bucket. The source file is specified using Windows file
  #   # syntax. S3 returns VersionId of the newly created object.
  #
  #   resp = client.put_object({
  #   body: "HappyFace.jpg",
  #   bucket: "examplebucket",
  #   key: "HappyFace.jpg",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   version_id: "tpf3zF08nBplQK1XLOefGskR7mGDwcDk",
  #   }
  # @example Example: To upload an object and specify canned ACL.
  #
  #   # The following example uploads and object. The request specifies optional canned ACL (access control list) to all READ
  #   # access to authenticated users. If the bucket is versioning enabled, S3 returns version ID in response.
  #
  #   resp = client.put_object({
  #   acl: "authenticated-read",
  #   body: "filetoupload",
  #   bucket: "examplebucket",
  #   key: "exampleobject",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   version_id: "Kirh.unyZwjQ69YxcQLA8z4F5j3kJJKr",
  #   }
  # @example Example: To upload an object (specify optional headers)
  #
  #   # The following example uploads an object. The request specifies optional request headers to directs S3 to use specific
  #   # storage class and use server-side encryption.
  #
  #   resp = client.put_object({
  #   body: "HappyFace.jpg",
  #   bucket: "examplebucket",
  #   key: "HappyFace.jpg",
  #   server_side_encryption: "AES256",
  #   storage_class: "STANDARD_IA",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   server_side_encryption: "AES256",
  #   version_id: "CG612hodqujkf8FaaNfp8U..FIhLROcp",
  #   }
  # @example Streaming a file from disk
  #   # upload file from disk in a single request, may not exceed 5GB
  #   File.open('/source/file/path', 'rb') do |file|
  #   s3.put_object(bucket: 'bucket-name', key: 'object-key', body: file)
  #   end
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_object({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   body: source_file,
  #   bucket: "BucketName", # required
  #   cache_control: "CacheControl",
  #   content_disposition: "ContentDisposition",
  #   content_encoding: "ContentEncoding",
  #   content_language: "ContentLanguage",
  #   content_length: 1,
  #   content_md5: "ContentMD5",
  #   content_type: "ContentType",
  #   expires: Time.now,
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write_acp: "GrantWriteACP",
  #   key: "ObjectKey", # required
  #   metadata: {
  #   "MetadataKey" => "MetadataValue",
  #   },
  #   server_side_encryption: "AES256", # accepts AES256, aws:kms
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   website_redirect_location: "WebsiteRedirectLocation",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   ssekms_key_id: "SSEKMSKeyId",
  #   ssekms_encryption_context: "SSEKMSEncryptionContext",
  #   request_payer: "requester", # accepts requester
  #   tagging: "TaggingHeader",
  #   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   object_lock_retain_until_date: Time.now,
  #   object_lock_legal_hold_status: "ON", # accepts ON, OFF
  #   })
  # @example Response structure
  #
  #   resp.expiration #=> String
  #   resp.etag #=> String
  #   resp.server_side_encryption #=> String, one of "AES256", "aws:kms"
  #   resp.version_id #=> String
  #   resp.sse_customer_algorithm #=> String
  #   resp.sse_customer_key_md5 #=> String
  #   resp.ssekms_key_id #=> String
  #   resp.ssekms_encryption_context #=> String
  #   resp.request_charged #=> String, one of "requester"
  # @example Example: To upload an object and specify optional tags
  #
  #   # The following example uploads an object. The request specifies optional object tags. The bucket is versioned, therefore
  #   # S3 returns version ID of the newly created object.
  #
  #   resp = client.put_object({
  #   body: "c:\\HappyFace.jpg",
  #   bucket: "examplebucket",
  #   key: "HappyFace.jpg",
  #   tagging: "key1=value1&key2=value2",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   version_id: "psM2sYY4.o1501dSx8wMvnkOzSBB.V4a",
  #   }
  # @example Example: To upload an object and specify server-side encryption and object tags
  #
  #   # The following example uploads and object. The request specifies the optional server-side encryption option. The request
  #   # also specifies optional object tags. If the bucket is versioning enabled, S3 returns version ID in response.
  #
  #   resp = client.put_object({
  #   body: "filetoupload",
  #   bucket: "examplebucket",
  #   key: "exampleobject",
  #   server_side_encryption: "AES256",
  #   tagging: "key1=value1&key2=value2",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   etag: "\"6805f2cfc46c0f04559748bb039d69ae\"",
  #   server_side_encryption: "AES256",
  #   version_id: "Ri.vC6qVlA4dEnjgRV4ZHsHoFIjqEMNt",
  #   }
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_object
  # @param params [Hash] ({})
  # @return [Types::PutObjectOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutObjectOutput#expiration #expiration} => String
  #   * {Types::PutObjectOutput#etag #etag} => String
  #   * {Types::PutObjectOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::PutObjectOutput#version_id #version_id} => String
  #   * {Types::PutObjectOutput#sse_customer_algorithm #sse_customer_algorithm} => String
  #   * {Types::PutObjectOutput#sse_customer_key_md5 #sse_customer_key_md5} => String
  #   * {Types::PutObjectOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::PutObjectOutput#ssekms_encryption_context #ssekms_encryption_context} => String
  #   * {Types::PutObjectOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObject AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#5959
  def put_object(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # uses the acl subresource to set the access control list (ACL)
  # permissions for an object that already exists in a bucket
  #
  # @example Example: To grant permissions using object ACL
  #
  #   # The following example adds grants to an object ACL. The first permission grants user1 and user2 FULL_CONTROL and the
  #   # AllUsers group READ permission.
  #
  #   resp = client.put_object_acl({
  #   access_control_policy: {
  #   },
  #   bucket: "examplebucket",
  #   grant_full_control: "emailaddress=user1@example.com,emailaddress=user2@example.com",
  #   grant_read: "uri=http://acs.amazonaws.com/groups/global/AllUsers",
  #   key: "HappyFace.jpg",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_object_acl({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   access_control_policy: {
  #   grants: [
  #   {
  #   grantee: {
  #   display_name: "DisplayName",
  #   email_address: "EmailAddress",
  #   id: "ID",
  #   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
  #   uri: "URI",
  #   },
  #   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
  #   },
  #   ],
  #   owner: {
  #   display_name: "DisplayName",
  #   id: "ID",
  #   },
  #   },
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write: "GrantWrite",
  #   grant_write_acp: "GrantWriteACP",
  #   key: "ObjectKey", # required
  #   request_payer: "requester", # accepts requester
  #   version_id: "ObjectVersionId",
  #   })
  # @example Response structure
  #
  #   resp.request_charged #=> String, one of "requester"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_object_acl
  # @param params [Hash] ({})
  # @return [Types::PutObjectAclOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutObjectAclOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectAcl AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#6072
  def put_object_acl(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Applies a Legal Hold configuration to the specified object.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_object_legal_hold({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   legal_hold: {
  #   status: "ON", # accepts ON, OFF
  #   },
  #   request_payer: "requester", # accepts requester
  #   version_id: "ObjectVersionId",
  #   content_md5: "ContentMD5",
  #   })
  # @example Response structure
  #
  #   resp.request_charged #=> String, one of "requester"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_object_legal_hold
  # @param params [Hash] ({})
  # @return [Types::PutObjectLegalHoldOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutObjectLegalHoldOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectLegalHold AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#6128
  def put_object_legal_hold(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Places an object lock configuration on the specified bucket. The rule
  # specified in the object lock configuration will be applied by default
  # to every new object placed in the specified bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_object_lock_configuration({
  #   bucket: "BucketName", # required
  #   object_lock_configuration: {
  #   object_lock_enabled: "Enabled", # accepts Enabled
  #   rule: {
  #   default_retention: {
  #   mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   days: 1,
  #   years: 1,
  #   },
  #   },
  #   },
  #   request_payer: "requester", # accepts requester
  #   token: "ObjectLockToken",
  #   content_md5: "ContentMD5",
  #   })
  # @example Response structure
  #
  #   resp.request_charged #=> String, one of "requester"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_object_lock_configuration
  # @param params [Hash] ({})
  # @return [Types::PutObjectLockConfigurationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutObjectLockConfigurationOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectLockConfiguration AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#6190
  def put_object_lock_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Places an Object Retention configuration on an object.
  #
  # @example Response structure
  #
  #   resp.request_charged #=> String, one of "requester"
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_object_retention({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   retention: {
  #   mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   retain_until_date: Time.now,
  #   },
  #   request_payer: "requester", # accepts requester
  #   version_id: "ObjectVersionId",
  #   bypass_governance_retention: false,
  #   content_md5: "ContentMD5",
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_object_retention
  # @param params [Hash] ({})
  # @return [Types::PutObjectRetentionOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutObjectRetentionOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectRetention AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#6253
  def put_object_retention(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets the supplied tag-set to an object that already exists in a bucket
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_object_tagging({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   version_id: "ObjectVersionId",
  #   content_md5: "ContentMD5",
  #   tagging: { # required
  #   tag_set: [ # required
  #   {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   ],
  #   },
  #   })
  # @example Example: To add tags to an existing object
  #
  #   # The following example adds tags to an existing object.
  #
  #   resp = client.put_object_tagging({
  #   bucket: "examplebucket",
  #   key: "HappyFace.jpg",
  #   tagging: {
  #   tag_set: [
  #   {
  #   key: "Key3",
  #   value: "Value3",
  #   },
  #   {
  #   key: "Key4",
  #   value: "Value4",
  #   },
  #   ],
  #   },
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   version_id: "null",
  #   }
  # @example Response structure
  #
  #   resp.version_id #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_object_tagging
  # @param params [Hash] ({})
  # @return [Types::PutObjectTaggingOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutObjectTaggingOutput#version_id #version_id} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectTagging AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#6326
  def put_object_tagging(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates or modifies the `PublicAccessBlock` configuration for an
  # Amazon S3 bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_public_access_block({
  #   bucket: "BucketName", # required
  #   content_md5: "ContentMD5",
  #   public_access_block_configuration: { # required
  #   block_public_acls: false,
  #   ignore_public_acls: false,
  #   block_public_policy: false,
  #   restrict_public_buckets: false,
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_public_access_block
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutPublicAccessBlock AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#6371
  def put_public_access_block(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Restores an archived copy of an object back into Amazon S3
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.restore_object({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   version_id: "ObjectVersionId",
  #   restore_request: {
  #   days: 1,
  #   glacier_job_parameters: {
  #   tier: "Standard", # required, accepts Standard, Bulk, Expedited
  #   },
  #   type: "SELECT", # accepts SELECT
  #   tier: "Standard", # accepts Standard, Bulk, Expedited
  #   description: "Description",
  #   select_parameters: {
  #   input_serialization: { # required
  #   csv: {
  #   file_header_info: "USE", # accepts USE, IGNORE, NONE
  #   comments: "Comments",
  #   quote_escape_character: "QuoteEscapeCharacter",
  #   record_delimiter: "RecordDelimiter",
  #   field_delimiter: "FieldDelimiter",
  #   quote_character: "QuoteCharacter",
  #   allow_quoted_record_delimiter: false,
  #   },
  #   compression_type: "NONE", # accepts NONE, GZIP, BZIP2
  #   json: {
  #   type: "DOCUMENT", # accepts DOCUMENT, LINES
  #   },
  #   parquet: {
  #   },
  #   },
  #   expression_type: "SQL", # required, accepts SQL
  #   expression: "Expression", # required
  #   output_serialization: { # required
  #   csv: {
  #   quote_fields: "ALWAYS", # accepts ALWAYS, ASNEEDED
  #   quote_escape_character: "QuoteEscapeCharacter",
  #   record_delimiter: "RecordDelimiter",
  #   field_delimiter: "FieldDelimiter",
  #   quote_character: "QuoteCharacter",
  #   },
  #   json: {
  #   record_delimiter: "RecordDelimiter",
  #   },
  #   },
  #   },
  #   output_location: {
  #   s3: {
  #   bucket_name: "BucketName", # required
  #   prefix: "LocationPrefix", # required
  #   encryption: {
  #   encryption_type: "AES256", # required, accepts AES256, aws:kms
  #   kms_key_id: "SSEKMSKeyId",
  #   kms_context: "KMSContext",
  #   },
  #   canned_acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   access_control_list: [
  #   {
  #   grantee: {
  #   display_name: "DisplayName",
  #   email_address: "EmailAddress",
  #   id: "ID",
  #   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
  #   uri: "URI",
  #   },
  #   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
  #   },
  #   ],
  #   tagging: {
  #   tag_set: [ # required
  #   {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   ],
  #   },
  #   user_metadata: [
  #   {
  #   name: "MetadataKey",
  #   value: "MetadataValue",
  #   },
  #   ],
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   },
  #   },
  #   },
  #   request_payer: "requester", # accepts requester
  #   })
  # @example Example: To restore an archived object
  #
  #   # The following example restores for one day an archived copy of an object back into Amazon S3 bucket.
  #
  #   resp = client.restore_object({
  #   bucket: "examplebucket",
  #   key: "archivedobjectkey",
  #   restore_request: {
  #   days: 1,
  #   glacier_job_parameters: {
  #   tier: "Expedited",
  #   },
  #   },
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   }
  # @example Response structure
  #
  #   resp.request_charged #=> String, one of "requester"
  #   resp.restore_output_path #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload restore_object
  # @param params [Hash] ({})
  # @return [Types::RestoreObjectOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::RestoreObjectOutput#request_charged #request_charged} => String
  #   * {Types::RestoreObjectOutput#restore_output_path #restore_output_path} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/RestoreObject AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#6517
  def restore_object(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # This operation filters the contents of an Amazon S3 object based on a
  # simple Structured Query Language (SQL) statement. In the request,
  # along with the SQL expression, you must also specify a data
  # serialization format (JSON or CSV) of the object. Amazon S3 uses this
  # to parse object data into records, and returns only records that match
  # the specified SQL expression. You must also specify the data
  # serialization format for the response.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.select_object_content({
  #   bucket: "BucketName", # required
  #   key: "ObjectKey", # required
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   expression: "Expression", # required
  #   expression_type: "SQL", # required, accepts SQL
  #   request_progress: {
  #   enabled: false,
  #   },
  #   input_serialization: { # required
  #   csv: {
  #   file_header_info: "USE", # accepts USE, IGNORE, NONE
  #   comments: "Comments",
  #   quote_escape_character: "QuoteEscapeCharacter",
  #   record_delimiter: "RecordDelimiter",
  #   field_delimiter: "FieldDelimiter",
  #   quote_character: "QuoteCharacter",
  #   allow_quoted_record_delimiter: false,
  #   },
  #   compression_type: "NONE", # accepts NONE, GZIP, BZIP2
  #   json: {
  #   type: "DOCUMENT", # accepts DOCUMENT, LINES
  #   },
  #   parquet: {
  #   },
  #   },
  #   output_serialization: { # required
  #   csv: {
  #   quote_fields: "ALWAYS", # accepts ALWAYS, ASNEEDED
  #   quote_escape_character: "QuoteEscapeCharacter",
  #   record_delimiter: "RecordDelimiter",
  #   field_delimiter: "FieldDelimiter",
  #   quote_character: "QuoteCharacter",
  #   },
  #   json: {
  #   record_delimiter: "RecordDelimiter",
  #   },
  #   },
  #   })
  # @example Response structure
  #
  #   All events are available at resp.payload:
  #   resp.payload #=> Enumerator
  #   resp.payload.event_types #=> [:records, :stats, :progress, :cont, :end]
  #
  #   For :records event available at #on_records_event callback and response eventstream enumerator:
  #   event.payload #=> IO
  #
  #   For :stats event available at #on_stats_event callback and response eventstream enumerator:
  #   event.details.bytes_scanned #=> Integer
  #   event.details.bytes_processed #=> Integer
  #   event.details.bytes_returned #=> Integer
  #
  #   For :progress event available at #on_progress_event callback and response eventstream enumerator:
  #   event.details.bytes_scanned #=> Integer
  #   event.details.bytes_processed #=> Integer
  #   event.details.bytes_returned #=> Integer
  #
  #   For :cont event available at #on_cont_event callback and response eventstream enumerator:
  #   #=> EmptyStruct
  #   For :end event available at #on_end_event callback and response eventstream enumerator:
  #   #=> EmptyStruct
  # @example EventStream Operation Example
  #
  #   You can process event once it arrives immediately, or wait until
  #   full response complete and iterate through eventstream enumerator.
  #
  #   To interact with event immediately, you need to register #select_object_content
  #   with callbacks, callbacks can be register for specifc events or for all events,
  #   callback for errors in the event stream is also available for register.
  #
  #   Callbacks can be passed in by `:event_stream_handler` option or within block
  #   statement attached to #select_object_content call directly. Hybrid pattern of both
  #   is also supported.
  #
  #   `:event_stream_handler` option takes in either Proc object or
  #   Aws::S3::EventStreams::SelectObjectContentEventStream object.
  #
  #   Usage pattern a): callbacks with a block attached to #select_object_content
  #   Example for registering callbacks for all event types and error event
  #
  #   client.select_object_content( # params input# ) do |stream|
  #   stream.on_error_event do |event|
  #   # catch unmodeled error event in the stream
  #   raise event
  #   # => Aws::Errors::EventError
  #   # event.event_type => :error
  #   # event.error_code => String
  #   # event.error_message => String
  #   end
  #
  #   stream.on_event do |event|
  #   # process all events arrive
  #   puts event.event_type
  #   ...
  #   end
  #
  #   end
  #
  #   Usage pattern b): pass in `:event_stream_handler` for #select_object_content
  #
  #   1) create a Aws::S3::EventStreams::SelectObjectContentEventStream object
  #   Example for registering callbacks with specific events
  #
  #   handler = Aws::S3::EventStreams::SelectObjectContentEventStream.new
  #   handler.on_records_event do |event|
  #   event # => Aws::S3::Types::Records
  #   end
  #   handler.on_stats_event do |event|
  #   event # => Aws::S3::Types::Stats
  #   end
  #   handler.on_progress_event do |event|
  #   event # => Aws::S3::Types::Progress
  #   end
  #   handler.on_cont_event do |event|
  #   event # => Aws::S3::Types::Cont
  #   end
  #   handler.on_end_event do |event|
  #   event # => Aws::S3::Types::End
  #   end
  #
  #   client.select_object_content( # params input #, event_stream_handler: handler)
  #
  #   2) use a Ruby Proc object
  #   Example for registering callbacks with specific events
  #
  #   handler = Proc.new do |stream|
  #   stream.on_records_event do |event|
  #   event # => Aws::S3::Types::Records
  #   end
  #   stream.on_stats_event do |event|
  #   event # => Aws::S3::Types::Stats
  #   end
  #   stream.on_progress_event do |event|
  #   event # => Aws::S3::Types::Progress
  #   end
  #   stream.on_cont_event do |event|
  #   event # => Aws::S3::Types::Cont
  #   end
  #   stream.on_end_event do |event|
  #   event # => Aws::S3::Types::End
  #   end
  #   end
  #
  #   client.select_object_content( # params input #, event_stream_handler: handler)
  #
  #   Usage pattern c): hybird pattern of a) and b)
  #
  #   handler = Aws::S3::EventStreams::SelectObjectContentEventStream.new
  #   handler.on_records_event do |event|
  #   event # => Aws::S3::Types::Records
  #   end
  #   handler.on_stats_event do |event|
  #   event # => Aws::S3::Types::Stats
  #   end
  #   handler.on_progress_event do |event|
  #   event # => Aws::S3::Types::Progress
  #   end
  #   handler.on_cont_event do |event|
  #   event # => Aws::S3::Types::Cont
  #   end
  #   handler.on_end_event do |event|
  #   event # => Aws::S3::Types::End
  #   end
  #
  #   client.select_object_content( # params input #, event_stream_handler: handler) do |stream|
  #   stream.on_error_event do |event|
  #   # catch unmodeled error event in the stream
  #   raise event
  #   # => Aws::Errors::EventError
  #   # event.event_type => :error
  #   # event.error_code => String
  #   # event.error_message => String
  #   end
  #   end
  #
  #   Besides above usage patterns for process events when they arrive immediately, you can also
  #   iterate through events after response complete.
  #
  #   Events are available at resp.payload # => Enumerator
  #   For parameter input example, please refer to following request syntax
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload select_object_content
  # @param params [Hash] ({})
  # @return [Types::SelectObjectContentOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::SelectObjectContentOutput#payload #payload} => Types::SelectObjectContentEventStream
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/SelectObjectContent AWS API Documentation
  # @yield [event_stream_handler]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#6773
  def select_object_content(params = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # Uploads a part in a multipart upload.
  #
  # **Note:** After you initiate multipart upload and upload one or more
  # parts, you must either complete or abort multipart upload in order to
  # stop getting charged for storage of the uploaded parts. Only after you
  # either complete or abort multipart upload, Amazon S3 frees up the
  # parts storage and stops charging you for the parts storage.
  #
  # @example Response structure
  #
  #   resp.server_side_encryption #=> String, one of "AES256", "aws:kms"
  #   resp.etag #=> String
  #   resp.sse_customer_algorithm #=> String
  #   resp.sse_customer_key_md5 #=> String
  #   resp.ssekms_key_id #=> String
  #   resp.request_charged #=> String, one of "requester"
  # @example Example: To upload a part
  #
  #   # The following example uploads part 1 of a multipart upload. The example specifies a file name for the part data. The
  #   # Upload ID is same that is returned by the initiate multipart upload.
  #
  #   resp = client.upload_part({
  #   body: "fileToUpload",
  #   bucket: "examplebucket",
  #   key: "examplelargeobject",
  #   part_number: 1,
  #   upload_id: "xadcOB_7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   etag: "\"d8c2eafd90c266e19ab9dcacc479f8af\"",
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.upload_part({
  #   body: source_file,
  #   bucket: "BucketName", # required
  #   content_length: 1,
  #   content_md5: "ContentMD5",
  #   key: "ObjectKey", # required
  #   part_number: 1, # required
  #   upload_id: "MultipartUploadId", # required
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload upload_part
  # @param params [Hash] ({})
  # @return [Types::UploadPartOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UploadPartOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::UploadPartOutput#etag #etag} => String
  #   * {Types::UploadPartOutput#sse_customer_algorithm #sse_customer_algorithm} => String
  #   * {Types::UploadPartOutput#sse_customer_key_md5 #sse_customer_key_md5} => String
  #   * {Types::UploadPartOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::UploadPartOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/UploadPart AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#6912
  def upload_part(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Uploads a part by copying data from an existing object as data source.
  #
  # @example Response structure
  #
  #   resp.copy_source_version_id #=> String
  #   resp.copy_part_result.etag #=> String
  #   resp.copy_part_result.last_modified #=> Time
  #   resp.server_side_encryption #=> String, one of "AES256", "aws:kms"
  #   resp.sse_customer_algorithm #=> String
  #   resp.sse_customer_key_md5 #=> String
  #   resp.ssekms_key_id #=> String
  #   resp.request_charged #=> String, one of "requester"
  # @example Example: To upload a part by copying byte range from an existing object as data source
  #
  #   # The following example uploads a part of a multipart upload by copying a specified byte range from an existing object as
  #   # data source.
  #
  #   resp = client.upload_part_copy({
  #   bucket: "examplebucket",
  #   copy_source: "/bucketname/sourceobjectkey",
  #   copy_source_range: "bytes=1-100000",
  #   key: "examplelargeobject",
  #   part_number: 2,
  #   upload_id: "exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   copy_part_result: {
  #   etag: "\"65d16d19e65a7508a51f043180edcc36\"",
  #   last_modified: Time.parse("2016-12-29T21:44:28.000Z"),
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.upload_part_copy({
  #   bucket: "BucketName", # required
  #   copy_source: "CopySource", # required
  #   copy_source_if_match: "CopySourceIfMatch",
  #   copy_source_if_modified_since: Time.now,
  #   copy_source_if_none_match: "CopySourceIfNoneMatch",
  #   copy_source_if_unmodified_since: Time.now,
  #   copy_source_range: "CopySourceRange",
  #   key: "ObjectKey", # required
  #   part_number: 1, # required
  #   upload_id: "MultipartUploadId", # required
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   copy_source_sse_customer_algorithm: "CopySourceSSECustomerAlgorithm",
  #   copy_source_sse_customer_key: "CopySourceSSECustomerKey",
  #   copy_source_sse_customer_key_md5: "CopySourceSSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   })
  # @example Example: To upload a part by copying data from an existing object as data source
  #
  #   # The following example uploads a part of a multipart upload by copying data from an existing object as data source.
  #
  #   resp = client.upload_part_copy({
  #   bucket: "examplebucket",
  #   copy_source: "/bucketname/sourceobjectkey",
  #   key: "examplelargeobject",
  #   part_number: 1,
  #   upload_id: "exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   copy_part_result: {
  #   etag: "\"b0c6f0e7e054ab8fa2536a2677f8734d\"",
  #   last_modified: Time.parse("2016-12-29T21:24:43.000Z"),
  #   },
  #   }
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload upload_part_copy
  # @param params [Hash] ({})
  # @return [Types::UploadPartCopyOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UploadPartCopyOutput#copy_source_version_id #copy_source_version_id} => String
  #   * {Types::UploadPartCopyOutput#copy_part_result #copy_part_result} => Types::CopyPartResult
  #   * {Types::UploadPartCopyOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::UploadPartCopyOutput#sse_customer_algorithm #sse_customer_algorithm} => String
  #   * {Types::UploadPartCopyOutput#sse_customer_key_md5 #sse_customer_key_md5} => String
  #   * {Types::UploadPartCopyOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::UploadPartCopyOutput#request_charged #request_charged} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/UploadPartCopy AWS API Documentation
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#7084
  def upload_part_copy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Polls an API operation until a resource enters a desired state.
  #
  # ## Basic Usage
  #
  # A waiter will call an API operation until:
  #
  # * It is successful
  # * It enters a terminal state
  # * It makes the maximum number of attempts
  #
  # In between attempts, the waiter will sleep.
  #
  #     # polls in a loop, sleeping between attempts
  #     client.wait_until(waiter_name, params)
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. You can pass
  # configuration as the final arguments hash.
  #
  #     # poll for ~25 seconds
  #     client.wait_until(waiter_name, params, {
  #       max_attempts: 5,
  #       delay: 5,
  #     })
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     client.wait_until(waiter_name, params, {
  #
  #       # disable max attempts
  #       max_attempts: nil,
  #
  #       # poll for 1 hour, instead of a number of attempts
  #       before_wait: -> (attempts, response) do
  #         throw :failure if Time.now - started_at > 3600
  #       end
  #     })
  #
  # ## Handling Errors
  #
  # When a waiter is unsuccessful, it will raise an error.
  # All of the failure errors extend from
  # {Aws::Waiters::Errors::WaiterFailed}.
  #
  #     begin
  #       client.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  # ## Valid Waiters
  #
  # The following table lists the valid waiter names, the operations they call,
  # and the default `:delay` and `:max_attempts` values.
  #
  # | waiter_name       | params         | :delay   | :max_attempts |
  # | ----------------- | -------------- | -------- | ------------- |
  # | bucket_exists     | {#head_bucket} | 5        | 20            |
  # | bucket_not_exists | {#head_bucket} | 5        | 20            |
  # | object_exists     | {#head_object} | 5        | 20            |
  # | object_not_exists | {#head_object} | 5        | 20            |
  #
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @param waiter_name [Symbol]
  # @param params [Hash] ({})
  # @raise [Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  # @raise [Errors::TooManyAttemptsError] Raised when the configured
  #   maximum number of attempts have been made, and the waiter is not
  #   yet successful.
  # @raise [Errors::UnexpectedError] Raised when an error is encounted
  #   while polling for a resource that is not expected.
  # @raise [Errors::NoSuchWaiterError] Raised when you request to wait
  #   for an unknown state.
  # @return [Boolean] Returns `true` if the waiter was successful.
  # @yield [w.waiter]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#7197
  def wait_until(waiter_name, params = T.unsafe(nil), options = T.unsafe(nil)); end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#7205
  def waiter_names; end

  private

  # @param waiter_name [Symbol]
  # @param options [Hash] ({})
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#7213
  def waiter(waiter_name, options = T.unsafe(nil)); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#7222
  def waiters; end

  class << self
    # @api private
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#7237
    def errors_module; end

    # @api private
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/client.rb#7234
    def identifier; end
  end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#10
module Aws::S3::ClientApi
  include ::Seahorse::Model
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#2166
Aws::S3::ClientApi::API = T.let(T.unsafe(nil), Seahorse::Model::Api)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#14
Aws::S3::ClientApi::AbortDate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#15
Aws::S3::ClientApi::AbortIncompleteMultipartUpload = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#16
Aws::S3::ClientApi::AbortMultipartUploadOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#17
Aws::S3::ClientApi::AbortMultipartUploadRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#18
Aws::S3::ClientApi::AbortRuleId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#19
Aws::S3::ClientApi::AccelerateConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#20
Aws::S3::ClientApi::AcceptRanges = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#21
Aws::S3::ClientApi::AccessControlPolicy = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#22
Aws::S3::ClientApi::AccessControlTranslation = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#23
Aws::S3::ClientApi::AccountId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#24
Aws::S3::ClientApi::AllowQuotedRecordDelimiter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#25
Aws::S3::ClientApi::AllowedHeader = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#26
Aws::S3::ClientApi::AllowedHeaders = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#27
Aws::S3::ClientApi::AllowedMethod = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#28
Aws::S3::ClientApi::AllowedMethods = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#29
Aws::S3::ClientApi::AllowedOrigin = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#30
Aws::S3::ClientApi::AllowedOrigins = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#31
Aws::S3::ClientApi::AnalyticsAndOperator = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#32
Aws::S3::ClientApi::AnalyticsConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#33
Aws::S3::ClientApi::AnalyticsConfigurationList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#34
Aws::S3::ClientApi::AnalyticsExportDestination = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#35
Aws::S3::ClientApi::AnalyticsFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#36
Aws::S3::ClientApi::AnalyticsId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#37
Aws::S3::ClientApi::AnalyticsS3BucketDestination = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#38
Aws::S3::ClientApi::AnalyticsS3ExportFileFormat = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#39
Aws::S3::ClientApi::Body = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BlobShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#40
Aws::S3::ClientApi::Bucket = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#41
Aws::S3::ClientApi::BucketAccelerateStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#42
Aws::S3::ClientApi::BucketAlreadyExists = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#43
Aws::S3::ClientApi::BucketAlreadyOwnedByYou = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#44
Aws::S3::ClientApi::BucketCannedACL = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#45
Aws::S3::ClientApi::BucketLifecycleConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#46
Aws::S3::ClientApi::BucketLocationConstraint = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#47
Aws::S3::ClientApi::BucketLoggingStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#48
Aws::S3::ClientApi::BucketLogsPermission = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#49
Aws::S3::ClientApi::BucketName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#50
Aws::S3::ClientApi::BucketVersioningStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#51
Aws::S3::ClientApi::Buckets = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#52
Aws::S3::ClientApi::BypassGovernanceRetention = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#53
Aws::S3::ClientApi::BytesProcessed = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#54
Aws::S3::ClientApi::BytesReturned = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#55
Aws::S3::ClientApi::BytesScanned = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#56
Aws::S3::ClientApi::CORSConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#57
Aws::S3::ClientApi::CORSRule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#58
Aws::S3::ClientApi::CORSRules = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#59
Aws::S3::ClientApi::CSVInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#60
Aws::S3::ClientApi::CSVOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#61
Aws::S3::ClientApi::CacheControl = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#62
Aws::S3::ClientApi::CloudFunction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#63
Aws::S3::ClientApi::CloudFunctionConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#64
Aws::S3::ClientApi::CloudFunctionInvocationRole = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#65
Aws::S3::ClientApi::Code = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#66
Aws::S3::ClientApi::Comments = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#67
Aws::S3::ClientApi::CommonPrefix = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#68
Aws::S3::ClientApi::CommonPrefixList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#69
Aws::S3::ClientApi::CompleteMultipartUploadOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#70
Aws::S3::ClientApi::CompleteMultipartUploadRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#71
Aws::S3::ClientApi::CompletedMultipartUpload = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#72
Aws::S3::ClientApi::CompletedPart = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#73
Aws::S3::ClientApi::CompletedPartList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#74
Aws::S3::ClientApi::CompressionType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#75
Aws::S3::ClientApi::Condition = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#76
Aws::S3::ClientApi::ConfirmRemoveSelfBucketAccess = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#77
Aws::S3::ClientApi::ContentDisposition = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#78
Aws::S3::ClientApi::ContentEncoding = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#79
Aws::S3::ClientApi::ContentLanguage = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#80
Aws::S3::ClientApi::ContentLength = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#81
Aws::S3::ClientApi::ContentMD5 = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#82
Aws::S3::ClientApi::ContentRange = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#83
Aws::S3::ClientApi::ContentType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#84
Aws::S3::ClientApi::ContinuationEvent = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#85
Aws::S3::ClientApi::CopyObjectOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#86
Aws::S3::ClientApi::CopyObjectRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#87
Aws::S3::ClientApi::CopyObjectResult = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#88
Aws::S3::ClientApi::CopyPartResult = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#89
Aws::S3::ClientApi::CopySource = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#90
Aws::S3::ClientApi::CopySourceIfMatch = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#91
Aws::S3::ClientApi::CopySourceIfModifiedSince = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#92
Aws::S3::ClientApi::CopySourceIfNoneMatch = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#93
Aws::S3::ClientApi::CopySourceIfUnmodifiedSince = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#94
Aws::S3::ClientApi::CopySourceRange = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#95
Aws::S3::ClientApi::CopySourceSSECustomerAlgorithm = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#96
Aws::S3::ClientApi::CopySourceSSECustomerKey = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#97
Aws::S3::ClientApi::CopySourceSSECustomerKeyMD5 = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#98
Aws::S3::ClientApi::CopySourceVersionId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#99
Aws::S3::ClientApi::CreateBucketConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#100
Aws::S3::ClientApi::CreateBucketOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#101
Aws::S3::ClientApi::CreateBucketRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#102
Aws::S3::ClientApi::CreateMultipartUploadOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#103
Aws::S3::ClientApi::CreateMultipartUploadRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#104
Aws::S3::ClientApi::CreationDate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#105
Aws::S3::ClientApi::Date = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#106
Aws::S3::ClientApi::Days = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#107
Aws::S3::ClientApi::DaysAfterInitiation = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#108
Aws::S3::ClientApi::DefaultRetention = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#109
Aws::S3::ClientApi::Delete = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#110
Aws::S3::ClientApi::DeleteBucketAnalyticsConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#111
Aws::S3::ClientApi::DeleteBucketCorsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#112
Aws::S3::ClientApi::DeleteBucketEncryptionRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#113
Aws::S3::ClientApi::DeleteBucketInventoryConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#114
Aws::S3::ClientApi::DeleteBucketLifecycleRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#115
Aws::S3::ClientApi::DeleteBucketMetricsConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#116
Aws::S3::ClientApi::DeleteBucketPolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#117
Aws::S3::ClientApi::DeleteBucketReplicationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#118
Aws::S3::ClientApi::DeleteBucketRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#119
Aws::S3::ClientApi::DeleteBucketTaggingRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#120
Aws::S3::ClientApi::DeleteBucketWebsiteRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#121
Aws::S3::ClientApi::DeleteMarker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#122
Aws::S3::ClientApi::DeleteMarkerEntry = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#123
Aws::S3::ClientApi::DeleteMarkerReplication = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#124
Aws::S3::ClientApi::DeleteMarkerReplicationStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#125
Aws::S3::ClientApi::DeleteMarkerVersionId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#126
Aws::S3::ClientApi::DeleteMarkers = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#127
Aws::S3::ClientApi::DeleteObjectOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#128
Aws::S3::ClientApi::DeleteObjectRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#129
Aws::S3::ClientApi::DeleteObjectTaggingOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#130
Aws::S3::ClientApi::DeleteObjectTaggingRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#131
Aws::S3::ClientApi::DeleteObjectsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#132
Aws::S3::ClientApi::DeleteObjectsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#133
Aws::S3::ClientApi::DeletePublicAccessBlockRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#134
Aws::S3::ClientApi::DeletedObject = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#135
Aws::S3::ClientApi::DeletedObjects = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#136
Aws::S3::ClientApi::Delimiter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#137
Aws::S3::ClientApi::Description = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#138
Aws::S3::ClientApi::Destination = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#139
Aws::S3::ClientApi::DisplayName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#140
Aws::S3::ClientApi::ETag = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#141
Aws::S3::ClientApi::EmailAddress = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#142
Aws::S3::ClientApi::EnableRequestProgress = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#143
Aws::S3::ClientApi::EncodingType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#144
Aws::S3::ClientApi::Encryption = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#145
Aws::S3::ClientApi::EncryptionConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#146
Aws::S3::ClientApi::EndEvent = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#147
Aws::S3::ClientApi::Error = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#148
Aws::S3::ClientApi::ErrorDocument = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#149
Aws::S3::ClientApi::Errors = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#150
Aws::S3::ClientApi::Event = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#151
Aws::S3::ClientApi::EventList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#152
Aws::S3::ClientApi::Expiration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#153
Aws::S3::ClientApi::ExpirationStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#154
Aws::S3::ClientApi::ExpiredObjectDeleteMarker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#155
Aws::S3::ClientApi::Expires = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#156
Aws::S3::ClientApi::ExpiresString = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#157
Aws::S3::ClientApi::ExposeHeader = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#158
Aws::S3::ClientApi::ExposeHeaders = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#159
Aws::S3::ClientApi::Expression = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#160
Aws::S3::ClientApi::ExpressionType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#161
Aws::S3::ClientApi::FetchOwner = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#162
Aws::S3::ClientApi::FieldDelimiter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#163
Aws::S3::ClientApi::FileHeaderInfo = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#164
Aws::S3::ClientApi::FilterRule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#165
Aws::S3::ClientApi::FilterRuleList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#166
Aws::S3::ClientApi::FilterRuleName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#167
Aws::S3::ClientApi::FilterRuleValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#168
Aws::S3::ClientApi::GetBucketAccelerateConfigurationOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#169
Aws::S3::ClientApi::GetBucketAccelerateConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#170
Aws::S3::ClientApi::GetBucketAclOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#171
Aws::S3::ClientApi::GetBucketAclRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#172
Aws::S3::ClientApi::GetBucketAnalyticsConfigurationOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#173
Aws::S3::ClientApi::GetBucketAnalyticsConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#174
Aws::S3::ClientApi::GetBucketCorsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#175
Aws::S3::ClientApi::GetBucketCorsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#176
Aws::S3::ClientApi::GetBucketEncryptionOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#177
Aws::S3::ClientApi::GetBucketEncryptionRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#178
Aws::S3::ClientApi::GetBucketInventoryConfigurationOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#179
Aws::S3::ClientApi::GetBucketInventoryConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#180
Aws::S3::ClientApi::GetBucketLifecycleConfigurationOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#181
Aws::S3::ClientApi::GetBucketLifecycleConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#182
Aws::S3::ClientApi::GetBucketLifecycleOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#183
Aws::S3::ClientApi::GetBucketLifecycleRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#184
Aws::S3::ClientApi::GetBucketLocationOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#185
Aws::S3::ClientApi::GetBucketLocationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#186
Aws::S3::ClientApi::GetBucketLoggingOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#187
Aws::S3::ClientApi::GetBucketLoggingRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#188
Aws::S3::ClientApi::GetBucketMetricsConfigurationOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#189
Aws::S3::ClientApi::GetBucketMetricsConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#190
Aws::S3::ClientApi::GetBucketNotificationConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#191
Aws::S3::ClientApi::GetBucketPolicyOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#192
Aws::S3::ClientApi::GetBucketPolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#193
Aws::S3::ClientApi::GetBucketPolicyStatusOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#194
Aws::S3::ClientApi::GetBucketPolicyStatusRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#195
Aws::S3::ClientApi::GetBucketReplicationOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#196
Aws::S3::ClientApi::GetBucketReplicationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#197
Aws::S3::ClientApi::GetBucketRequestPaymentOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#198
Aws::S3::ClientApi::GetBucketRequestPaymentRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#199
Aws::S3::ClientApi::GetBucketTaggingOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#200
Aws::S3::ClientApi::GetBucketTaggingRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#201
Aws::S3::ClientApi::GetBucketVersioningOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#202
Aws::S3::ClientApi::GetBucketVersioningRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#203
Aws::S3::ClientApi::GetBucketWebsiteOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#204
Aws::S3::ClientApi::GetBucketWebsiteRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#205
Aws::S3::ClientApi::GetObjectAclOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#206
Aws::S3::ClientApi::GetObjectAclRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#207
Aws::S3::ClientApi::GetObjectLegalHoldOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#208
Aws::S3::ClientApi::GetObjectLegalHoldRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#209
Aws::S3::ClientApi::GetObjectLockConfigurationOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#210
Aws::S3::ClientApi::GetObjectLockConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#211
Aws::S3::ClientApi::GetObjectOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#212
Aws::S3::ClientApi::GetObjectRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#213
Aws::S3::ClientApi::GetObjectRetentionOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#214
Aws::S3::ClientApi::GetObjectRetentionRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#215
Aws::S3::ClientApi::GetObjectTaggingOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#216
Aws::S3::ClientApi::GetObjectTaggingRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#217
Aws::S3::ClientApi::GetObjectTorrentOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#218
Aws::S3::ClientApi::GetObjectTorrentRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#219
Aws::S3::ClientApi::GetPublicAccessBlockOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#220
Aws::S3::ClientApi::GetPublicAccessBlockRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#221
Aws::S3::ClientApi::GlacierJobParameters = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#222
Aws::S3::ClientApi::Grant = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#223
Aws::S3::ClientApi::GrantFullControl = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#224
Aws::S3::ClientApi::GrantRead = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#225
Aws::S3::ClientApi::GrantReadACP = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#226
Aws::S3::ClientApi::GrantWrite = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#227
Aws::S3::ClientApi::GrantWriteACP = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#228
Aws::S3::ClientApi::Grantee = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#229
Aws::S3::ClientApi::Grants = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#230
Aws::S3::ClientApi::HeadBucketRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#231
Aws::S3::ClientApi::HeadObjectOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#232
Aws::S3::ClientApi::HeadObjectRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#233
Aws::S3::ClientApi::HostName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#234
Aws::S3::ClientApi::HttpErrorCodeReturnedEquals = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#235
Aws::S3::ClientApi::HttpRedirectCode = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#236
Aws::S3::ClientApi::ID = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#237
Aws::S3::ClientApi::IfMatch = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#238
Aws::S3::ClientApi::IfModifiedSince = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#239
Aws::S3::ClientApi::IfNoneMatch = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#240
Aws::S3::ClientApi::IfUnmodifiedSince = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#241
Aws::S3::ClientApi::IndexDocument = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#242
Aws::S3::ClientApi::Initiated = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#243
Aws::S3::ClientApi::Initiator = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#244
Aws::S3::ClientApi::InputSerialization = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#245
Aws::S3::ClientApi::InventoryConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#246
Aws::S3::ClientApi::InventoryConfigurationList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#247
Aws::S3::ClientApi::InventoryDestination = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#248
Aws::S3::ClientApi::InventoryEncryption = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#249
Aws::S3::ClientApi::InventoryFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#250
Aws::S3::ClientApi::InventoryFormat = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#251
Aws::S3::ClientApi::InventoryFrequency = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#252
Aws::S3::ClientApi::InventoryId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#253
Aws::S3::ClientApi::InventoryIncludedObjectVersions = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#254
Aws::S3::ClientApi::InventoryOptionalField = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#255
Aws::S3::ClientApi::InventoryOptionalFields = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#256
Aws::S3::ClientApi::InventoryS3BucketDestination = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#257
Aws::S3::ClientApi::InventorySchedule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#258
Aws::S3::ClientApi::IsEnabled = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#259
Aws::S3::ClientApi::IsLatest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#260
Aws::S3::ClientApi::IsPublic = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#261
Aws::S3::ClientApi::IsTruncated = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#262
Aws::S3::ClientApi::JSONInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#263
Aws::S3::ClientApi::JSONOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#264
Aws::S3::ClientApi::JSONType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#265
Aws::S3::ClientApi::KMSContext = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#266
Aws::S3::ClientApi::KeyCount = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#267
Aws::S3::ClientApi::KeyMarker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#268
Aws::S3::ClientApi::KeyPrefixEquals = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#269
Aws::S3::ClientApi::LambdaFunctionArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#270
Aws::S3::ClientApi::LambdaFunctionConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#271
Aws::S3::ClientApi::LambdaFunctionConfigurationList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#272
Aws::S3::ClientApi::LastModified = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#273
Aws::S3::ClientApi::LifecycleConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#274
Aws::S3::ClientApi::LifecycleExpiration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#275
Aws::S3::ClientApi::LifecycleRule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#276
Aws::S3::ClientApi::LifecycleRuleAndOperator = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#277
Aws::S3::ClientApi::LifecycleRuleFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#278
Aws::S3::ClientApi::LifecycleRules = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#279
Aws::S3::ClientApi::ListBucketAnalyticsConfigurationsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#280
Aws::S3::ClientApi::ListBucketAnalyticsConfigurationsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#281
Aws::S3::ClientApi::ListBucketInventoryConfigurationsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#282
Aws::S3::ClientApi::ListBucketInventoryConfigurationsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#283
Aws::S3::ClientApi::ListBucketMetricsConfigurationsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#284
Aws::S3::ClientApi::ListBucketMetricsConfigurationsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#285
Aws::S3::ClientApi::ListBucketsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#286
Aws::S3::ClientApi::ListMultipartUploadsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#287
Aws::S3::ClientApi::ListMultipartUploadsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#288
Aws::S3::ClientApi::ListObjectVersionsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#289
Aws::S3::ClientApi::ListObjectVersionsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#290
Aws::S3::ClientApi::ListObjectsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#291
Aws::S3::ClientApi::ListObjectsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#292
Aws::S3::ClientApi::ListObjectsV2Output = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#293
Aws::S3::ClientApi::ListObjectsV2Request = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#294
Aws::S3::ClientApi::ListPartsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#295
Aws::S3::ClientApi::ListPartsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#296
Aws::S3::ClientApi::Location = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#297
Aws::S3::ClientApi::LocationPrefix = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#298
Aws::S3::ClientApi::LoggingEnabled = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#299
Aws::S3::ClientApi::MFA = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#300
Aws::S3::ClientApi::MFADelete = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#301
Aws::S3::ClientApi::MFADeleteStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#302
Aws::S3::ClientApi::Marker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#303
Aws::S3::ClientApi::MaxAgeSeconds = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#304
Aws::S3::ClientApi::MaxKeys = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#305
Aws::S3::ClientApi::MaxParts = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#306
Aws::S3::ClientApi::MaxUploads = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#307
Aws::S3::ClientApi::Message = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#308
Aws::S3::ClientApi::Metadata = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#309
Aws::S3::ClientApi::MetadataDirective = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#310
Aws::S3::ClientApi::MetadataEntry = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#311
Aws::S3::ClientApi::MetadataKey = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#312
Aws::S3::ClientApi::MetadataValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#313
Aws::S3::ClientApi::MetricsAndOperator = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#314
Aws::S3::ClientApi::MetricsConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#315
Aws::S3::ClientApi::MetricsConfigurationList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#316
Aws::S3::ClientApi::MetricsFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#317
Aws::S3::ClientApi::MetricsId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#318
Aws::S3::ClientApi::MissingMeta = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#319
Aws::S3::ClientApi::MultipartUpload = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#320
Aws::S3::ClientApi::MultipartUploadId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#321
Aws::S3::ClientApi::MultipartUploadList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#322
Aws::S3::ClientApi::NextKeyMarker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#323
Aws::S3::ClientApi::NextMarker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#324
Aws::S3::ClientApi::NextPartNumberMarker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#325
Aws::S3::ClientApi::NextToken = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#326
Aws::S3::ClientApi::NextUploadIdMarker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#327
Aws::S3::ClientApi::NextVersionIdMarker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#328
Aws::S3::ClientApi::NoSuchBucket = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#329
Aws::S3::ClientApi::NoSuchKey = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#330
Aws::S3::ClientApi::NoSuchUpload = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#331
Aws::S3::ClientApi::NoncurrentVersionExpiration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#332
Aws::S3::ClientApi::NoncurrentVersionTransition = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#333
Aws::S3::ClientApi::NoncurrentVersionTransitionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#334
Aws::S3::ClientApi::NotificationConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#335
Aws::S3::ClientApi::NotificationConfigurationDeprecated = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#336
Aws::S3::ClientApi::NotificationConfigurationFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#337
Aws::S3::ClientApi::NotificationId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#338
Aws::S3::ClientApi::Object = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#339
Aws::S3::ClientApi::ObjectAlreadyInActiveTierError = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#340
Aws::S3::ClientApi::ObjectCannedACL = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#341
Aws::S3::ClientApi::ObjectIdentifier = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#342
Aws::S3::ClientApi::ObjectIdentifierList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#343
Aws::S3::ClientApi::ObjectKey = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#344
Aws::S3::ClientApi::ObjectList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#345
Aws::S3::ClientApi::ObjectLockConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#346
Aws::S3::ClientApi::ObjectLockEnabled = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#347
Aws::S3::ClientApi::ObjectLockEnabledForBucket = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#348
Aws::S3::ClientApi::ObjectLockLegalHold = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#349
Aws::S3::ClientApi::ObjectLockLegalHoldStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#350
Aws::S3::ClientApi::ObjectLockMode = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#351
Aws::S3::ClientApi::ObjectLockRetainUntilDate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#352
Aws::S3::ClientApi::ObjectLockRetention = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#353
Aws::S3::ClientApi::ObjectLockRetentionMode = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#354
Aws::S3::ClientApi::ObjectLockRule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#355
Aws::S3::ClientApi::ObjectLockToken = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#356
Aws::S3::ClientApi::ObjectNotInActiveTierError = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#357
Aws::S3::ClientApi::ObjectStorageClass = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#358
Aws::S3::ClientApi::ObjectVersion = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#359
Aws::S3::ClientApi::ObjectVersionId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#360
Aws::S3::ClientApi::ObjectVersionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#361
Aws::S3::ClientApi::ObjectVersionStorageClass = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#362
Aws::S3::ClientApi::OutputLocation = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#363
Aws::S3::ClientApi::OutputSerialization = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#364
Aws::S3::ClientApi::Owner = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#365
Aws::S3::ClientApi::OwnerOverride = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#366
Aws::S3::ClientApi::ParquetInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#367
Aws::S3::ClientApi::Part = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#368
Aws::S3::ClientApi::PartNumber = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#369
Aws::S3::ClientApi::PartNumberMarker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#370
Aws::S3::ClientApi::Parts = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#371
Aws::S3::ClientApi::PartsCount = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#372
Aws::S3::ClientApi::Payer = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#373
Aws::S3::ClientApi::Permission = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#374
Aws::S3::ClientApi::Policy = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#375
Aws::S3::ClientApi::PolicyStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#376
Aws::S3::ClientApi::Prefix = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#377
Aws::S3::ClientApi::Priority = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#378
Aws::S3::ClientApi::Progress = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#379
Aws::S3::ClientApi::ProgressEvent = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#380
Aws::S3::ClientApi::Protocol = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#381
Aws::S3::ClientApi::PublicAccessBlockConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#382
Aws::S3::ClientApi::PutBucketAccelerateConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#383
Aws::S3::ClientApi::PutBucketAclRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#384
Aws::S3::ClientApi::PutBucketAnalyticsConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#385
Aws::S3::ClientApi::PutBucketCorsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#386
Aws::S3::ClientApi::PutBucketEncryptionRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#387
Aws::S3::ClientApi::PutBucketInventoryConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#388
Aws::S3::ClientApi::PutBucketLifecycleConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#389
Aws::S3::ClientApi::PutBucketLifecycleRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#390
Aws::S3::ClientApi::PutBucketLoggingRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#391
Aws::S3::ClientApi::PutBucketMetricsConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#392
Aws::S3::ClientApi::PutBucketNotificationConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#393
Aws::S3::ClientApi::PutBucketNotificationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#394
Aws::S3::ClientApi::PutBucketPolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#395
Aws::S3::ClientApi::PutBucketReplicationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#396
Aws::S3::ClientApi::PutBucketRequestPaymentRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#397
Aws::S3::ClientApi::PutBucketTaggingRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#398
Aws::S3::ClientApi::PutBucketVersioningRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#399
Aws::S3::ClientApi::PutBucketWebsiteRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#400
Aws::S3::ClientApi::PutObjectAclOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#401
Aws::S3::ClientApi::PutObjectAclRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#402
Aws::S3::ClientApi::PutObjectLegalHoldOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#403
Aws::S3::ClientApi::PutObjectLegalHoldRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#404
Aws::S3::ClientApi::PutObjectLockConfigurationOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#405
Aws::S3::ClientApi::PutObjectLockConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#406
Aws::S3::ClientApi::PutObjectOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#407
Aws::S3::ClientApi::PutObjectRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#408
Aws::S3::ClientApi::PutObjectRetentionOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#409
Aws::S3::ClientApi::PutObjectRetentionRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#410
Aws::S3::ClientApi::PutObjectTaggingOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#411
Aws::S3::ClientApi::PutObjectTaggingRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#412
Aws::S3::ClientApi::PutPublicAccessBlockRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#413
Aws::S3::ClientApi::QueueArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#414
Aws::S3::ClientApi::QueueConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#415
Aws::S3::ClientApi::QueueConfigurationDeprecated = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#416
Aws::S3::ClientApi::QueueConfigurationList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#417
Aws::S3::ClientApi::Quiet = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#418
Aws::S3::ClientApi::QuoteCharacter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#419
Aws::S3::ClientApi::QuoteEscapeCharacter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#420
Aws::S3::ClientApi::QuoteFields = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#421
Aws::S3::ClientApi::Range = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#422
Aws::S3::ClientApi::RecordDelimiter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#423
Aws::S3::ClientApi::RecordsEvent = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#424
Aws::S3::ClientApi::Redirect = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#425
Aws::S3::ClientApi::RedirectAllRequestsTo = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#426
Aws::S3::ClientApi::ReplaceKeyPrefixWith = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#427
Aws::S3::ClientApi::ReplaceKeyWith = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#428
Aws::S3::ClientApi::ReplicaKmsKeyID = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#429
Aws::S3::ClientApi::ReplicationConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#430
Aws::S3::ClientApi::ReplicationRule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#431
Aws::S3::ClientApi::ReplicationRuleAndOperator = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#432
Aws::S3::ClientApi::ReplicationRuleFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#433
Aws::S3::ClientApi::ReplicationRuleStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#434
Aws::S3::ClientApi::ReplicationRules = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#435
Aws::S3::ClientApi::ReplicationStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#436
Aws::S3::ClientApi::RequestCharged = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#437
Aws::S3::ClientApi::RequestPayer = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#438
Aws::S3::ClientApi::RequestPaymentConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#439
Aws::S3::ClientApi::RequestProgress = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#440
Aws::S3::ClientApi::ResponseCacheControl = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#441
Aws::S3::ClientApi::ResponseContentDisposition = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#442
Aws::S3::ClientApi::ResponseContentEncoding = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#443
Aws::S3::ClientApi::ResponseContentLanguage = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#444
Aws::S3::ClientApi::ResponseContentType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#445
Aws::S3::ClientApi::ResponseExpires = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#446
Aws::S3::ClientApi::Restore = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#447
Aws::S3::ClientApi::RestoreObjectOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#448
Aws::S3::ClientApi::RestoreObjectRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#449
Aws::S3::ClientApi::RestoreOutputPath = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#450
Aws::S3::ClientApi::RestoreRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#451
Aws::S3::ClientApi::RestoreRequestType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#452
Aws::S3::ClientApi::Role = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#453
Aws::S3::ClientApi::RoutingRule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#454
Aws::S3::ClientApi::RoutingRules = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#455
Aws::S3::ClientApi::Rule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#456
Aws::S3::ClientApi::Rules = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#457
Aws::S3::ClientApi::S3KeyFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#458
Aws::S3::ClientApi::S3Location = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#459
Aws::S3::ClientApi::SSECustomerAlgorithm = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#460
Aws::S3::ClientApi::SSECustomerKey = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#461
Aws::S3::ClientApi::SSECustomerKeyMD5 = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#462
Aws::S3::ClientApi::SSEKMS = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#463
Aws::S3::ClientApi::SSEKMSEncryptionContext = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#464
Aws::S3::ClientApi::SSEKMSKeyId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#465
Aws::S3::ClientApi::SSES3 = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#466
Aws::S3::ClientApi::SelectObjectContentEventStream = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#467
Aws::S3::ClientApi::SelectObjectContentOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#468
Aws::S3::ClientApi::SelectObjectContentRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#469
Aws::S3::ClientApi::SelectParameters = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#470
Aws::S3::ClientApi::ServerSideEncryption = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#471
Aws::S3::ClientApi::ServerSideEncryptionByDefault = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#472
Aws::S3::ClientApi::ServerSideEncryptionConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#473
Aws::S3::ClientApi::ServerSideEncryptionRule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#474
Aws::S3::ClientApi::ServerSideEncryptionRules = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#475
Aws::S3::ClientApi::Setting = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#476
Aws::S3::ClientApi::Size = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#477
Aws::S3::ClientApi::SourceSelectionCriteria = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#478
Aws::S3::ClientApi::SseKmsEncryptedObjects = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#479
Aws::S3::ClientApi::SseKmsEncryptedObjectsStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#480
Aws::S3::ClientApi::StartAfter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#481
Aws::S3::ClientApi::Stats = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#482
Aws::S3::ClientApi::StatsEvent = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#483
Aws::S3::ClientApi::StorageClass = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#484
Aws::S3::ClientApi::StorageClassAnalysis = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#485
Aws::S3::ClientApi::StorageClassAnalysisDataExport = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#486
Aws::S3::ClientApi::StorageClassAnalysisSchemaVersion = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#487
Aws::S3::ClientApi::Suffix = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#488
Aws::S3::ClientApi::Tag = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#489
Aws::S3::ClientApi::TagCount = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#490
Aws::S3::ClientApi::TagSet = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#491
Aws::S3::ClientApi::Tagging = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#492
Aws::S3::ClientApi::TaggingDirective = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#493
Aws::S3::ClientApi::TaggingHeader = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#494
Aws::S3::ClientApi::TargetBucket = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#495
Aws::S3::ClientApi::TargetGrant = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#496
Aws::S3::ClientApi::TargetGrants = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#497
Aws::S3::ClientApi::TargetPrefix = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#498
Aws::S3::ClientApi::Tier = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#499
Aws::S3::ClientApi::Token = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#500
Aws::S3::ClientApi::TopicArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#501
Aws::S3::ClientApi::TopicConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#502
Aws::S3::ClientApi::TopicConfigurationDeprecated = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#503
Aws::S3::ClientApi::TopicConfigurationList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#504
Aws::S3::ClientApi::Transition = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#505
Aws::S3::ClientApi::TransitionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#506
Aws::S3::ClientApi::TransitionStorageClass = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#507
Aws::S3::ClientApi::Type = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#508
Aws::S3::ClientApi::URI = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#509
Aws::S3::ClientApi::UploadIdMarker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#510
Aws::S3::ClientApi::UploadPartCopyOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#511
Aws::S3::ClientApi::UploadPartCopyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#512
Aws::S3::ClientApi::UploadPartOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#513
Aws::S3::ClientApi::UploadPartRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#514
Aws::S3::ClientApi::UserMetadata = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#515
Aws::S3::ClientApi::Value = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#516
Aws::S3::ClientApi::VersionIdMarker = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#517
Aws::S3::ClientApi::VersioningConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#518
Aws::S3::ClientApi::WebsiteConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#519
Aws::S3::ClientApi::WebsiteRedirectLocation = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/client_api.rb#520
Aws::S3::ClientApi::Years = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# Provides an encryption client that encrypts and decrypts data client-side,
# storing the encrypted data in Amazon S3.
#
# This client uses a process called "envelope encryption". Your private
# encryption keys and your data's plain-text are **never** sent to
# Amazon S3. **If you lose you encryption keys, you will not be able to
# decrypt your data.**
#
# ## Envelope Encryption Overview
#
# The goal of envelope encryption is to combine the performance of
# fast symmetric encryption while maintaining the secure key management
# that asymmetric keys provide.
#
# A one-time-use symmetric key (envelope key) is generated client-side.
# This is used to encrypt the data client-side. This key is then
# encrypted by your master key and stored alongside your data in Amazon
# S3.
#
# When accessing your encrypted data with the encryption client,
# the encrypted envelope key is retrieved and decrypted client-side
# with your master key. The envelope key is then used to decrypt the
# data client-side.
#
# One of the benefits of envelope encryption is that if your master key
# is compromised, you have the option of just re-encrypting the stored
# envelope symmetric keys, instead of re-encrypting all of the
# data in your account.
#
# ## Basic Usage
#
# The encryption client requires an {Aws::S3::Client}. If you do not
# provide a `:client`, then a client will be constructed for you.
#
#     require 'openssl'
#     key = OpenSSL::PKey::RSA.new(1024)
#
#     # encryption client
#     s3 = Aws::S3::Encryption::Client.new(encryption_key: key)
#
#     # round-trip an object, encrypted/decrypted locally
#     s3.put_object(bucket:'aws-sdk', key:'secret', body:'handshake')
#     s3.get_object(bucket:'aws-sdk', key:'secret').body.read
#     #=> 'handshake'
#
#     # reading encrypted object without the encryption client
#     # results in the getting the cipher text
#     Aws::S3::Client.new.get_object(bucket:'aws-sdk', key:'secret').body.read
#     #=> "... cipher text ..."
#
# ## Keys
#
# For client-side encryption to work, you must provide one of the following:
#
# * An encryption key
# * A {KeyProvider}
# * A KMS encryption key id
#
# ### An Encryption Key
#
# You can pass a single encryption key. This is used as a master key
# encrypting and decrypting all object keys.
#
#     key = OpenSSL::Cipher.new("AES-256-ECB").random_key # symmetric key
#     key = OpenSSL::PKey::RSA.new(1024) # asymmetric key pair
#
#     s3 = Aws::S3::Encryption::Client.new(encryption_key: key)
#
# ### Key Provider
#
# Alternatively, you can use a {KeyProvider}. A key provider makes
# it easy to work with multiple keys and simplifies key rotation.
#
# ### KMS Encryption Key Id
#
# If you pass the id to an AWS Key Management Service (KMS) key,
# then KMS will be used to generate, encrypt and decrypt object keys.
#
#     # keep track of the kms key id
#     kms = Aws::KMS::Client.new
#     key_id = kms.create_key.key_metadata.key_id
#
#     Aws::S3::Encryption::Client.new(
#       kms_key_id: key_id,
#       kms_client: kms,
#     )
#
# ## Custom Key Providers
#
# A {KeyProvider} is any object that responds to:
#
# * `#encryption_materials`
# * `#key_for(materials_description)`
#
# Here is a trivial implementation of an in-memory key provider.
# This is provided as a demonstration of the key provider interface,
# and should not be used in production:
#
#     class KeyProvider
#
#       def initialize(default_key_name, keys)
#         @keys = keys
#         @encryption_materials = Aws::S3::Encryption::Materials.new(
#           key: @keys[default_key_name],
#           description: JSON.dump(key: default_key_name),
#         )
#       end
#
#       attr_reader :encryption_materials
#
#       def key_for(matdesc)
#         key_name = JSON.load(matdesc)['key']
#         if key = @keys[key_name]
#           key
#         else
#           raise "encryption key not found for: #{matdesc.inspect}"
#         end
#       end
#     end
#
# Given the above key provider, you can create an encryption client that
# chooses the key to use based on the materials description stored with
# the encrypted object. This makes it possible to use multiple keys
# and simplifies key rotation.
#
#     # uses "new-key" for encrypting objects, uses either for decrypting
#     keys = KeyProvider.new('new-key', {
#       "old-key" => Base64.decode64("kM5UVbhE/4rtMZJfsadYEdm2vaKFsmV2f5+URSeUCV4="),
#       "new-key" => Base64.decode64("w1WLio3agRWRTSJK/Ouh8NHoqRQ6fn5WbSXDTHjXMSo="),
#     }),
#
#     # chooses the key based on the materials description stored
#     # with the encrypted object
#     s3 = Aws::S3::Encryption::Client.new(key_provider: keys)
#
# ## Materials Description
#
# A materials description is JSON document string that is stored
# in the metadata (or instruction file) of an encrypted object.
# The {DefaultKeyProvider} uses the empty JSON document `"{}"`.
#
# When building a key provider, you are free to store whatever
# information you need to identify the master key that was used
# to encrypt the object.
#
# ## Envelope Location
#
# By default, the encryption client store the encryption envelope
# with the object, as metadata. You can choose to have the envelope
# stored in a separate "instruction file". An instruction file
# is an object, with the key of the encrypted object, suffixed with
# `".instruction"`.
#
# Specify the `:envelope_location` option as `:instruction_file` to
# use an instruction file for storing the envelope.
#
#     # default behavior
#     s3 = Aws::S3::Encryption::Client.new(
#       key_provider: ...,
#       envelope_location: :metadata,
#     )
#
#     # store envelope in a separate object
#     s3 = Aws::S3::Encryption::Client.new(
#       key_provider: ...,
#       envelope_location: :instruction_file,
#       instruction_file_suffix: '.instruction' # default
#     )
#
# When using an instruction file, multiple requests are made when
# putting and getting the object. **This may cause issues if you are
# issuing concurrent PUT and GET requests to an encrypted object.**
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#177
module Aws::S3::Encryption; end

# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#178
class Aws::S3::Encryption::Client
  extend ::Aws::Deprecations

  # Creates a new encryption client. You must provide one of the following
  # options:
  #
  # * `:encryption_key`
  # * `:kms_key_id`
  # * `:key_provider`
  #
  # You may also pass any other options accepted by `Client#initialize`.
  #
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [Client] a new instance of Client
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#220
  def initialize(options = T.unsafe(nil)); end

  # @return [S3::Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#228
  def client; end

  # @return [Symbol<:metadata, :instruction_file>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#235
  def envelope_location; end

  # Gets an object from Amazon S3, decrypting  data locally.
  # See {S3::Client#get_object} for documentation on accepted
  # request parameters.
  #
  # @note The `:range` request parameter is not yet supported.
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @param params [Hash] a customizable set of options
  # @return [Types::GetObjectOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetObjectOutput#body #body} => IO
  #   * {Types::GetObjectOutput#delete_marker #delete_marker} => Boolean
  #   * {Types::GetObjectOutput#accept_ranges #accept_ranges} => String
  #   * {Types::GetObjectOutput#expiration #expiration} => String
  #   * {Types::GetObjectOutput#restore #restore} => String
  #   * {Types::GetObjectOutput#last_modified #last_modified} => Time
  #   * {Types::GetObjectOutput#content_length #content_length} => Integer
  #   * {Types::GetObjectOutput#etag #etag} => String
  #   * {Types::GetObjectOutput#missing_meta #missing_meta} => Integer
  #   * {Types::GetObjectOutput#version_id #version_id} => String
  #   * {Types::GetObjectOutput#cache_control #cache_control} => String
  #   * {Types::GetObjectOutput#content_disposition #content_disposition} => String
  #   * {Types::GetObjectOutput#content_encoding #content_encoding} => String
  #   * {Types::GetObjectOutput#content_language #content_language} => String
  #   * {Types::GetObjectOutput#content_range #content_range} => String
  #   * {Types::GetObjectOutput#content_type #content_type} => String
  #   * {Types::GetObjectOutput#expires #expires} => Time
  #   * {Types::GetObjectOutput#expires_string #expires_string} => String
  #   * {Types::GetObjectOutput#website_redirect_location #website_redirect_location} => String
  #   * {Types::GetObjectOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::GetObjectOutput#metadata #metadata} => Hash&lt;String,String&gt;
  #   * {Types::GetObjectOutput#sse_customer_algorithm #sse_customer_algorithm} => String
  #   * {Types::GetObjectOutput#sse_customer_key_md5 #sse_customer_key_md5} => String
  #   * {Types::GetObjectOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::GetObjectOutput#storage_class #storage_class} => String
  #   * {Types::GetObjectOutput#request_charged #request_charged} => String
  #   * {Types::GetObjectOutput#replication_status #replication_status} => String
  #   * {Types::GetObjectOutput#parts_count #parts_count} => Integer
  #   * {Types::GetObjectOutput#tag_count #tag_count} => Integer
  #   * {Types::GetObjectOutput#object_lock_mode #object_lock_mode} => String
  #   * {Types::GetObjectOutput#object_lock_retain_until_date #object_lock_retain_until_date} => Time
  #   * {Types::GetObjectOutput#object_lock_legal_hold_status #object_lock_legal_hold_status} => String
  # @see S3::Client#get_object
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#272
  def get_object(params = T.unsafe(nil), &block); end

  # @return [String] When {#envelope_location} is `:instruction_file`,
  #   the envelope is stored in the object with the object key suffixed
  #   by this string.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#240
  def instruction_file_suffix; end

  # @return [KeyProvider, nil] Returns `nil` if you are using
  #   AWS Key Management Service (KMS).
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#232
  def key_provider; end

  # Uploads an object to Amazon S3, encrypting data client-side.
  # See {S3::Client#put_object} for documentation on accepted
  # request parameters.
  #
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @return [Types::PutObjectOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutObjectOutput#expiration #expiration} => String
  #   * {Types::PutObjectOutput#etag #etag} => String
  #   * {Types::PutObjectOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::PutObjectOutput#version_id #version_id} => String
  #   * {Types::PutObjectOutput#sse_customer_algorithm #sse_customer_algorithm} => String
  #   * {Types::PutObjectOutput#sse_customer_key_md5 #sse_customer_key_md5} => String
  #   * {Types::PutObjectOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::PutObjectOutput#ssekms_encryption_context #ssekms_encryption_context} => String
  #   * {Types::PutObjectOutput#request_charged #request_charged} => String
  # @see S3::Client#put_object
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#248
  def put_object(params = T.unsafe(nil)); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#311
  def cipher_provider(options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#335
  def envelope_options(params); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#289
  def extract_client(options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#324
  def extract_key_provider(options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#345
  def extract_location(options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#356
  def extract_suffix(options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/client.rb#302
  def kms_client(options); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#7
class Aws::S3::Encryption::DecryptHandler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#31
  def call(context); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#38
  def attach_http_event_listeners(context); end

  # When the x-amz-meta-x-amz-tag-len header is present, it indicates
  # that the body of this object has a trailing auth tag. The header
  # indicates the length of that tag.
  #
  # This method fetches the tag from the end of the object by
  # making a GET Object w/range request. This auth tag is used
  # to initialize the cipher, and the decrypter truncates the
  # auth tag from the body when writing the final bytes.
  #
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#144
  def authenticated_decrypter(context, cipher); end

  # @api private
  # @return [Boolean]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#172
  def body_contains_auth_tag?(context); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#62
  def decryption_cipher(context); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#88
  def envelope_from_instr_file(context); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#78
  def envelope_from_metadata(context); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#99
  def extract_envelope(hash); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#70
  def get_encryption_envelope(context); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#110
  def v1_envelope(envelope); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#114
  def v2_envelope(envelope); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#25
Aws::S3::Encryption::DecryptHandler::POSSIBLE_ENCRYPTION_FORMATS = T.let(T.unsafe(nil), Array)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#23
Aws::S3::Encryption::DecryptHandler::POSSIBLE_ENVELOPE_KEYS = T.let(T.unsafe(nil), Array)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#9
Aws::S3::Encryption::DecryptHandler::V1_ENVELOPE_KEYS = T.let(T.unsafe(nil), Array)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/decrypt_handler.rb#15
Aws::S3::Encryption::DecryptHandler::V2_ENVELOPE_KEYS = T.let(T.unsafe(nil), Array)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_cipher_provider.rb#7
class Aws::S3::Encryption::DefaultCipherProvider
  # @api private
  # @return [DefaultCipherProvider] a new instance of DefaultCipherProvider
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_cipher_provider.rb#9
  def initialize(options = T.unsafe(nil)); end

  # @api private
  # @return [Cipher] Given an encryption envelope, returns a
  #   decryption cipher.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_cipher_provider.rb#27
  def decryption_cipher(envelope); end

  # @api private
  # @return [Array<Hash,Cipher>] Creates an returns a new encryption
  #   envelope and encryption cipher.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_cipher_provider.rb#15
  def encryption_cipher; end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_cipher_provider.rb#56
  def decode64(str); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_cipher_provider.rb#52
  def encode64(str); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_cipher_provider.rb#44
  def encrypt(data); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_cipher_provider.rb#40
  def envelope_iv(cipher); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_cipher_provider.rb#36
  def envelope_key(cipher); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_cipher_provider.rb#48
  def materials_description; end
end

# The default key provider is constructed with a single key
# that is used for both encryption and decryption, ignoring
# the possible per-object envelope encryption materials description.
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_key_provider.rb#9
class Aws::S3::Encryption::DefaultKeyProvider
  include ::Aws::S3::Encryption::KeyProvider

  # @api private
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [DefaultKeyProvider] a new instance of DefaultKeyProvider
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_key_provider.rb#17
  def initialize(options = T.unsafe(nil)); end

  # @api private
  # @return [Materials]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_key_provider.rb#25
  def encryption_materials; end

  # @api private
  # @param materials_description [String<JSON>]
  # @return Returns the key given in the constructor.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/default_key_provider.rb#31
  def key_for(materials_description); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/encrypt_handler.rb#7
class Aws::S3::Encryption::EncryptHandler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/encrypt_handler.rb#9
  def call(context); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/encrypt_handler.rb#33
  def apply_encryption_cipher(context, cipher); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/encrypt_handler.rb#18
  def apply_encryption_envelope(context, envelope, cipher); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/errors.rb#4
module Aws::S3::Encryption::Errors; end

# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/errors.rb#6
class Aws::S3::Encryption::Errors::DecryptionError < ::RuntimeError; end

# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/errors.rb#8
class Aws::S3::Encryption::Errors::EncryptionError < ::RuntimeError; end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_auth_decrypter.rb#5
class Aws::S3::Encryption::IOAuthDecrypter
  # @api private
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [IOAuthDecrypter] a new instance of IOAuthDecrypter
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_auth_decrypter.rb#17
  def initialize(options = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_auth_decrypter.rb#31
  def finalize; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_auth_decrypter.rb#35
  def io; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_auth_decrypter.rb#23
  def write(chunk); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_auth_decrypter.rb#41
  def truncate_chunk(chunk); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_decrypter.rb#5
class Aws::S3::Encryption::IODecrypter
  # @api private
  # @param cipher [OpenSSL::Cipher]
  # @param io [IO#write] An IO-like object that responds to `#write`.
  # @return [IODecrypter] a new instance of IODecrypter
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_decrypter.rb#9
  def initialize(cipher, io); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_decrypter.rb#22
  def finalize; end

  # @api private
  # @return [#write]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_decrypter.rb#15
  def io; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_decrypter.rb#17
  def write(chunk); end
end

# Provides an IO wrapper encrpyting a stream of data.
# It is possible to use this same object for decrypting. You must
# initialize it with a decryptiion cipher in that case and the
# IO object must contain cipher text instead of plain text.
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_encrypter.rb#13
class Aws::S3::Encryption::IOEncrypter
  # @api private
  # @return [IOEncrypter] a new instance of IOEncrypter
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_encrypter.rb#18
  def initialize(cipher, io); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_encrypter.rb#41
  def close; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_encrypter.rb#28
  def read(bytes = T.unsafe(nil), output_buffer = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_encrypter.rb#36
  def rewind; end

  # @api private
  # @return [Integer]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_encrypter.rb#26
  def size; end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_encrypter.rb#47
  def encrypt_to_stringio(cipher, plain_text); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_encrypter.rb#55
  def encrypt_to_tempfile(cipher, io); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/io_encrypter.rb#16
Aws::S3::Encryption::IOEncrypter::ONE_MEGABYTE = T.let(T.unsafe(nil), Integer)

# This module defines the interface required for a {Client#key_provider}.
# A key provider is any object that:
#
# * Responds to {#encryption_materials} with an {Materials} object.
#
# * Responds to {#key_for}, receiving a JSON document String,
#   returning an encryption key. The returned encryption key
#   must be one of:
#
#   * `OpenSSL::PKey::RSA` - for asymmetric encryption
#   * `String` - 32, 24, or 16 bytes long, for symmetric encryption
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/key_provider.rb#17
module Aws::S3::Encryption::KeyProvider
  # @return [Materials]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/key_provider.rb#20
  def encryption_materials; end

  # @param materials_description [String<JSON>]
  # @return [OpenSSL::PKey::RSA, String] encryption_key
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/key_provider.rb#24
  def key_for(materials_description); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/kms_cipher_provider.rb#7
class Aws::S3::Encryption::KmsCipherProvider
  # @api private
  # @return [KmsCipherProvider] a new instance of KmsCipherProvider
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/kms_cipher_provider.rb#9
  def initialize(options = T.unsafe(nil)); end

  # @api private
  # @return [Cipher] Given an encryption envelope, returns a
  #   decryption cipher.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/kms_cipher_provider.rb#37
  def decryption_cipher(envelope); end

  # @api private
  # @return [Array<Hash,Cipher>] Creates an returns a new encryption
  #   envelope and encryption cipher.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/kms_cipher_provider.rb#16
  def encryption_cipher; end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/kms_cipher_provider.rb#66
  def decode64(str); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/kms_cipher_provider.rb#62
  def encode64(str); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/materials.rb#6
class Aws::S3::Encryption::Materials
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [Materials] a new instance of Materials
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/materials.rb#15
  def initialize(options = T.unsafe(nil)); end

  # @return [String<JSON>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/materials.rb#24
  def description; end

  # @return [OpenSSL::PKey::RSA, String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/materials.rb#21
  def key; end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/materials.rb#47
  def validate_desc(description); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/materials.rb#28
  def validate_key(key); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/utils.rb#7
module Aws::S3::Encryption::Utils
  class << self
    # @api private
    # @param mode [String] "encrypt" or "decrypt"
    # @param block_mode [String] "CBC" or "ECB"
    # @param key [OpenSSL::PKey::RSA, String, nil]
    # @param iv [String, nil] The initialization vector
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/utils.rb#58
    def aes_cipher(mode, block_mode, key, iv); end

    # @api private
    # @param block_mode [String] "CBC" or "ECB"
    # @param key [OpenSSL::PKey::RSA, String, nil]
    # @param iv [String, nil] The initialization vector
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/utils.rb#50
    def aes_decryption_cipher(block_mode, key = T.unsafe(nil), iv = T.unsafe(nil)); end

    # @api private
    # @param block_mode [String] "CBC" or "ECB"
    # @param key [OpenSSL::PKey::RSA, String, nil]
    # @param iv [String, nil] The initialization vector
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/utils.rb#43
    def aes_encryption_cipher(block_mode, key = T.unsafe(nil), iv = T.unsafe(nil)); end

    # @api private
    # @param key [String]
    # @raise ArgumentError
    # @return [Integer]
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/utils.rb#71
    def cipher_size(key); end

    # @api private
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/utils.rb#25
    def decrypt(key, data); end

    # @api private
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/encryption/utils.rb#13
    def encrypt(key, data); end
  end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/encryption/utils.rb#9
Aws::S3::Encryption::Utils::UNSAFE_MSG = T.let(T.unsafe(nil), String)

# source://aws-sdk-s3//lib/aws-sdk-s3/errors.rb#9
module Aws::S3::Errors
  extend ::Aws::Errors::DynamicErrors
end

# source://aws-sdk-s3//lib/aws-sdk-s3/errors.rb#0
class Aws::S3::Errors::ServiceError < ::Aws::Errors::ServiceError; end

# source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#9
module Aws::S3::EventStreams; end

# source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#10
class Aws::S3::EventStreams::SelectObjectContentEventStream
  # @return [SelectObjectContentEventStream] a new instance of SelectObjectContentEventStream
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#12
  def initialize; end

  # @api private
  # @return Aws::EventEmitter
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#56
  def event_emitter; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#28
  def on_cont_event(&block); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#32
  def on_end_event(&block); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#36
  def on_error_event(&block); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#44
  def on_event(&block); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#40
  def on_initial_response_event(&block); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#24
  def on_progress_event(&block); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#16
  def on_records_event(&block); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/event_streams.rb#20
  def on_stats_event(&block); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#9
class Aws::S3::FileDownloader
  # @api private
  # @return [FileDownloader] a new instance of FileDownloader
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#15
  def initialize(options = T.unsafe(nil)); end

  # @api private
  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#20
  def client; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#22
  def download(destination, options = T.unsafe(nil)); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#99
  def batches(chunks, mode); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#91
  def compute_chunk(file_size); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#69
  def compute_mode(file_size, count); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#79
  def construct_chunks(file_size); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#53
  def multipart_download; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#108
  def multithreaded_get_by_parts(parts); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#104
  def multithreaded_get_by_ranges(chunks); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#133
  def single_request; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#112
  def thread_batches(chunks, param); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#127
  def write(resp); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#12
Aws::S3::FileDownloader::MAX_PARTS = T.let(T.unsafe(nil), Integer)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#11
Aws::S3::FileDownloader::MIN_CHUNK_SIZE = T.let(T.unsafe(nil), Integer)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/file_downloader.rb#13
Aws::S3::FileDownloader::THREAD_COUNT = T.let(T.unsafe(nil), Integer)

# A utility class that provides an IO-like interface to a portion of
# a file on disk.
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#7
class Aws::S3::FilePart
  # @api private
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [FilePart] a new instance of FilePart
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#14
  def initialize(options = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#47
  def close; end

  # @api private
  # @return [Integer]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#26
  def first_byte; end

  # @api private
  # @return [Integer]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#29
  def last_byte; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#34
  def read(bytes = T.unsafe(nil), output_buffer = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#39
  def rewind; end

  # @api private
  # @return [Integer]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#32
  def size; end

  # @api private
  # @return [String, Pathname, File, Tempfile]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#23
  def source; end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#53
  def open_file; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#58
  def read_from_file(bytes, output_buffer); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_part.rb#67
  def remaining_bytes; end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/file_uploader.rb#6
class Aws::S3::FileUploader
  # @api private
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [FileUploader] a new instance of FileUploader
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_uploader.rb#13
  def initialize(options = T.unsafe(nil)); end

  # @api private
  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_uploader.rb#20
  def client; end

  # @api private
  # @return [Integer] Files larger than this in bytes are uploaded
  #   using a {MultipartFileUploader}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_uploader.rb#24
  def multipart_threshold; end

  # @api private
  # @option options
  # @option options
  # @param source [String, Pathname, File, Tempfile]
  # @param options [Hash] a customizable set of options
  # @return [void]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_uploader.rb#30
  def upload(source, options = T.unsafe(nil)); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_uploader.rb#46
  def open_file(source); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/file_uploader.rb#40
  def put_object(source, options); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/file_uploader.rb#8
Aws::S3::FileUploader::FIFTEEN_MEGABYTES = T.let(T.unsafe(nil), Integer)

# source://aws-sdk-s3//lib/aws-sdk-s3.rb#66
Aws::S3::GEM_VERSION = T.let(T.unsafe(nil), String)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#11
class Aws::S3::LegacySigner
  # @api private
  # @param credentials [CredentialProvider]
  # @return [LegacySigner] a new instance of LegacySigner
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#35
  def initialize(credentials, params, force_path_style); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#53
  def authorization(request); end

  # CanonicalizedAmzHeaders
  #
  # See the developer guide for more information on how this element
  # is generated.
  #
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#105
  def canonicalized_headers(request); end

  # From the S3 developer guide
  #
  #     CanonicalizedResource =
  #       [ "/" ` Bucket ] `
  #       <HTTP-Request-URI, protocol name up to the querystring> +
  #       [ sub-resource, if present. e.g. "?acl", "?location",
  #       "?logging", or "?torrent"];
  #
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#122
  def canonicalized_resource(endpoint); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#44
  def credentials; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#63
  def digest(secret, string_to_sign); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#67
  def hmac(key, value); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#44
  def params; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#46
  def sign(request); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#57
  def signature(request); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#151
  def signed_querystring_params(endpoint); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#90
  def signing_string_date(request); end

  # From the S3 developer guide:
  #
  #     StringToSign =
  #       HTTP-Verb ` "\n" `
  #       content-md5 ` "\n" `
  #       content-type ` "\n" `
  #       date ` "\n" `
  #       CanonicalizedAmzHeaders + CanonicalizedResource;
  #
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#80
  def string_to_sign(request); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#157
  def uri_escape(s); end

  class << self
    # @api private
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#26
    def sign(context); end
  end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/legacy_signer.rb#13
Aws::S3::LegacySigner::SIGNED_QUERYSTRING_PARAMS = T.let(T.unsafe(nil), Set)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#8
class Aws::S3::MultipartFileUploader
  # @api private
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [MultipartFileUploader] a new instance of MultipartFileUploader
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#27
  def initialize(options = T.unsafe(nil)); end

  # @api private
  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#33
  def client; end

  # @api private
  # @option options
  # @option options
  # @param source [String, Pathname, File, Tempfile]
  # @param options [Hash] a customizable set of options
  # @return [void]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#39
  def upload(source, options = T.unsafe(nil)); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#74
  def abort_upload(upload_id, options, errors); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#55
  def complete_upload(upload_id, parts, options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#148
  def compute_default_part_size(source_size); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#89
  def compute_parts(upload_id, source, options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#111
  def create_opts(options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#51
  def initiate_upload(options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#152
  def part_size(total_size, part_size, offset); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#125
  def upload_in_threads(pending, completed); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#118
  def upload_part_opts(options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#63
  def upload_parts(upload_id, source, options); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#19
Aws::S3::MultipartFileUploader::CREATE_OPTIONS = T.let(T.unsafe(nil), Set)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#12
Aws::S3::MultipartFileUploader::FILE_TOO_SMALL = T.let(T.unsafe(nil), String)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#14
Aws::S3::MultipartFileUploader::MAX_PARTS = T.let(T.unsafe(nil), Integer)

# 5MB
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#10
Aws::S3::MultipartFileUploader::MIN_PART_SIZE = T.let(T.unsafe(nil), Integer)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#161
class Aws::S3::MultipartFileUploader::PartList
  # @api private
  # @return [PartList] a new instance of PartList
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#163
  def initialize(parts = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#176
  def clear!; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#168
  def push(part); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#172
  def shift; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#180
  def to_a; end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#16
Aws::S3::MultipartFileUploader::THREAD_COUNT = T.let(T.unsafe(nil), Integer)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_file_uploader.rb#23
Aws::S3::MultipartFileUploader::UPLOAD_PART_OPTIONS = T.let(T.unsafe(nil), Set)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#9
class Aws::S3::MultipartStreamUploader
  # @api private
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [MultipartStreamUploader] a new instance of MultipartStreamUploader
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#28
  def initialize(options = T.unsafe(nil)); end

  # @api private
  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#36
  def client; end

  # @api private
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [void]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#41
  def upload(options = T.unsafe(nil), &block); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#76
  def abort_upload(upload_id, options, errors); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#53
  def complete_upload(upload_id, parts, options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#91
  def create_opts(options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#49
  def initiate_upload(options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#105
  def read_to_part_body(read_pipe); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#122
  def upload_in_threads(read_pipe, completed, options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#98
  def upload_part_opts(options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#61
  def upload_parts(upload_id, options, &block); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#20
Aws::S3::MultipartStreamUploader::CREATE_OPTIONS = T.let(T.unsafe(nil), Set)

# api private
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#11
Aws::S3::MultipartStreamUploader::PART_SIZE = T.let(T.unsafe(nil), Integer)

# api private
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#17
Aws::S3::MultipartStreamUploader::TEMPFILE_PREIX = T.let(T.unsafe(nil), String)

# api private
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#14
Aws::S3::MultipartStreamUploader::THREAD_COUNT = T.let(T.unsafe(nil), Integer)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_stream_uploader.rb#24
Aws::S3::MultipartStreamUploader::UPLOAD_PART_OPTIONS = T.let(T.unsafe(nil), Set)

# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#9
class Aws::S3::MultipartUpload
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [MultipartUpload] a new instance of MultipartUpload
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#23
  def initialize(*args); end

  # @example Request syntax with placeholder values
  #
  #   multipart_upload.abort({
  #   request_payer: "requester", # accepts requester
  #   })
  # @option options
  # @param options [Hash] ({})
  # @return [Types::AbortMultipartUploadOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#225
  def abort(options = T.unsafe(nil)); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#257
  def basic_complete(options = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#35
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#88
  def client; end

  # @example Request syntax with placeholder values
  #
  #   object = multipart_upload.complete({
  #   multipart_upload: {
  #   parts: [
  #   {
  #   etag: "ETag",
  #   part_number: 1,
  #   },
  #   ],
  #   },
  #   request_payer: "requester", # accepts requester
  #   })
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Object]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/multipart_upload.rb#25
  def complete(options = T.unsafe(nil)); end

  # @raise [NotImplementedError] Raises when {#data_loaded?} is `false`.
  # @return [Types::MultipartUpload] Returns the data for this {MultipartUpload}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#103
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#111
  def data_loaded?; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#335
  def deprecated_identifiers; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#45
  def id; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Date and time at which the multipart upload was initiated.
  #
  # @return [Time]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#63
  def initiated; end

  # Identifies who initiated the multipart upload.
  #
  # @return [Types::Initiator]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#81
  def initiator; end

  # Key of the object for which the multipart upload was initiated.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#57
  def key; end

  # @api private
  # @raise [NotImplementedError]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#94
  def load; end

  # @return [Object]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#274
  def object; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#40
  def object_key; end

  # @return [Types::Owner]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#75
  def owner; end

  # @param part_number [String]
  # @return [MultipartUploadPart]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#284
  def part(part_number); end

  # @example Request syntax with placeholder values
  #
  #   parts = multipart_upload.parts({
  #   request_payer: "requester", # accepts requester
  #   })
  # @option options
  # @param options [Hash] ({})
  # @return [MultipartUploadPart::Collection]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#307
  def parts(options = T.unsafe(nil)); end

  # @api private
  # @raise [NotImplementedError]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#94
  def reload; end

  # The class of storage used to store the object.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#69
  def storage_class; end

  # Upload ID that identifies the multipart upload.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#51
  def upload_id; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#193
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/multipart_upload.rb#34
  def compute_parts; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#346
  def extract_bucket_name(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#368
  def extract_id(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#357
  def extract_object_key(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload.rb#379
class Aws::S3::MultipartUpload::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_error.rb#3
class Aws::S3::MultipartUploadError < ::StandardError
  # @return [MultipartUploadError] a new instance of MultipartUploadError
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_error.rb#5
  def initialize(message, errors); end

  # @return [Array<StandardError>] The list of errors encountered
  #   when uploading or aborting the upload.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_error.rb#12
  def errors; end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#9
class Aws::S3::MultipartUploadPart
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [MultipartUploadPart] a new instance of MultipartUploadPart
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#25
  def initialize(*args); end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#38
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#78
  def client; end

  # @example Request syntax with placeholder values
  #
  #   multipart_upload_part.copy_from({
  #   copy_source: "CopySource", # required
  #   copy_source_if_match: "CopySourceIfMatch",
  #   copy_source_if_modified_since: Time.now,
  #   copy_source_if_none_match: "CopySourceIfNoneMatch",
  #   copy_source_if_unmodified_since: Time.now,
  #   copy_source_range: "CopySourceRange",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   copy_source_sse_customer_algorithm: "CopySourceSSECustomerAlgorithm",
  #   copy_source_sse_customer_key: "CopySourceSSECustomerKey",
  #   copy_source_sse_customer_key_md5: "CopySourceSSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::UploadPartCopyOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#272
  def copy_from(options = T.unsafe(nil)); end

  # @raise [NotImplementedError] Raises when {#data_loaded?} is `false`.
  # @return [Types::Part] Returns the data for this {MultipartUploadPart}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#93
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#101
  def data_loaded?; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#351
  def deprecated_identifiers; end

  # Entity tag returned when the part was uploaded.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#65
  def etag; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Date and time at which the part was uploaded.
  #
  # @return [Time]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#59
  def last_modified; end

  # @api private
  # @raise [NotImplementedError]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#84
  def load; end

  # @return [MultipartUpload]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#340
  def multipart_upload; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#48
  def multipart_upload_id; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#43
  def object_key; end

  # @return [Integer]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#53
  def part_number; end

  # @api private
  # @raise [NotImplementedError]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#84
  def reload; end

  # Size in bytes of the uploaded part data.
  #
  # @return [Integer]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#71
  def size; end

  # @example Request syntax with placeholder values
  #
  #   multipart_upload_part.upload({
  #   body: source_file,
  #   content_length: 1,
  #   content_md5: "ContentMD5",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::UploadPartOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#326
  def upload(options = T.unsafe(nil)); end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#183
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#363
  def extract_bucket_name(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#385
  def extract_multipart_upload_id(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#374
  def extract_object_key(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#396
  def extract_part_number(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/multipart_upload_part.rb#407
class Aws::S3::MultipartUploadPart::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#9
class Aws::S3::Object
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [Object] a new instance of Object
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#21
  def initialize(*args); end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#51
  def accept_ranges; end

  # @return [ObjectAcl]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1061
  def acl; end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1070
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#32
  def bucket_name; end

  # Specifies caching behavior along the request/reply chain.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#108
  def cache_control; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#240
  def client; end

  # Specifies presentational information for the object.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#114
  def content_disposition; end

  # Specifies what content encodings have been applied to the object and
  # thus what decoding mechanisms must be applied to obtain the media-type
  # referenced by the Content-Type header field.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#122
  def content_encoding; end

  # The language the content is in.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#128
  def content_language; end

  # Size of the body in bytes.
  #
  # @return [Integer]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#79
  def content_length; end

  # A standard MIME type describing the format of the object data.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#134
  def content_type; end

  # @example Request syntax with placeholder values
  #
  #   object.copy_from({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   cache_control: "CacheControl",
  #   content_disposition: "ContentDisposition",
  #   content_encoding: "ContentEncoding",
  #   content_language: "ContentLanguage",
  #   content_type: "ContentType",
  #   copy_source: "CopySource", # required
  #   copy_source_if_match: "CopySourceIfMatch",
  #   copy_source_if_modified_since: Time.now,
  #   copy_source_if_none_match: "CopySourceIfNoneMatch",
  #   copy_source_if_unmodified_since: Time.now,
  #   expires: Time.now,
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write_acp: "GrantWriteACP",
  #   metadata: {
  #   "MetadataKey" => "MetadataValue",
  #   },
  #   metadata_directive: "COPY", # accepts COPY, REPLACE
  #   tagging_directive: "COPY", # accepts COPY, REPLACE
  #   server_side_encryption: "AES256", # accepts AES256, aws:kms
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   website_redirect_location: "WebsiteRedirectLocation",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   ssekms_key_id: "SSEKMSKeyId",
  #   ssekms_encryption_context: "SSEKMSEncryptionContext",
  #   copy_source_sse_customer_algorithm: "CopySourceSSECustomerAlgorithm",
  #   copy_source_sse_customer_key: "CopySourceSSECustomerKey",
  #   copy_source_sse_customer_key_md5: "CopySourceSSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   tagging: "TaggingHeader",
  #   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   object_lock_retain_until_date: Time.now,
  #   object_lock_legal_hold_status: "ON", # accepts ON, OFF
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::CopyObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object.rb#61
  def copy_from(source, options = T.unsafe(nil)); end

  # Copies this object to another object. Use `multipart_copy: true`
  # for large objects. This is required for objects that exceed 5GB.
  #
  # @example Basic object copy
  #
  #   bucket = Aws::S3::Bucket.new('source-bucket')
  #   object = bucket.object('source-key')
  #
  #   # target as String
  #   object.copy_to('target-bucket/target-key')
  #
  #   # target as Hash
  #   object.copy_to(bucket: 'target-bucket', key: 'target-key')
  #
  #   # target as Aws::S3::Object
  #   object.copy_to(bucket.object('target-key'))
  # @example Managed copy of large objects
  #
  #   # uses multipart upload APIs to copy object
  #   object.copy_to('src-bucket/src-key', multipart_copy: true)
  # @note If you need to copy to a bucket in a different region, use
  #   {#copy_from}.
  # @param target [S3::Object, String, Hash] Where to copy the object
  #   data to. `target` must be one of the following:
  #
  #   * {Aws::S3::Object}
  #   * Hash - with `:bucket` and `:key`
  #   * String - formatted like `"target-bucket-name/target-key"`
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object.rb#102
  def copy_to(target, options = T.unsafe(nil)); end

  # @return [Types::HeadObjectOutput] Returns the data for this {Object}. Calls
  #   {Client#head_object} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#263
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#271
  def data_loaded?; end

  # @example Request syntax with placeholder values
  #
  #   object.delete({
  #   mfa: "MFA",
  #   version_id: "ObjectVersionId",
  #   request_payer: "requester", # accepts requester
  #   bypass_governance_retention: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::DeleteObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#606
  def delete(options = T.unsafe(nil)); end

  # Specifies whether the object retrieved was (true) or was not (false) a
  # Delete Marker. If false, this response header does not appear in the
  # response.
  #
  # @return [Boolean]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#45
  def delete_marker; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1101
  def deprecated_identifiers; end

  # Downloads a file in S3 to a path on disk.
  #
  #     # small files (< 5MB) are downloaded in a single API call
  #     obj.download_file('/path/to/file')
  #
  # Files larger than 5MB are downloaded using multipart method
  #
  #     # large files are split into parts
  #     # and the parts are downloaded in parallel
  #     obj.download_file('/path/to/very_large_file')
  #
  # @option options
  # @option options
  # @option options
  # @option options
  # @param destination [String] Where to download the file to
  # @param options [Hash] a customizable set of options
  # @return [Boolean] Returns `true` when the file is downloaded
  #   without any errors.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object.rb#342
  def download_file(destination, options = T.unsafe(nil)); end

  # An ETag is an opaque identifier assigned by a web server to a specific
  # version of a resource found at a URL
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#86
  def etag; end

  # @param options [Hash] ({})
  # @return [Boolean] Returns `true` if the Object exists.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#278
  def exists?(options = T.unsafe(nil)); end

  # If the object expiration is configured (see PUT Bucket lifecycle), the
  # response includes this header. It includes the expiry-date and rule-id
  # key value pairs providing object expiration information. The value of
  # the rule-id is URL encoded.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#60
  def expiration; end

  # The date and time at which the object is no longer cacheable.
  #
  # @return [Time]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#140
  def expires; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#145
  def expires_string; end

  # @example Request syntax with placeholder values
  #
  #   object.get({
  #   if_match: "IfMatch",
  #   if_modified_since: Time.now,
  #   if_none_match: "IfNoneMatch",
  #   if_unmodified_since: Time.now,
  #   range: "Range",
  #   response_cache_control: "ResponseCacheControl",
  #   response_content_disposition: "ResponseContentDisposition",
  #   response_content_encoding: "ResponseContentEncoding",
  #   response_content_language: "ResponseContentLanguage",
  #   response_content_type: "ResponseContentType",
  #   response_expires: Time.now,
  #   version_id: "ObjectVersionId",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   part_number: 1,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::GetObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#692
  def get(options = T.unsafe(nil), &block); end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # @example Request syntax with placeholder values
  #
  #   multipartupload = object.initiate_multipart_upload({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   cache_control: "CacheControl",
  #   content_disposition: "ContentDisposition",
  #   content_encoding: "ContentEncoding",
  #   content_language: "ContentLanguage",
  #   content_type: "ContentType",
  #   expires: Time.now,
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write_acp: "GrantWriteACP",
  #   metadata: {
  #   "MetadataKey" => "MetadataValue",
  #   },
  #   server_side_encryption: "AES256", # accepts AES256, aws:kms
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   website_redirect_location: "WebsiteRedirectLocation",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   ssekms_key_id: "SSEKMSKeyId",
  #   ssekms_encryption_context: "SSEKMSEncryptionContext",
  #   request_payer: "requester", # accepts requester
  #   tagging: "TaggingHeader",
  #   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   object_lock_retain_until_date: Time.now,
  #   object_lock_legal_hold_status: "ON", # accepts ON, OFF
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [MultipartUpload]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#810
  def initiate_multipart_upload(options = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#37
  def key; end

  # Last modified date of the object
  #
  # @return [Time]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#73
  def last_modified; end

  # Loads, or reloads {#data} for the current {Object}.
  # Returns `self` making it possible to chain methods.
  #
  #     object.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#250
  def load; end

  # A map of metadata to store with the object in S3.
  #
  # @return [Hash<String,String>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#166
  def metadata; end

  # This is set to the number of metadata entries not returned in
  # x-amz-meta headers. This can happen if you create metadata using an
  # API like SOAP that supports more flexible metadata than the REST API.
  # For example, using SOAP, you can create metadata whose values are not
  # legal HTTP headers.
  #
  # @return [Integer]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#96
  def missing_meta; end

  # Copies and deletes the current object. The object will only be
  # deleted if the copy operation succeeds.
  #
  # @param target [S3::Object, String, Hash] Where to copy the object
  #   data to. `target` must be one of the following:
  #
  #   * {Aws::S3::Object}
  #   * Hash - with `:bucket` and `:key`
  #   * String - formatted like `"target-bucket-name/target-key"`
  # @return [void]
  # @see Object#copy_to
  # @see Object#delete
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object.rb#113
  def move_to(target, options = T.unsafe(nil)); end

  # @param id [String]
  # @return [MultipartUpload]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1079
  def multipart_upload(id); end

  # The Legal Hold status for the specified object.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#233
  def object_lock_legal_hold_status; end

  # The object lock mode currently in place for this object.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#221
  def object_lock_mode; end

  # The date and time when this object's object lock expires.
  #
  # @return [Time]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#227
  def object_lock_retain_until_date; end

  # The count of parts this object has.
  #
  # @return [Integer]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#215
  def parts_count; end

  # Creates a {PresignedPost} that makes it easy to upload a file from
  # a web browser direct to Amazon S3 using an HTML post form with
  # a file field.
  #
  # See the {PresignedPost} documentation for more information.
  #
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @return [PresignedPost]
  # @see PresignedPost
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object.rb#127
  def presigned_post(options = T.unsafe(nil)); end

  # Generates a pre-signed URL for this object.
  #
  # @example Pre-signed GET URL, valid for one hour
  #
  #   obj.presigned_url(:get, expires_in: 3600)
  #   #=> "https://bucket-name.s3.amazonaws.com/object-key?..."
  # @example Pre-signed PUT with a canned ACL
  #
  #   # the object uploaded using this URL will be publicly accessible
  #   obj.presigned_url(:put, acl: 'public-read')
  #   #=> "https://bucket-name.s3.amazonaws.com/object-key?..."
  # @option params
  # @option params
  # @param http_method [Symbol] The HTTP method to generate a presigned URL for. Valid values
  #   are `:get`, `:put`, `:head`, and `:delete`.
  # @param params [Hash] Additional request parameters to use when generating the pre-signed
  #   URL. See the related documentation in {Client} for accepted
  #   params.
  #
  #   | HTTP Method   | Client Method          |
  #   |---------------|------------------------|
  #   | `:get`        | {Client#get_object}    |
  #   | `:put`        | {Client#put_object}    |
  #   | `:head`       | {Client#head_object}   |
  #   | `:delete`     | {Client#delete_object} |
  # @raise [ArgumentError] Raised if `:expires_in` exceeds one week
  #   (604800 seconds).
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object.rb#187
  def presigned_url(http_method, params = T.unsafe(nil)); end

  # Returns the public (un-signed) URL for this object.
  #
  #     s3.bucket('bucket-name').object('obj-key').public_url
  #     #=> "https://bucket-name.s3.amazonaws.com/obj-key"
  #
  # To use virtual hosted bucket url (disables https):
  #
  #     s3.bucket('my.bucket.com').object('key').public_url(virtual_host: true)
  #     #=> "http://my.bucket.com/key"
  #
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object.rb#210
  def public_url(options = T.unsafe(nil)); end

  # @example Request syntax with placeholder values
  #
  #   object.put({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   body: source_file,
  #   cache_control: "CacheControl",
  #   content_disposition: "ContentDisposition",
  #   content_encoding: "ContentEncoding",
  #   content_language: "ContentLanguage",
  #   content_length: 1,
  #   content_md5: "ContentMD5",
  #   content_type: "ContentType",
  #   expires: Time.now,
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write_acp: "GrantWriteACP",
  #   metadata: {
  #   "MetadataKey" => "MetadataValue",
  #   },
  #   server_side_encryption: "AES256", # accepts AES256, aws:kms
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   website_redirect_location: "WebsiteRedirectLocation",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   ssekms_key_id: "SSEKMSKeyId",
  #   ssekms_encryption_context: "SSEKMSEncryptionContext",
  #   request_payer: "requester", # accepts requester
  #   tagging: "TaggingHeader",
  #   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   object_lock_retain_until_date: Time.now,
  #   object_lock_legal_hold_status: "ON", # accepts ON, OFF
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::PutObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#943
  def put(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {Object}.
  # Returns `self` making it possible to chain methods.
  #
  #     object.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#250
  def reload; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#209
  def replication_status; end

  # If present, indicates that the requester was successfully charged for
  # the request.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#203
  def request_charged; end

  # Provides information about object restoration operation and expiration
  # time of the restored object copy.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#67
  def restore; end

  # @example Request syntax with placeholder values
  #
  #   object.restore_object({
  #   version_id: "ObjectVersionId",
  #   restore_request: {
  #   days: 1,
  #   glacier_job_parameters: {
  #   tier: "Standard", # required, accepts Standard, Bulk, Expedited
  #   },
  #   type: "SELECT", # accepts SELECT
  #   tier: "Standard", # accepts Standard, Bulk, Expedited
  #   description: "Description",
  #   select_parameters: {
  #   input_serialization: { # required
  #   csv: {
  #   file_header_info: "USE", # accepts USE, IGNORE, NONE
  #   comments: "Comments",
  #   quote_escape_character: "QuoteEscapeCharacter",
  #   record_delimiter: "RecordDelimiter",
  #   field_delimiter: "FieldDelimiter",
  #   quote_character: "QuoteCharacter",
  #   allow_quoted_record_delimiter: false,
  #   },
  #   compression_type: "NONE", # accepts NONE, GZIP, BZIP2
  #   json: {
  #   type: "DOCUMENT", # accepts DOCUMENT, LINES
  #   },
  #   parquet: {
  #   },
  #   },
  #   expression_type: "SQL", # required, accepts SQL
  #   expression: "Expression", # required
  #   output_serialization: { # required
  #   csv: {
  #   quote_fields: "ALWAYS", # accepts ALWAYS, ASNEEDED
  #   quote_escape_character: "QuoteEscapeCharacter",
  #   record_delimiter: "RecordDelimiter",
  #   field_delimiter: "FieldDelimiter",
  #   quote_character: "QuoteCharacter",
  #   },
  #   json: {
  #   record_delimiter: "RecordDelimiter",
  #   },
  #   },
  #   },
  #   output_location: {
  #   s3: {
  #   bucket_name: "BucketName", # required
  #   prefix: "LocationPrefix", # required
  #   encryption: {
  #   encryption_type: "AES256", # required, accepts AES256, aws:kms
  #   kms_key_id: "SSEKMSKeyId",
  #   kms_context: "KMSContext",
  #   },
  #   canned_acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   access_control_list: [
  #   {
  #   grantee: {
  #   display_name: "DisplayName",
  #   email_address: "EmailAddress",
  #   id: "ID",
  #   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
  #   uri: "URI",
  #   },
  #   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
  #   },
  #   ],
  #   tagging: {
  #   tag_set: [ # required
  #   {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   ],
  #   },
  #   user_metadata: [
  #   {
  #   name: "MetadataKey",
  #   value: "MetadataValue",
  #   },
  #   ],
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   },
  #   },
  #   },
  #   request_payer: "requester", # accepts requester
  #   })
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::RestoreObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1049
  def restore_object(options = T.unsafe(nil)); end

  # The Server-side encryption algorithm used when storing this object in
  # S3 (e.g., AES256, aws:kms).
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#160
  def server_side_encryption; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#79
  def size; end

  # If server-side encryption with a customer-provided encryption key was
  # requested, the response will include this header confirming the
  # encryption algorithm used.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#174
  def sse_customer_algorithm; end

  # If server-side encryption with a customer-provided encryption key was
  # requested, the response will include this header to provide round trip
  # message integrity verification of the customer-provided encryption
  # key.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#183
  def sse_customer_key_md5; end

  # If present, specifies the ID of the AWS Key Management Service (KMS)
  # master encryption key that was used for the object.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#190
  def ssekms_key_id; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#196
  def storage_class; end

  # Uploads a file from disk to the current object in S3.
  #
  #     # small files are uploaded in a single API call
  #     obj.upload_file('/path/to/file')
  #
  # Files larger than `:multipart_threshold` are uploaded using the
  # Amazon S3 multipart upload APIs.
  #
  #     # large files are automatically split into parts
  #     # and the parts are uploaded in parallel
  #     obj.upload_file('/path/to/very_large_file')
  #
  # @option options
  # @param source [String, Pathname, File, Tempfile] A file or path to a file
  #   on the local file system that should be uploaded to this object.
  #   If you pass an open file object, then it is your responsibility
  #   to close the file object once the upload completes.
  # @param options [Hash] a customizable set of options
  # @raise [MultipartUploadError] If an object is being uploaded in
  #   parts, and the upload can not be completed, then the upload is
  #   aborted and this error is raised.  The raised error has a `#errors`
  #   method that returns the failures that caused the upload to be
  #   aborted.
  # @return [Boolean] Returns `true` when the object is uploaded
  #   without any errors.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object.rb#303
  def upload_file(source, options = T.unsafe(nil)); end

  # Uploads a stream in a streaming fashion to the current object in S3.
  #
  #     # Passed chunks automatically split into multipart upload parts
  #     # and the parts are uploaded in parallel. This allows for streaming uploads
  #     # that never touch the disk.
  #
  #  Note that this is known to have issues in JRuby until jruby-9.1.15.0, so avoid using this with older versions of JRuby.
  #
  # @example Streaming chunks of data
  #   obj.upload_stream do |write_stream|
  #   IO.copy_stream(IO.popen('ls'), write_stream)
  #   end
  # @example Streaming chunks of data
  #   obj.upload_stream do |write_stream|
  #   10.times { write_stream << 'foo' }
  #   end
  # @example Streaming chunks of data
  #   obj.upload_stream do |write_stream|
  #   IO.copy_stream(STDIN, write_stream)
  #   end
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [MultipartUploadError] If an object is being uploaded in
  #   parts, and the upload can not be completed, then the upload is
  #   aborted and this error is raised.  The raised error has a `#errors`
  #   method that returns the failures that caused the upload to be
  #   aborted.
  # @return [Boolean] Returns `true` when the object is uploaded
  #   without any errors.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object.rb#261
  def upload_stream(options = T.unsafe(nil), &block); end

  # @param id [String]
  # @return [ObjectVersion]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1090
  def version(id); end

  # Version of the object.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#102
  def version_id; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#405
  def wait_until(options = T.unsafe(nil), &block); end

  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Object]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#295
  def wait_until_exists(options = T.unsafe(nil), &block); end

  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Object]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#314
  def wait_until_not_exists(options = T.unsafe(nil), &block); end

  # If the bucket is configured as a website, redirects requests for this
  # object to another object in the same bucket or to an external URL.
  # Amazon S3 stores the value of this header in the object metadata.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#153
  def website_redirect_location; end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1111
  def extract_bucket_name(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1122
  def extract_key(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1143
  def separate_params_and_options(options); end

  # @yield [waiter.waiter]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1133
  def yield_waiter_and_warn(waiter, &block); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1158
class Aws::S3::Object::Collection < ::Aws::Resources::Collection
  # @example Request syntax with placeholder values
  #
  #   object.batch_delete!({
  #   mfa: "MFA",
  #   request_payer: "requester", # accepts requester
  #   bypass_governance_retention: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @param options [{}]
  # @return [void]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1184
  def batch_delete!(options = T.unsafe(nil)); end

  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def delete(*args, &block); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object.rb#1184
  def deprecated_delete(options = T.unsafe(nil)); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#9
class Aws::S3::ObjectAcl
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [ObjectAcl] a new instance of ObjectAcl
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#21
  def initialize(*args); end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#32
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#63
  def client; end

  # @return [Types::GetObjectAclOutput] Returns the data for this {ObjectAcl}. Calls
  #   {Client#get_object_acl} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#86
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#94
  def data_loaded?; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#276
  def deprecated_identifiers; end

  # A list of grants.
  #
  # @return [Array<Types::Grant>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#49
  def grants; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Loads, or reloads {#data} for the current {ObjectAcl}.
  # Returns `self` making it possible to chain methods.
  #
  #     object_acl.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#73
  def load; end

  # @return [Object]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#266
  def object; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#37
  def object_key; end

  # @return [Types::Owner]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#43
  def owner; end

  # @example Request syntax with placeholder values
  #
  #   object_acl.put({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   access_control_policy: {
  #   grants: [
  #   {
  #   grantee: {
  #   display_name: "DisplayName",
  #   email_address: "EmailAddress",
  #   id: "ID",
  #   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
  #   uri: "URI",
  #   },
  #   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
  #   },
  #   ],
  #   owner: {
  #   display_name: "DisplayName",
  #   id: "ID",
  #   },
  #   },
  #   content_md5: "ContentMD5",
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write: "GrantWrite",
  #   grant_write_acp: "GrantWriteACP",
  #   request_payer: "requester", # accepts requester
  #   version_id: "ObjectVersionId",
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::PutObjectAclOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#254
  def put(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {ObjectAcl}.
  # Returns `self` making it possible to chain methods.
  #
  #     object_acl.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#73
  def reload; end

  # If present, indicates that the requester was successfully charged for
  # the request.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#56
  def request_charged; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#176
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#286
  def extract_bucket_name(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#297
  def extract_object_key(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/object_acl.rb#308
class Aws::S3::ObjectAcl::Collection < ::Aws::Resources::Collection; end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/object_copier.rb#6
class Aws::S3::ObjectCopier
  # @api private
  # @param object [S3::Object]
  # @return [ObjectCopier] a new instance of ObjectCopier
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_copier.rb#9
  def initialize(object, options = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_copier.rb#14
  def copy_from(source, options = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_copier.rb#18
  def copy_to(target, options = T.unsafe(nil)); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_copier.rb#76
  def apply_source_client(source, options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_copier.rb#24
  def copy_object(source, target, options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_copier.rb#37
  def copy_source(source); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_copier.rb#54
  def copy_target(target); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_copier.rb#93
  def escape(str); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_copier.rb#65
  def merge_options(source_or_target, options); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#7
class Aws::S3::ObjectMultipartCopier
  # @api private
  # @option options
  # @option [Integer]
  # @option [Integer]
  # @param options [Hash] a customizable set of options
  # @param [Integer] [Hash] a customizable set of options
  # @return [ObjectMultipartCopier] a new instance of ObjectMultipartCopier
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#21
  def initialize(options = T.unsafe(nil)); end

  # @api private
  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#28
  def client; end

  # @api private
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#31
  def copy(options = T.unsafe(nil)); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#87
  def abort_upload(options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#111
  def byte_range(offset, default_part_size, size); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#81
  def complete_upload(parts, options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#95
  def compute_parts(size, default_part_size, options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#74
  def copy_part(part); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#59
  def copy_part_thread(queue); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#50
  def copy_parts(size, default_part_size, options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#136
  def default_part_size(source_size); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#45
  def initiate_upload(options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#144
  def options_for(operation_name, options); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#119
  def source_size(options); end

  class << self
    # @api private
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#152
    def options_for(shape_name); end
  end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#156
Aws::S3::ObjectMultipartCopier::API_OPTIONS = T.let(T.unsafe(nil), Hash)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#11
Aws::S3::ObjectMultipartCopier::FILE_TOO_SMALL = T.let(T.unsafe(nil), String)

# 5MB
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#9
Aws::S3::ObjectMultipartCopier::FIVE_MB = T.let(T.unsafe(nil), Integer)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#13
Aws::S3::ObjectMultipartCopier::MAX_PARTS = T.let(T.unsafe(nil), Integer)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#162
class Aws::S3::ObjectMultipartCopier::PartQueue
  # @api private
  # @return [PartQueue] a new instance of PartQueue
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#164
  def initialize(parts = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#173
  def clear!; end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_multipart_copier.rb#169
  def shift; end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#9
class Aws::S3::ObjectSummary
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [ObjectSummary] a new instance of ObjectSummary
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#21
  def initialize(*args); end

  # @return [ObjectAcl]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#887
  def acl; end

  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#896
  def bucket; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#32
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#74
  def client; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#55
  def content_length; end

  # @example Request syntax with placeholder values
  #
  #   object_summary.copy_from({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   cache_control: "CacheControl",
  #   content_disposition: "ContentDisposition",
  #   content_encoding: "ContentEncoding",
  #   content_language: "ContentLanguage",
  #   content_type: "ContentType",
  #   copy_source: "CopySource", # required
  #   copy_source_if_match: "CopySourceIfMatch",
  #   copy_source_if_modified_since: Time.now,
  #   copy_source_if_none_match: "CopySourceIfNoneMatch",
  #   copy_source_if_unmodified_since: Time.now,
  #   expires: Time.now,
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write_acp: "GrantWriteACP",
  #   metadata: {
  #   "MetadataKey" => "MetadataValue",
  #   },
  #   metadata_directive: "COPY", # accepts COPY, REPLACE
  #   tagging_directive: "COPY", # accepts COPY, REPLACE
  #   server_side_encryption: "AES256", # accepts AES256, aws:kms
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   website_redirect_location: "WebsiteRedirectLocation",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   ssekms_key_id: "SSEKMSKeyId",
  #   ssekms_encryption_context: "SSEKMSEncryptionContext",
  #   copy_source_sse_customer_algorithm: "CopySourceSSECustomerAlgorithm",
  #   copy_source_sse_customer_key: "CopySourceSSECustomerKey",
  #   copy_source_sse_customer_key_md5: "CopySourceSSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   tagging: "TaggingHeader",
  #   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   object_lock_retain_until_date: Time.now,
  #   object_lock_legal_hold_status: "ON", # accepts ON, OFF
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::CopyObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object_summary.rb#11
  def copy_from(source, options = T.unsafe(nil)); end

  # @param target [S3::Object, String, Hash] Where to copy the object
  #   data to. `target` must be one of the following:
  #
  #   * {Aws::S3::Object}
  #   * Hash - with `:bucket` and `:key`
  #   * String - formatted like `"target-bucket-name/target-key"`
  # @see Object#copy_to
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object_summary.rb#19
  def copy_to(target, options = T.unsafe(nil)); end

  # @raise [NotImplementedError] Raises when {#data_loaded?} is `false`.
  # @return [Types::Object] Returns the data for this {ObjectSummary}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#89
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#97
  def data_loaded?; end

  # @example Request syntax with placeholder values
  #
  #   object_summary.delete({
  #   mfa: "MFA",
  #   version_id: "ObjectVersionId",
  #   request_payer: "requester", # accepts requester
  #   bypass_governance_retention: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::DeleteObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#432
  def delete(options = T.unsafe(nil)); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#936
  def deprecated_identifiers; end

  # @param destination [String] Where to download the file to
  # @param options [Hash] a customizable set of options
  # @return [Boolean] Returns `true` when the file is downloaded
  #   without any errors.
  # @see Object#download_file
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object_summary.rb#74
  def download_file(destination, options = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#49
  def etag; end

  # @param options [Hash] ({})
  # @return [Boolean] Returns `true` if the ObjectSummary exists.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#104
  def exists?(options = T.unsafe(nil)); end

  # @example Request syntax with placeholder values
  #
  #   object_summary.get({
  #   if_match: "IfMatch",
  #   if_modified_since: Time.now,
  #   if_none_match: "IfNoneMatch",
  #   if_unmodified_since: Time.now,
  #   range: "Range",
  #   response_cache_control: "ResponseCacheControl",
  #   response_content_disposition: "ResponseContentDisposition",
  #   response_content_encoding: "ResponseContentEncoding",
  #   response_content_language: "ResponseContentLanguage",
  #   response_content_type: "ResponseContentType",
  #   response_expires: Time.now,
  #   version_id: "ObjectVersionId",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   part_number: 1,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::GetObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#518
  def get(options = T.unsafe(nil), &block); end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # @example Request syntax with placeholder values
  #
  #   multipartupload = object_summary.initiate_multipart_upload({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   cache_control: "CacheControl",
  #   content_disposition: "ContentDisposition",
  #   content_encoding: "ContentEncoding",
  #   content_language: "ContentLanguage",
  #   content_type: "ContentType",
  #   expires: Time.now,
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write_acp: "GrantWriteACP",
  #   metadata: {
  #   "MetadataKey" => "MetadataValue",
  #   },
  #   server_side_encryption: "AES256", # accepts AES256, aws:kms
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   website_redirect_location: "WebsiteRedirectLocation",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   ssekms_key_id: "SSEKMSKeyId",
  #   ssekms_encryption_context: "SSEKMSEncryptionContext",
  #   request_payer: "requester", # accepts requester
  #   tagging: "TaggingHeader",
  #   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   object_lock_retain_until_date: Time.now,
  #   object_lock_legal_hold_status: "ON", # accepts ON, OFF
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [MultipartUpload]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#636
  def initiate_multipart_upload(options = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#37
  def key; end

  # @return [Time]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#43
  def last_modified; end

  # @api private
  # @raise [NotImplementedError]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#80
  def load; end

  # @param target [S3::Object, String, Hash] Where to copy the object
  #   data to. `target` must be one of the following:
  #
  #   * {Aws::S3::Object}
  #   * Hash - with `:bucket` and `:key`
  #   * String - formatted like `"target-bucket-name/target-key"`
  # @return [void]
  # @see Object#move_to
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object_summary.rb#27
  def move_to(target, options = T.unsafe(nil)); end

  # @param id [String]
  # @return [MultipartUpload]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#905
  def multipart_upload(id); end

  # @return [Object]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#915
  def object; end

  # @return [Types::Owner]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#67
  def owner; end

  # @return [PresignedPost]
  # @see Object#presigned_post
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object_summary.rb#35
  def presigned_post(options = T.unsafe(nil)); end

  # @param http_method [Symbol] The HTTP method to generate a presigned URL for. Valid values
  #   are `:get`, `:put`, `:head`, and `:delete`.
  # @param params [Hash] Additional request parameters to use when generating the pre-signed
  #   URL. See the related documentation in {Client} for accepted
  #   params.
  #
  #   | HTTP Method   | Client Method          |
  #   |---------------|------------------------|
  #   | `:get`        | {Client#get_object}    |
  #   | `:put`        | {Client#put_object}    |
  #   | `:head`       | {Client#head_object}   |
  #   | `:delete`     | {Client#delete_object} |
  # @return [String]
  # @see Object#presigned_url
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object_summary.rb#43
  def presigned_url(http_method, params = T.unsafe(nil)); end

  # @param options [Hash] a customizable set of options
  # @return [String]
  # @see Object#public_url
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object_summary.rb#51
  def public_url(options = T.unsafe(nil)); end

  # @example Request syntax with placeholder values
  #
  #   object_summary.put({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   body: source_file,
  #   cache_control: "CacheControl",
  #   content_disposition: "ContentDisposition",
  #   content_encoding: "ContentEncoding",
  #   content_language: "ContentLanguage",
  #   content_length: 1,
  #   content_md5: "ContentMD5",
  #   content_type: "ContentType",
  #   expires: Time.now,
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write_acp: "GrantWriteACP",
  #   metadata: {
  #   "MetadataKey" => "MetadataValue",
  #   },
  #   server_side_encryption: "AES256", # accepts AES256, aws:kms
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   website_redirect_location: "WebsiteRedirectLocation",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   ssekms_key_id: "SSEKMSKeyId",
  #   ssekms_encryption_context: "SSEKMSEncryptionContext",
  #   request_payer: "requester", # accepts requester
  #   tagging: "TaggingHeader",
  #   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
  #   object_lock_retain_until_date: Time.now,
  #   object_lock_legal_hold_status: "ON", # accepts ON, OFF
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::PutObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#769
  def put(options = T.unsafe(nil)); end

  # @api private
  # @raise [NotImplementedError]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#80
  def reload; end

  # @example Request syntax with placeholder values
  #
  #   object_summary.restore_object({
  #   version_id: "ObjectVersionId",
  #   restore_request: {
  #   days: 1,
  #   glacier_job_parameters: {
  #   tier: "Standard", # required, accepts Standard, Bulk, Expedited
  #   },
  #   type: "SELECT", # accepts SELECT
  #   tier: "Standard", # accepts Standard, Bulk, Expedited
  #   description: "Description",
  #   select_parameters: {
  #   input_serialization: { # required
  #   csv: {
  #   file_header_info: "USE", # accepts USE, IGNORE, NONE
  #   comments: "Comments",
  #   quote_escape_character: "QuoteEscapeCharacter",
  #   record_delimiter: "RecordDelimiter",
  #   field_delimiter: "FieldDelimiter",
  #   quote_character: "QuoteCharacter",
  #   allow_quoted_record_delimiter: false,
  #   },
  #   compression_type: "NONE", # accepts NONE, GZIP, BZIP2
  #   json: {
  #   type: "DOCUMENT", # accepts DOCUMENT, LINES
  #   },
  #   parquet: {
  #   },
  #   },
  #   expression_type: "SQL", # required, accepts SQL
  #   expression: "Expression", # required
  #   output_serialization: { # required
  #   csv: {
  #   quote_fields: "ALWAYS", # accepts ALWAYS, ASNEEDED
  #   quote_escape_character: "QuoteEscapeCharacter",
  #   record_delimiter: "RecordDelimiter",
  #   field_delimiter: "FieldDelimiter",
  #   quote_character: "QuoteCharacter",
  #   },
  #   json: {
  #   record_delimiter: "RecordDelimiter",
  #   },
  #   },
  #   },
  #   output_location: {
  #   s3: {
  #   bucket_name: "BucketName", # required
  #   prefix: "LocationPrefix", # required
  #   encryption: {
  #   encryption_type: "AES256", # required, accepts AES256, aws:kms
  #   kms_key_id: "SSEKMSKeyId",
  #   kms_context: "KMSContext",
  #   },
  #   canned_acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
  #   access_control_list: [
  #   {
  #   grantee: {
  #   display_name: "DisplayName",
  #   email_address: "EmailAddress",
  #   id: "ID",
  #   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
  #   uri: "URI",
  #   },
  #   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
  #   },
  #   ],
  #   tagging: {
  #   tag_set: [ # required
  #   {
  #   key: "ObjectKey", # required
  #   value: "Value", # required
  #   },
  #   ],
  #   },
  #   user_metadata: [
  #   {
  #   name: "MetadataKey",
  #   value: "MetadataValue",
  #   },
  #   ],
  #   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
  #   },
  #   },
  #   },
  #   request_payer: "requester", # accepts requester
  #   })
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::RestoreObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#875
  def restore_object(options = T.unsafe(nil)); end

  # @return [Integer]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#55
  def size; end

  # The class of storage used to store the object.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#61
  def storage_class; end

  # @param source [String, Pathname, File, Tempfile] A file or path to a file
  #   on the local file system that should be uploaded to this object.
  #   If you pass an open file object, then it is your responsibility
  #   to close the file object once the upload completes.
  # @param options [Hash] a customizable set of options
  # @return [Boolean] Returns `true` when the object is uploaded
  #   without any errors.
  # @see Object#upload_file
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object_summary.rb#59
  def upload_file(source, options = T.unsafe(nil)); end

  # @return [Boolean] Returns `true` when the object is uploaded
  #   without any errors.
  # @see Object#upload_stream
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/object_summary.rb#66
  def upload_stream(options = T.unsafe(nil), &block); end

  # @param id [String]
  # @return [ObjectVersion]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#925
  def version(id); end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#231
  def wait_until(options = T.unsafe(nil), &block); end

  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [ObjectSummary]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#121
  def wait_until_exists(options = T.unsafe(nil), &block); end

  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [ObjectSummary]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#140
  def wait_until_not_exists(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#946
  def extract_bucket_name(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#957
  def extract_key(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#978
  def separate_params_and_options(options); end

  # @yield [waiter.waiter]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#968
  def yield_waiter_and_warn(waiter, &block); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#993
class Aws::S3::ObjectSummary::Collection < ::Aws::Resources::Collection
  # @example Request syntax with placeholder values
  #
  #   object_summary.batch_delete!({
  #   mfa: "MFA",
  #   request_payer: "requester", # accepts requester
  #   bypass_governance_retention: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @param options [{}]
  # @return [void]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#1019
  def batch_delete!(options = T.unsafe(nil)); end

  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def delete(*args, &block); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_summary.rb#1019
  def deprecated_delete(options = T.unsafe(nil)); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#9
class Aws::S3::ObjectVersion
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [ObjectVersion] a new instance of ObjectVersion
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#23
  def initialize(*args); end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#35
  def bucket_name; end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#101
  def client; end

  # @raise [NotImplementedError] Raises when {#data_loaded?} is `false`.
  # @return [Types::ObjectVersion] Returns the data for this {ObjectVersion}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#116
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#124
  def data_loaded?; end

  # @example Request syntax with placeholder values
  #
  #   object_version.delete({
  #   mfa: "MFA",
  #   request_payer: "requester", # accepts requester
  #   bypass_governance_retention: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::DeleteObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#246
  def delete(options = T.unsafe(nil)); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#419
  def deprecated_identifiers; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#51
  def etag; end

  # @example Request syntax with placeholder values
  #
  #   object_version.get({
  #   if_match: "IfMatch",
  #   if_modified_since: Time.now,
  #   if_none_match: "IfNoneMatch",
  #   if_unmodified_since: Time.now,
  #   range: "Range",
  #   response_cache_control: "ResponseCacheControl",
  #   response_content_disposition: "ResponseContentDisposition",
  #   response_content_encoding: "ResponseContentEncoding",
  #   response_content_language: "ResponseContentLanguage",
  #   response_content_type: "ResponseContentType",
  #   response_expires: Time.now,
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   part_number: 1,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::GetObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#330
  def get(options = T.unsafe(nil), &block); end

  # @example Request syntax with placeholder values
  #
  #   object_version.head({
  #   if_match: "IfMatch",
  #   if_modified_since: Time.now,
  #   if_none_match: "IfNoneMatch",
  #   if_unmodified_since: Time.now,
  #   range: "Range",
  #   sse_customer_algorithm: "SSECustomerAlgorithm",
  #   sse_customer_key: "SSECustomerKey",
  #   sse_customer_key_md5: "SSECustomerKeyMD5",
  #   request_payer: "requester", # accepts requester
  #   part_number: 1,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::HeadObjectOutput]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#396
  def head(options = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#45
  def id; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def identifiers(*args, &block); end

  # Specifies whether the object is (true) or is not (false) the latest
  # version of an object.
  #
  # @return [Boolean]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#82
  def is_latest; end

  # The object key.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#69
  def key; end

  # Date and time the object was last modified.
  #
  # @return [Time]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#88
  def last_modified; end

  # @api private
  # @raise [NotImplementedError]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#107
  def load; end

  # @return [Object]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#409
  def object; end

  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#40
  def object_key; end

  # @return [Types::Owner]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#94
  def owner; end

  # @api private
  # @raise [NotImplementedError]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#107
  def reload; end

  # Size in bytes of the object.
  #
  # @return [Integer]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#57
  def size; end

  # The class of storage used to store the object.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#63
  def storage_class; end

  # Version ID of an object.
  #
  # @return [String]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#75
  def version_id; end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) {|instance| instance.state.name == 'running' }
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is set
  # by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::S3::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource remains unchanged
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is encountered
  #   while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#206
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#430
  def extract_bucket_name(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#452
  def extract_id(args, options); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#441
  def extract_object_key(args, options); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#463
class Aws::S3::ObjectVersion::Collection < ::Aws::Resources::Collection
  # @example Request syntax with placeholder values
  #
  #   object_version.batch_delete!({
  #   mfa: "MFA",
  #   request_payer: "requester", # accepts requester
  #   bypass_governance_retention: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @param options [{}]
  # @return [void]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#489
  def batch_delete!(options = T.unsafe(nil)); end

  # source://aws-sdk-core/3.63.0/lib/aws-sdk-core/deprecations.rb#59
  def delete(*args, &block); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/object_version.rb#489
  def deprecated_delete(options = T.unsafe(nil)); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/accelerate.rb#3
module Aws::S3::Plugins; end

# Provides support for using `Aws::S3::Client` with Amazon S3 Transfer
# Acceleration.
#
# Go here for more information about transfer acceleration:
# [http://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html](http://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html)
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/accelerate.rb#10
class Aws::S3::Plugins::Accelerate < ::Seahorse::Client::Plugin
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/accelerate.rb#21
  def add_handlers(handlers, config); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/accelerate.rb#40
class Aws::S3::Plugins::Accelerate::AccelerateHandler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/accelerate.rb#42
  def call(context); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/accelerate.rb#55
  def use_accelerate_endpoint(context); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/accelerate.rb#67
  def use_combined_accelerate_dualstack_endpoint(context); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/accelerate.rb#79
  def validate_bucket_name!(bucket_name); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/accelerate.rb#30
class Aws::S3::Plugins::Accelerate::OptionHandler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/accelerate.rb#31
  def call(context); end
end

# Amazon S3 requires DNS style addressing for buckets outside of
# the classic region when possible.
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_dns.rb#7
class Aws::S3::Plugins::BucketDns < ::Seahorse::Client::Plugin
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_dns.rb#24
  def add_handlers(handlers, config); end

  class << self
    # @param bucket_name [String]
    # @param ssl [Boolean]
    # @return [Boolean]
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_dns.rb#68
    def dns_compatible?(bucket_name, ssl); end

    private

    # @return [Boolean]
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_dns.rb#78
    def valid_subdomain?(bucket_name); end
  end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_dns.rb#29
class Aws::S3::Plugins::BucketDns::Handler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_dns.rb#31
  def call(context); end

  private

  # @api private
  # @return [Boolean]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_dns.rb#57
  def https?(uri); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_dns.rb#50
  def move_bucket_to_subdomain(bucket_name, endpoint); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_dns.rb#38
  def move_dns_compat_bucket_to_subdomain(context); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_name_restrictions.rb#5
class Aws::S3::Plugins::BucketNameRestrictions < ::Seahorse::Client::Plugin; end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_name_restrictions.rb#6
class Aws::S3::Plugins::BucketNameRestrictions::Handler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/bucket_name_restrictions.rb#8
  def call(context); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/dualstack.rb#5
class Aws::S3::Plugins::Dualstack < ::Seahorse::Client::Plugin
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/dualstack.rb#15
  def add_handlers(handlers, config); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/dualstack.rb#31
class Aws::S3::Plugins::Dualstack::DualstackHandler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/dualstack.rb#32
  def call(context); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/dualstack.rb#38
  def apply_dualstack_endpoint(context); end

  # @api private
  # @return [Boolean]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/dualstack.rb#56
  def use_bucket_dns?(bucket_name, context); end

  # @api private
  # @return [Boolean]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/dualstack.rb#62
  def use_dualstack_endpoint?(context); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/dualstack.rb#21
class Aws::S3::Plugins::Dualstack::OptionHandler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/dualstack.rb#22
  def call(context); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/expect_100_continue.rb#4
class Aws::S3::Plugins::Expect100Continue < ::Seahorse::Client::Plugin
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/expect_100_continue.rb#6
  def add_handlers(handlers, config); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/expect_100_continue.rb#13
class Aws::S3::Plugins::Expect100Continue::Handler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/expect_100_continue.rb#15
  def call(context); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/get_bucket_location_fix.rb#4
class Aws::S3::Plugins::GetBucketLocationFix < ::Seahorse::Client::Plugin; end

# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/get_bucket_location_fix.rb#6
class Aws::S3::Plugins::GetBucketLocationFix::Handler < ::Seahorse::Client::Handler
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/get_bucket_location_fix.rb#8
  def call(context); end
end

# A handful of Amazon S3 operations will respond with a 200 status
# code but will send an error in the response body. This plugin
# injects a handler that will parse 200 response bodies for potential
# errors, allowing them to be retried.
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/http_200_errors.rb#10
class Aws::S3::Plugins::Http200Errors < ::Seahorse::Client::Plugin; end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/http_200_errors.rb#12
class Aws::S3::Plugins::Http200Errors::Handler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/http_200_errors.rb#14
  def call(context); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/http_200_errors.rb#24
  def check_for_error(context); end
end

# When making calls to {S3::Client#create_bucket} outside the
# "classic" region, the bucket location constraint must be specified.
# This plugin auto populates the constraint to the configured region.
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/location_constraint.rb#8
class Aws::S3::Plugins::LocationConstraint < ::Seahorse::Client::Plugin; end

# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/location_constraint.rb#10
class Aws::S3::Plugins::LocationConstraint::Handler < ::Seahorse::Client::Handler
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/location_constraint.rb#12
  def call(context); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/location_constraint.rb#21
  def populate_location_constraint(params, region); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/md5s.rb#7
class Aws::S3::Plugins::Md5s < ::Seahorse::Client::Plugin
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/md5s.rb#69
  def add_handlers(handlers, config); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/md5s.rb#22
class Aws::S3::Plugins::Md5s::Handler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/md5s.rb#26
  def call(context); end

  private

  # @api private
  # @param value [File, Tempfile, IO#read, String]
  # @return [String<MD5>]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/md5s.rb#38
  def md5(value); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/md5s.rb#50
  def update_in_chunks(digest, io); end
end

# one MB
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/md5s.rb#24
Aws::S3::Plugins::Md5s::Handler::CHUNK_SIZE = T.let(T.unsafe(nil), Integer)

# Amazon S3 requires these operations to have an MD5 checksum
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/md5s.rb#10
Aws::S3::Plugins::Md5s::REQUIRED_OPERATIONS = T.let(T.unsafe(nil), Array)

# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/redirects.rb#4
class Aws::S3::Plugins::Redirects < ::Seahorse::Client::Plugin
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/redirects.rb#33
  def add_handlers(handlers, config); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/redirects.rb#15
class Aws::S3::Plugins::Redirects::Handler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/redirects.rb#17
  def call(context); end
end

# Support S3 host id, more information, see:
# http://docs.aws.amazon.com/AmazonS3/latest/dev/troubleshooting.html#sdk-request-ids
#
# This plugin adds :host_id for s3 responses when available
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_host_id.rb#10
class Aws::S3::Plugins::S3HostId < ::Seahorse::Client::Plugin; end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_host_id.rb#12
class Aws::S3::Plugins::S3HostId::Handler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_host_id.rb#14
  def call(context); end
end

# This plugin is an implementation detail and may be modified.
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#8
class Aws::S3::Plugins::S3Signer < ::Seahorse::Client::Plugin
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#23
  def add_handlers(handlers, cfg); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#39
  def add_legacy_handler(handlers); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#33
  def add_v4_handlers(handlers); end

  class << self
    # @api private
    # @option options
    # @option options
    # @param options [Hash] a customizable set of options
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#189
    def build_v4_signer(options = T.unsafe(nil)); end

    # @api private
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#199
    def new_hostname(context, region); end
  end
end

# This handler detects when a request fails because of a mismatched bucket
# region. It follows up by making a request to determine the correct
# region, then finally a version 4 signed request against the correct
# regional endpoint.
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#106
class Aws::S3::Plugins::S3Signer::BucketRegionErrorHandler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#108
  def call(context); end

  private

  # @api private
  # @return [Boolean]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#136
  def fips_region?(resp); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#123
  def get_region_and_retry(context); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#115
  def handle_region_errors(response); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#170
  def log_warning(context, actual_region); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#161
  def region_from_body(body); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#148
  def resign_with_new_region(context, actual_region); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#132
  def update_bucket_cache(context, actual_region); end

  # @api private
  # @return [Boolean]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#140
  def wrong_sigv4_region?(resp); end
end

# This handler will update the http endpoint when the bucket region
# is known/cached.
#
# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#82
class Aws::S3::Plugins::S3Signer::CachedBucketRegionHandler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#84
  def call(context); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#92
  def check_for_cached_region(context, bucket); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#43
class Aws::S3::Plugins::S3Signer::LegacyHandler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#44
  def call(context); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#50
class Aws::S3::Plugins::S3Signer::V4Handler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#52
  def call(context); end

  private

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/s3_signer.rb#62
  def sigv4_signer(context); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/sse_cpk.rb#7
class Aws::S3::Plugins::SseCpk < ::Seahorse::Client::Plugin; end

# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/sse_cpk.rb#18
class Aws::S3::Plugins::SseCpk::Handler < ::Seahorse::Client::Handler
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/sse_cpk.rb#20
  def call(context); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/sse_cpk.rb#57
  def base64(str); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/sse_cpk.rb#27
  def compute_key_md5(context); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/sse_cpk.rb#53
  def md5(str); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/sse_cpk.rb#41
  def require_https(context); end
end

# This plugin auto-populates the `:encoding_type` request parameter
# to all calls made to Amazon S3 that accept it.
#
# This enables Amazon S3 to return object keys that might contain
# invalid XML characters as URL encoded strings.  This plugin also
# automatically decodes these keys so that the key management is
# transparent to the user.
#
# If you specify the `:encoding_type` parameter, then this plugin
# will be disabled, and you will need to decode the keys yourself.
#
# The following operations are managed:
#
# * {S3::Client#list_objects}
# * {S3::Client#list_multipart_uploads}
# * {S3::Client#list_object_versions}
#
# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/url_encoded_keys.rb#25
class Aws::S3::Plugins::UrlEncodedKeys < ::Seahorse::Client::Plugin; end

# source://aws-sdk-s3//lib/aws-sdk-s3/plugins/url_encoded_keys.rb#27
class Aws::S3::Plugins::UrlEncodedKeys::Handler < ::Seahorse::Client::Handler
  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/url_encoded_keys.rb#29
  def call(context); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/url_encoded_keys.rb#74
  def decode(member, struct); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/url_encoded_keys.rb#65
  def decode_list_multipart_uploads_keys(data); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/url_encoded_keys.rb#55
  def decode_list_object_versions_keys(data); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/url_encoded_keys.rb#46
  def decode_list_objects_keys(data); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/plugins/url_encoded_keys.rb#39
  def manage_keys(context); end
end

# ## Basic Usage
#
# To generate a presigned post, you need AWS credentials, the region
# your bucket is in, and the name of your bucket. You can apply constraints
# to the post object as options to {#initialize} or by calling
# methods such as {#key} and {#content_length_range}.
#
# The following two examples are equivalent.
#
# ```ruby
# post = Aws::S3::PresignedPost.new(creds, region, bucket, {
#   key: '/uploaded/object/key',
#   content_length_range: 0..1024,
#   acl: 'public-read',
#   metadata: {
#     'original-filename' => '${filename}'
#   }
# })
# post.fields
# #=> { ... }
#
# post = Aws::S3::PresignedPost.new(creds, region, bucket).
#   key('/uploaded/object/key').
#   content_length_range(0..1024).
#   acl('public-read').
#   metadata('original-filename' => '${filename}').
#   fields
# #=> { ... }
# ```
#
# ## HTML Forms
#
# You can use a {PresignedPost} object to build an HTML form. It is
# recommended to use some helper to build the form tag and input
# tags that properly escapes values.
#
# ### Form Tag
#
# To upload a file to Amazon S3 using a browser, you need to create
# a post form. The {#url} method returns the value you should use
# as the form action.
#
# ```erb
# <form action="<%= @post.url %>" method="post" enctype="multipart/form-data">
#   ...
# </form>
# ```
#
# The follow attributes must be set on the form:
#
# * `action` - This must be the {#url}.
# * `method` - This must be `post`.
# * `enctype` - This must be `multipart/form-data`.
#
# ### Form Fields
#
# The {#fields} method returns a hash of form fields to render inside
# the form. Typically these are rendered as hidden input fields.
#
# ```erb
# <% @post.fields.each do |name, value| %>
#   <input type="hidden" name="<%= name %>" value="<%= value %>"/>
# <% end %>
# ```
#
# Lastly, the form must have a file field with the name `file`.
#
# ```erb
# <input type="file" name="file"/>
# ```
#
# ## Post Policy
#
# When you construct a {PresignedPost}, you must specify every form
# field name that will be posted by the browser. If you omit a form
# field sent by the browser, Amazon S3 will reject the request.
# You can specify accepted form field values three ways:
#
# * Specify exactly what the value must be.
# * Specify what value the field starts with.
# * Specify the field may have any value.
#
# ### Field Equals
#
# You can specify that a form field must be a certain value.
# Simply pass an option like `:content_type` to the constructor,
# or call the associated method.
#
# ```ruby
# post = Aws::S3::PresignedPost.new(creds, region, bucket).
# post.content_type('text/plain')
# ```
#
# If any of the given values are changed by the user in the form, then
# Amazon S3 will reject the POST request.
#
# ### Field Starts With
#
# You can specify prefix values for many of the POST form fields.
# To specify a required prefix, use the `:<fieldname>_starts_with`
# option or call the associated `#<field_name>_starts_with` method.
#
# ```ruby
# post = Aws::S3::PresignedPost.new(creds, region, bucket, {
#   key_starts_with: '/images/',
#   content_type_starts_with: 'image/',
#   # ...
# })
# ```
#
# When using starts with, the form must contain a field where the
# user can specify the value. The {PresignedPost} will not add
# a value for these fields.
#
# ### Any Field Value
#
# To white-list a form field to send any value, you can name that
# field with `:allow_any` or {#allow_any}.
#
# ```ruby
# post = Aws::S3::PresignedPost.new(creds, region, bucket, {
#   key: 'object-key',
#   allow_any: ['Filename'],
#   # ...
# })
# ```
#
# ### Metadata
#
# You can add rules for metadata fields using `:metadata`, {#metadata},
# `:metadata_starts_with` and {#metadata_starts_with}. Unlike other
# form fields, you pass a hash value to these options/methods:
#
# ```ruby
# post = Aws::S3::PresignedPost.new(creds, region, bucket).
#   key('/fixed/key').
#   metadata(foo: 'bar')
#
# post.fields['x-amz-meta-foo']
# #=> 'bar'
# ```
#
# ### The `${filename}` Variable
#
# The string `${filename}` is automatically replaced with the name of the
# file provided by the user and is recognized by all form fields. It is
# not supported with `starts_with` conditions.
#
# If the browser or client provides a full or partial path to the file,
# only the text following the last slash (/) or backslash (\) will be used
# (e.g., "C:\Program Files\directory1\file.txt" will be interpreted
# as "file.txt"). If no file or file name is provided, the variable is
# replaced with an empty string.
#
# In the following example, we use `${filename}` to store the original
# filename in the `x-amz-meta-` hash with the uploaded object.
#
# ```ruby
# post = Aws::S3::PresignedPost.new(creds, region, bucket, {
#   key: '/fixed/key',
#   metadata: {
#     'original-filename': '${filename}'
#   }
# })
# ```
#
# @note Normally you do not need to construct a {PresignedPost} yourself.
#   See {Bucket#presigned_post} and {Object#presigned_post}.
#
# source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#176
class Aws::S3::PresignedPost
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param credentials [Credentials] Security credentials for signing
  #   the post policy.
  # @param bucket_region [String] Region of the target bucket.
  # @param bucket_name [String] Name of the target bucket.
  # @param options [Hash] a customizable set of options
  # @return [PresignedPost] a new instance of PresignedPost
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#211
  def initialize(credentials, bucket_region, bucket_name, options = T.unsafe(nil)); end

  # Specify the cannedl ACL (access control list) for the object.
  # May be one of the following values:
  #
  #   * `private`
  #   * `public-read`
  #   * `public-read-write`
  #   * `authenticated-read`
  #   * `bucket-owner-read`
  #   * `bucket-owner-full-control`
  #
  # @param canned_acl [String]
  # @return [self]
  # @see http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def acl(value); end

  # @param prefix [String]
  # @return [self]
  # @see #acl
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#265
  def acl_starts_with(value); end

  # A list of form fields to white-list with any value.
  #
  # @param field_names [Sting, Array<String>]
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#247
  def allow_any(*field_names); end

  # Specify caching behavior along the request/reply chain.
  #
  # @param value [String]
  # @return [self]
  # @see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def cache_control(value); end

  # @param prefix [String]
  # @return [self]
  # @see #cache_control
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#265
  def cache_control_starts_with(value); end

  # Specifies presentational information for the object.
  #
  # @param value [String]
  # @return [self]
  # @see http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def content_disposition(value); end

  # @param prefix [String]
  # @return [self]
  # @see #content_disposition
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#265
  def content_disposition_starts_with(value); end

  # Specifies what content encodings have been applied to the object
  # and thus what decoding mechanisms must be applied to obtain the
  # media-type referenced by the Content-Type header field.
  #
  # @param value [String]
  # @return [self]
  # @see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def content_encoding(value); end

  # @param prefix [String]
  # @return [self]
  # @see #content_encoding
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#265
  def content_encoding_starts_with(value); end

  # The minimum and maximum allowable size for the uploaded content.
  #
  # @param byte_range [Range<Integer>]
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#390
  def content_length_range(byte_range); end

  # A standard MIME type describing the format of the contents.
  #
  # @param value [String]
  # @return [self]
  # @see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def content_type(value); end

  # @param prefix [String]
  # @return [self]
  # @see #content_type
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#265
  def content_type_starts_with(value); end

  # The date and time at which the object is no longer cacheable.
  #
  # @note This does not affect the expiration of the presigned post
  #   signature.
  # @param time [Time]
  # @return [self]
  # @see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#376
  def expires(time); end

  # @param prefix [String]
  # @return [self]
  # @see #expires
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#383
  def expires_starts_with(prefix); end

  # @return [Hash] A hash of fields to render in an HTML form
  #   as hidden input fields.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#235
  def fields; end

  # The key to use for the uploaded object. Use can use `${filename}`
  # as a variable in the key. This will be replaced with the name
  # of the file as provided by the user.
  #
  # For example, if the key is given as `/user/betty/${filename}` and
  # the file uploaded is named `lolcatz.jpg`, the resultant key will
  # be `/user/betty/lolcatz.jpg`.
  #
  # @param key [String]
  # @return [self]
  # @see http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html)
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#284
  def key(key); end

  # Specify a prefix the uploaded
  #
  # @param prefix [String]
  # @return [self]
  # @see #key
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#293
  def key_starts_with(prefix); end

  # Metadata hash to store with the uploaded object. Hash keys will be
  # prefixed with "x-amz-meta-".
  #
  # @param hash [Hash<String,String>]
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#469
  def metadata(hash); end

  # Specify allowable prefix for each key in the metadata hash.
  #
  # @param hash [Hash<String,String>]
  # @return [self]
  # @see #metadata
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#480
  def metadata_starts_with(hash); end

  # Specifies a server-side encryption algorithm to use when Amazon
  # S3 creates an object. Valid values include:
  #
  # * `aws:kms`
  # * `AES256`
  #
  # @param value [String]
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def server_side_encryption(value); end

  # If {#server_side_encryption} is called with the value of `aws:kms`,
  # this method specifies the ID of the AWS Key Management Service
  # (KMS) master encryption key to use for the object.
  #
  # @param value [String]
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def server_side_encryption_aws_kms_key_id(value); end

  # Specifies the algorithm to use to when encrypting the object.
  # Must be set to `AES256` when using customer-provided encryption
  # keys. Must also call {#server_side_encryption_customer_key}.
  #
  # @param value [String]
  # @return [self]
  # @see #server_side_encryption_customer_key
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def server_side_encryption_customer_algorithm(value); end

  # Specifies the customer-provided encryption key for Amazon S3 to use
  # in encrypting data. This value is used to store the object and then
  # it is discarded; Amazon does not store the encryption key.
  #
  # You must also call {#server_side_encryption_customer_algorithm}.
  #
  # @param value [String]
  # @return [self]
  # @see #server_side_encryption_customer_algorithm
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#532
  def server_side_encryption_customer_key(value); end

  # @param prefix [String]
  # @return [self]
  # @see #server_side_encryption_customer_key
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#541
  def server_side_encryption_customer_key_starts_with(prefix); end

  # Storage class to use for storing the object. Defaults to
  # `STANDARD`. Must be one of:
  #
  # * `STANDARD`
  # * `REDUCED_REDUNDANCY`
  #
  # You cannot specify `GLACIER` as the storage class. To transition
  # objects to the GLACIER storage class you can use lifecycle
  # configuration.
  #
  # @param value [String] Storage class to use for storing the
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def storage_class(value); end

  # The URL to which the client is redirected
  # upon successful upload. If {#success_action_redirect} is not
  # specified, Amazon S3 returns the empty document type specified
  # by {#success_action_status}.
  #
  # If Amazon S3 cannot interpret the URL, it acts as if the field
  # is not present.  If the upload fails, Amazon S3 displays an error
  # and does not redirect the user to a URL.
  #
  # @param value [String]
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def success_action_redirect(value); end

  # @param prefix [String]
  # @return [self]
  # @see #success_action_redirect
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#265
  def success_action_redirect_starts_with(value); end

  # The status code returned to the client upon
  # successful upload if {#success_action_redirect} is not
  # specified.
  #
  # Accepts the values `200`, `201`, or `204` (default).
  #
  # If the value is set to 200 or 204, Amazon S3 returns an empty
  # document with a 200 or 204 status code. If the value is set to 201,
  # Amazon S3 returns an XML document with a 201 status code.
  #
  # If the value is not set or if it is set to an invalid value, Amazon
  # S3 returns an empty document with a 204 status code.
  #
  # @param value [String] The status code returned to the client upon
  # @return [self]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def success_action_status(value); end

  # @return [String] The URL to post a file upload to.  This should be
  #   the form action.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#231
  def url; end

  # If the bucket is configured as a website,
  # redirects requests for this object to another object in the
  # same bucket or to an external URL. Amazon S3 stores this value
  # in the object metadata.
  #
  # The value must be prefixed by, "/", "http://" or "https://".
  # The length of the value is limited to 2K.
  #
  # @param value [String]
  # @return [self]
  # @see http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html
  # @see http://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html
  # @see http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#260
  def website_redirect_location(value); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#641
  def base64(str); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#580
  def bucket_url; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#572
  def check_required_values!; end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#631
  def credential_scope(datetime); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#627
  def hexhmac(key, value); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#623
  def hmac(key, value); end

  # @return [Hash]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#592
  def policy(datetime); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#614
  def signature(datetime, string_to_sign); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#603
  def signature_fields(datetime); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#567
  def starts_with(field_name, value, &block); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#550
  def with(field_name, value); end

  class << self
    # @api private
    #
    # source://aws-sdk-s3//lib/aws-sdk-s3/presigned_post.rb#256
    def define_field(field, *args); end
  end
end

# Allows you to create presigned URLs for S3 operations.
#
# Example Use:
#
#      signer = Aws::S3::Presigner.new
#      url = signer.presigned_url(:get_object, bucket: "bucket", key: "key")
#
# source://aws-sdk-s3//lib/aws-sdk-s3/presigner.rb#11
class Aws::S3::Presigner
  # @option options
  # @param options [Hash] a customizable set of options
  # @return [Presigner] a new instance of Presigner
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigner.rb#21
  def initialize(options = T.unsafe(nil)); end

  # @option params
  # @option params
  # @option params
  # @option params
  # @param method [Symbol] Symbolized method name of the operation you want
  #   to presign.
  # @param params [Hash] a customizable set of options
  # @raise [ArgumentError] Raises an ArgumentError if `:expires_in`
  #   exceeds one week.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigner.rb#47
  def presigned_url(method, params = T.unsafe(nil)); end

  private

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigner.rb#138
  def build_signer(cfg); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigner.rb#70
  def expires_in(params); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigner.rb#62
  def http_scheme(params, virtual_host); end

  # @param req [Seahorse::Client::Request]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/presigner.rb#95
  def sign_but_dont_send(req, expires_in, scheme); end

  # source://aws-sdk-s3//lib/aws-sdk-s3/presigner.rb#82
  def use_bucket_as_hostname(req); end
end

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/presigner.rb#17
Aws::S3::Presigner::FIFTEEN_MINUTES = T.let(T.unsafe(nil), Integer)

# @api private
#
# source://aws-sdk-s3//lib/aws-sdk-s3/presigner.rb#14
Aws::S3::Presigner::ONE_WEEK = T.let(T.unsafe(nil), Integer)

# source://aws-sdk-s3//lib/aws-sdk-s3/resource.rb#9
class Aws::S3::Resource
  # @option options
  # @param options [{}]
  # @return [Resource] a new instance of Resource
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/resource.rb#13
  def initialize(options = T.unsafe(nil)); end

  # @param name [String]
  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/resource.rb#72
  def bucket(name); end

  # @example Request syntax with placeholder values
  #
  #   s3.buckets()
  # @param options [Hash] ({})
  # @return [Bucket::Collection]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/resource.rb#84
  def buckets(options = T.unsafe(nil)); end

  # @return [Client]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/resource.rb#18
  def client; end

  # @example Request syntax with placeholder values
  #
  #   bucket = s3.create_bucket({
  #   acl: "private", # accepts private, public-read, public-read-write, authenticated-read
  #   bucket: "BucketName", # required
  #   create_bucket_configuration: {
  #   location_constraint: "EU", # accepts EU, eu-west-1, us-west-1, us-west-2, ap-south-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1, cn-north-1, eu-central-1
  #   },
  #   grant_full_control: "GrantFullControl",
  #   grant_read: "GrantRead",
  #   grant_read_acp: "GrantReadACP",
  #   grant_write: "GrantWrite",
  #   grant_write_acp: "GrantWriteACP",
  #   object_lock_enabled_for_bucket: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Bucket]
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/resource.rb#60
  def create_bucket(options = T.unsafe(nil)); end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9
module Aws::S3::Types; end

# Specifies the days since the initiation of an incomplete multipart
# upload that Amazon S3 will wait before permanently removing all parts
# of the upload. For more information, see [ Aborting Incomplete
# Multipart Uploads Using a Bucket Lifecycle Policy][1] in the *Amazon
# Simple Storage Service Developer Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config
#
# @note When making an API call, you may pass AbortIncompleteMultipartUpload
#   data as a hash:
#
#   {
#   days_after_initiation: 1,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AbortIncompleteMultipartUpload AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#36
class Aws::S3::Types::AbortIncompleteMultipartUpload < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AbortMultipartUploadOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#48
class Aws::S3::Types::AbortMultipartUploadOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass AbortMultipartUploadRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   upload_id: "MultipartUploadId", # required
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AbortMultipartUploadRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#88
class Aws::S3::Types::AbortMultipartUploadRequest < ::Struct
  include ::Aws::Structure
end

# Configures the transfer acceleration state for an Amazon S3 bucket.
# For more information, see [Amazon S3 Transfer Acceleration][1] in the
# *Amazon Simple Storage Service Developer Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html
#
# @note When making an API call, you may pass AccelerateConfiguration
#   data as a hash:
#
#   {
#   status: "Enabled", # accepts Enabled, Suspended
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AccelerateConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#114
class Aws::S3::Types::AccelerateConfiguration < ::Struct
  include ::Aws::Structure
end

# Contains the elements that set the ACL permissions for an object per
# grantee.
#
# @note When making an API call, you may pass AccessControlPolicy
#   data as a hash:
#
#   {
#   grants: [
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
#   },
#   ],
#   owner: {
#   display_name: "DisplayName",
#   id: "ID",
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AccessControlPolicy AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#155
class Aws::S3::Types::AccessControlPolicy < ::Struct
  include ::Aws::Structure
end

# A container for information about access control for replicas.
#
# @note When making an API call, you may pass AccessControlTranslation
#   data as a hash:
#
#   {
#   owner: "Destination", # required, accepts Destination
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AccessControlTranslation AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#181
class Aws::S3::Types::AccessControlTranslation < ::Struct
  include ::Aws::Structure
end

# A conjunction (logical AND) of predicates, which is used in evaluating
# a metrics filter. The operator must have at least two predicates in
# any combination, and an object must match all of the predicates for
# the filter to apply.
#
# @note When making an API call, you may pass AnalyticsAndOperator
#   data as a hash:
#
#   {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AnalyticsAndOperator AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#216
class Aws::S3::Types::AnalyticsAndOperator < ::Struct
  include ::Aws::Structure
end

# Specifies the configuration and any analyses for the analytics filter
# of an Amazon S3 bucket.
#
# For more information, see [GET Bucket analytics][1] in the *Amazon
# Simple Storage Service API Reference*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETAnalyticsConfig.html
#
# @note When making an API call, you may pass AnalyticsConfiguration
#   data as a hash:
#
#   {
#   id: "AnalyticsId", # required
#   filter: {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   },
#   storage_class_analysis: { # required
#   data_export: {
#   output_schema_version: "V_1", # required, accepts V_1
#   destination: { # required
#   s3_bucket_destination: { # required
#   format: "CSV", # required, accepts CSV
#   bucket_account_id: "AccountId",
#   bucket: "BucketName", # required
#   prefix: "Prefix",
#   },
#   },
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AnalyticsConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#288
class Aws::S3::Types::AnalyticsConfiguration < ::Struct
  include ::Aws::Structure
end

# Where to publish the analytics results.
#
# @note When making an API call, you may pass AnalyticsExportDestination
#   data as a hash:
#
#   {
#   s3_bucket_destination: { # required
#   format: "CSV", # required, accepts CSV
#   bucket_account_id: "AccountId",
#   bucket: "BucketName", # required
#   prefix: "Prefix",
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AnalyticsExportDestination AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#313
class Aws::S3::Types::AnalyticsExportDestination < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass AnalyticsFilter
#   data as a hash:
#
#   {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AnalyticsFilter AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#356
class Aws::S3::Types::AnalyticsFilter < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass AnalyticsS3BucketDestination
#   data as a hash:
#
#   {
#   format: "CSV", # required, accepts CSV
#   bucket_account_id: "AccountId",
#   bucket: "BucketName", # required
#   prefix: "Prefix",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AnalyticsS3BucketDestination AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#395
class Aws::S3::Types::AnalyticsS3BucketDestination < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Bucket AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#411
class Aws::S3::Types::Bucket < ::Struct
  include ::Aws::Structure
end

# Specifies the lifecycle configuration for objects in an Amazon S3
# bucket. For more information, see [Object Lifecycle Management][1] in
# the *Amazon Simple Storage Service Developer Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html
#
# @note When making an API call, you may pass BucketLifecycleConfiguration
#   data as a hash:
#
#   {
#   rules: [ # required
#   {
#   expiration: {
#   date: Time.now,
#   days: 1,
#   expired_object_delete_marker: false,
#   },
#   id: "ID",
#   prefix: "Prefix",
#   filter: {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   },
#   status: "Enabled", # required, accepts Enabled, Disabled
#   transitions: [
#   {
#   date: Time.now,
#   days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   ],
#   noncurrent_version_transitions: [
#   {
#   noncurrent_days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   ],
#   noncurrent_version_expiration: {
#   noncurrent_days: 1,
#   },
#   abort_incomplete_multipart_upload: {
#   days_after_initiation: 1,
#   },
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/BucketLifecycleConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#483
class Aws::S3::Types::BucketLifecycleConfiguration < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass BucketLoggingStatus
#   data as a hash:
#
#   {
#   logging_enabled: {
#   target_bucket: "TargetBucket", # required
#   target_grants: [
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, READ, WRITE
#   },
#   ],
#   target_prefix: "TargetPrefix", # required
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/BucketLoggingStatus AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#515
class Aws::S3::Types::BucketLoggingStatus < ::Struct
  include ::Aws::Structure
end

# Describes the cross-origin access configuration for objects in an
# Amazon S3 bucket. For more information, see [Enabling Cross-Origin
# Resource Sharing][1] in the *Amazon Simple Storage Service Developer
# Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html
#
# @note When making an API call, you may pass CORSConfiguration
#   data as a hash:
#
#   {
#   cors_rules: [ # required
#   {
#   allowed_headers: ["AllowedHeader"],
#   allowed_methods: ["AllowedMethod"], # required
#   allowed_origins: ["AllowedOrigin"], # required
#   expose_headers: ["ExposeHeader"],
#   max_age_seconds: 1,
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CORSConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#550
class Aws::S3::Types::CORSConfiguration < ::Struct
  include ::Aws::Structure
end

# Specifies a cross-origin access rule for an Amazon S3 bucket.
#
# @note When making an API call, you may pass CORSRule
#   data as a hash:
#
#   {
#   allowed_headers: ["AllowedHeader"],
#   allowed_methods: ["AllowedMethod"], # required
#   allowed_origins: ["AllowedOrigin"], # required
#   expose_headers: ["ExposeHeader"],
#   max_age_seconds: 1,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CORSRule AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#602
class Aws::S3::Types::CORSRule < ::Struct
  include ::Aws::Structure
end

# Describes how a CSV-formatted input object is formatted.
#
# @note When making an API call, you may pass CSVInput
#   data as a hash:
#
#   {
#   file_header_info: "USE", # accepts USE, IGNORE, NONE
#   comments: "Comments",
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   allow_quoted_record_delimiter: false,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CSVInput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#663
class Aws::S3::Types::CSVInput < ::Struct
  include ::Aws::Structure
end

# Describes how CSV-formatted results are formatted.
#
# @note When making an API call, you may pass CSVOutput
#   data as a hash:
#
#   {
#   quote_fields: "ALWAYS", # accepts ALWAYS, ASNEEDED
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CSVOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#709
class Aws::S3::Types::CSVOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass CloudFunctionConfiguration
#   data as a hash:
#
#   {
#   id: "NotificationId",
#   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   cloud_function: "CloudFunction",
#   invocation_role: "CloudFunctionInvocationRole",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CloudFunctionConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#750
class Aws::S3::Types::CloudFunctionConfiguration < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CommonPrefix AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#760
class Aws::S3::Types::CommonPrefix < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CompleteMultipartUploadOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#813
class Aws::S3::Types::CompleteMultipartUploadOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass CompleteMultipartUploadRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   multipart_upload: {
#   parts: [
#   {
#   etag: "ETag",
#   part_number: 1,
#   },
#   ],
#   },
#   upload_id: "MultipartUploadId", # required
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CompleteMultipartUploadRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#862
class Aws::S3::Types::CompleteMultipartUploadRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass CompletedMultipartUpload
#   data as a hash:
#
#   {
#   parts: [
#   {
#   etag: "ETag",
#   part_number: 1,
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CompletedMultipartUpload AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#884
class Aws::S3::Types::CompletedMultipartUpload < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass CompletedPart
#   data as a hash:
#
#   {
#   etag: "ETag",
#   part_number: 1,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CompletedPart AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#909
class Aws::S3::Types::CompletedPart < ::Struct
  include ::Aws::Structure
end

# Specifies a condition that must be met for a redirect to apply.
#
# @note When making an API call, you may pass Condition
#   data as a hash:
#
#   {
#   http_error_code_returned_equals: "HttpErrorCodeReturnedEquals",
#   key_prefix_equals: "KeyPrefixEquals",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Condition AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#947
class Aws::S3::Types::Condition < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ContinuationEvent AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#954
class Aws::S3::Types::ContinuationEvent < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CopyObjectOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1020
class Aws::S3::Types::CopyObjectOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass CopyObjectRequest
#   data as a hash:
#
#   {
#   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
#   bucket: "BucketName", # required
#   cache_control: "CacheControl",
#   content_disposition: "ContentDisposition",
#   content_encoding: "ContentEncoding",
#   content_language: "ContentLanguage",
#   content_type: "ContentType",
#   copy_source: "CopySource", # required
#   copy_source_if_match: "CopySourceIfMatch",
#   copy_source_if_modified_since: Time.now,
#   copy_source_if_none_match: "CopySourceIfNoneMatch",
#   copy_source_if_unmodified_since: Time.now,
#   expires: Time.now,
#   grant_full_control: "GrantFullControl",
#   grant_read: "GrantRead",
#   grant_read_acp: "GrantReadACP",
#   grant_write_acp: "GrantWriteACP",
#   key: "ObjectKey", # required
#   metadata: {
#   "MetadataKey" => "MetadataValue",
#   },
#   metadata_directive: "COPY", # accepts COPY, REPLACE
#   tagging_directive: "COPY", # accepts COPY, REPLACE
#   server_side_encryption: "AES256", # accepts AES256, aws:kms
#   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
#   website_redirect_location: "WebsiteRedirectLocation",
#   sse_customer_algorithm: "SSECustomerAlgorithm",
#   sse_customer_key: "SSECustomerKey",
#   sse_customer_key_md5: "SSECustomerKeyMD5",
#   ssekms_key_id: "SSEKMSKeyId",
#   ssekms_encryption_context: "SSEKMSEncryptionContext",
#   copy_source_sse_customer_algorithm: "CopySourceSSECustomerAlgorithm",
#   copy_source_sse_customer_key: "CopySourceSSECustomerKey",
#   copy_source_sse_customer_key_md5: "CopySourceSSECustomerKeyMD5",
#   request_payer: "requester", # accepts requester
#   tagging: "TaggingHeader",
#   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
#   object_lock_retain_until_date: Time.now,
#   object_lock_legal_hold_status: "ON", # accepts ON, OFF
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CopyObjectRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1293
class Aws::S3::Types::CopyObjectRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CopyObjectResult AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1307
class Aws::S3::Types::CopyObjectResult < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CopyPartResult AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1323
class Aws::S3::Types::CopyPartResult < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass CreateBucketConfiguration
#   data as a hash:
#
#   {
#   location_constraint: "EU", # accepts EU, eu-west-1, us-west-1, us-west-2, ap-south-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1, cn-north-1, eu-central-1
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CreateBucketConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1343
class Aws::S3::Types::CreateBucketConfiguration < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CreateBucketOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1353
class Aws::S3::Types::CreateBucketOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass CreateBucketRequest
#   data as a hash:
#
#   {
#   acl: "private", # accepts private, public-read, public-read-write, authenticated-read
#   bucket: "BucketName", # required
#   create_bucket_configuration: {
#   location_constraint: "EU", # accepts EU, eu-west-1, us-west-1, us-west-2, ap-south-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1, cn-north-1, eu-central-1
#   },
#   grant_full_control: "GrantFullControl",
#   grant_read: "GrantRead",
#   grant_read_acp: "GrantReadACP",
#   grant_write: "GrantWrite",
#   grant_write_acp: "GrantWriteACP",
#   object_lock_enabled_for_bucket: false,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CreateBucketRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1422
class Aws::S3::Types::CreateBucketRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CreateMultipartUploadOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1496
class Aws::S3::Types::CreateMultipartUploadOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass CreateMultipartUploadRequest
#   data as a hash:
#
#   {
#   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
#   bucket: "BucketName", # required
#   cache_control: "CacheControl",
#   content_disposition: "ContentDisposition",
#   content_encoding: "ContentEncoding",
#   content_language: "ContentLanguage",
#   content_type: "ContentType",
#   expires: Time.now,
#   grant_full_control: "GrantFullControl",
#   grant_read: "GrantRead",
#   grant_read_acp: "GrantReadACP",
#   grant_write_acp: "GrantWriteACP",
#   key: "ObjectKey", # required
#   metadata: {
#   "MetadataKey" => "MetadataValue",
#   },
#   server_side_encryption: "AES256", # accepts AES256, aws:kms
#   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
#   website_redirect_location: "WebsiteRedirectLocation",
#   sse_customer_algorithm: "SSECustomerAlgorithm",
#   sse_customer_key: "SSECustomerKey",
#   sse_customer_key_md5: "SSECustomerKeyMD5",
#   ssekms_key_id: "SSEKMSKeyId",
#   ssekms_encryption_context: "SSEKMSEncryptionContext",
#   request_payer: "requester", # accepts requester
#   tagging: "TaggingHeader",
#   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
#   object_lock_retain_until_date: Time.now,
#   object_lock_legal_hold_status: "ON", # accepts ON, OFF
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CreateMultipartUploadRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1697
class Aws::S3::Types::CreateMultipartUploadRequest < ::Struct
  include ::Aws::Structure
end

# The container element for specifying the default object lock retention
# settings for new objects placed in the specified bucket.
#
# @note When making an API call, you may pass DefaultRetention
#   data as a hash:
#
#   {
#   mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
#   days: 1,
#   years: 1,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DefaultRetention AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1733
class Aws::S3::Types::DefaultRetention < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass Delete
#   data as a hash:
#
#   {
#   objects: [ # required
#   {
#   key: "ObjectKey", # required
#   version_id: "ObjectVersionId",
#   },
#   ],
#   quiet: false,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Delete AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1762
class Aws::S3::Types::Delete < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteBucketAnalyticsConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   id: "AnalyticsId", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketAnalyticsConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1787
class Aws::S3::Types::DeleteBucketAnalyticsConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteBucketCorsRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketCorsRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1804
class Aws::S3::Types::DeleteBucketCorsRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteBucketEncryptionRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketEncryptionRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1823
class Aws::S3::Types::DeleteBucketEncryptionRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteBucketInventoryConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   id: "InventoryId", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketInventoryConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1848
class Aws::S3::Types::DeleteBucketInventoryConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteBucketLifecycleRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketLifecycleRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1865
class Aws::S3::Types::DeleteBucketLifecycleRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteBucketMetricsConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   id: "MetricsId", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketMetricsConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1890
class Aws::S3::Types::DeleteBucketMetricsConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteBucketPolicyRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketPolicyRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1907
class Aws::S3::Types::DeleteBucketPolicyRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteBucketReplicationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketReplicationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1930
class Aws::S3::Types::DeleteBucketReplicationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteBucketRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1947
class Aws::S3::Types::DeleteBucketRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteBucketTaggingRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketTaggingRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1964
class Aws::S3::Types::DeleteBucketTaggingRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteBucketWebsiteRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketWebsiteRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#1981
class Aws::S3::Types::DeleteBucketWebsiteRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteMarkerEntry AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2012
class Aws::S3::Types::DeleteMarkerEntry < ::Struct
  include ::Aws::Structure
end

# Specifies whether Amazon S3 should replicate delete makers.
#
# @note When making an API call, you may pass DeleteMarkerReplication
#   data as a hash:
#
#   {
#   status: "Enabled", # accepts Enabled, Disabled
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteMarkerReplication AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2037
class Aws::S3::Types::DeleteMarkerReplication < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjectOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2061
class Aws::S3::Types::DeleteObjectOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteObjectRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   mfa: "MFA",
#   version_id: "ObjectVersionId",
#   request_payer: "requester", # accepts requester
#   bypass_governance_retention: false,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjectRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2114
class Aws::S3::Types::DeleteObjectRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjectTaggingOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2125
class Aws::S3::Types::DeleteObjectTaggingOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteObjectTaggingRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   version_id: "ObjectVersionId",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjectTaggingRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2153
class Aws::S3::Types::DeleteObjectTaggingRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjectsOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2173
class Aws::S3::Types::DeleteObjectsOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeleteObjectsRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   delete: { # required
#   objects: [ # required
#   {
#   key: "ObjectKey", # required
#   version_id: "ObjectVersionId",
#   },
#   ],
#   quiet: false,
#   },
#   mfa: "MFA",
#   request_payer: "requester", # accepts requester
#   bypass_governance_retention: false,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjectsRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2229
class Aws::S3::Types::DeleteObjectsRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass DeletePublicAccessBlockRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeletePublicAccessBlockRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2248
class Aws::S3::Types::DeletePublicAccessBlockRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeletedObject AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2270
class Aws::S3::Types::DeletedObject < ::Struct
  include ::Aws::Structure
end

# Specifies information about where to publish analysis or configuration
# results for an Amazon S3 bucket.
#
# @note When making an API call, you may pass Destination
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   account: "AccountId",
#   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
#   access_control_translation: {
#   owner: "Destination", # required, accepts Destination
#   },
#   encryption_configuration: {
#   replica_kms_key_id: "ReplicaKmsKeyID",
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Destination AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2351
class Aws::S3::Types::Destination < ::Struct
  include ::Aws::Structure
end

# Describes the server-side encryption that will be applied to the
# restore results.
#
# @note When making an API call, you may pass Encryption
#   data as a hash:
#
#   {
#   encryption_type: "AES256", # required, accepts AES256, aws:kms
#   kms_key_id: "SSEKMSKeyId",
#   kms_context: "KMSContext",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Encryption AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2387
class Aws::S3::Types::Encryption < ::Struct
  include ::Aws::Structure
end

# Specifies encryption-related information for an Amazon S3 bucket that
# is a destination for replicated objects.
#
# @note When making an API call, you may pass EncryptionConfiguration
#   data as a hash:
#
#   {
#   replica_kms_key_id: "ReplicaKmsKeyID",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/EncryptionConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2410
class Aws::S3::Types::EncryptionConfiguration < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/EndEvent AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2417
class Aws::S3::Types::EndEvent < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Error AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2439
class Aws::S3::Types::Error < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass ErrorDocument
#   data as a hash:
#
#   {
#   key: "ObjectKey", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ErrorDocument AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2457
class Aws::S3::Types::ErrorDocument < ::Struct
  include ::Aws::Structure
end

# Specifies the Amazon S3 object key name to filter on and whether to
# filter on the suffix or prefix of the key name.
#
# @note When making an API call, you may pass FilterRule
#   data as a hash:
#
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/FilterRule AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2492
class Aws::S3::Types::FilterRule < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAccelerateConfigurationOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2503
class Aws::S3::Types::GetBucketAccelerateConfigurationOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketAccelerateConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAccelerateConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2522
class Aws::S3::Types::GetBucketAccelerateConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAclOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2537
class Aws::S3::Types::GetBucketAclOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketAclRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAclRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2554
class Aws::S3::Types::GetBucketAclRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAnalyticsConfigurationOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2565
class Aws::S3::Types::GetBucketAnalyticsConfigurationOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketAnalyticsConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   id: "AnalyticsId", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAnalyticsConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2590
class Aws::S3::Types::GetBucketAnalyticsConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketCorsOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2600
class Aws::S3::Types::GetBucketCorsOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketCorsRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketCorsRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2617
class Aws::S3::Types::GetBucketCorsRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketEncryptionOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2627
class Aws::S3::Types::GetBucketEncryptionOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketEncryptionRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketEncryptionRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2646
class Aws::S3::Types::GetBucketEncryptionRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketInventoryConfigurationOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2657
class Aws::S3::Types::GetBucketInventoryConfigurationOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketInventoryConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   id: "InventoryId", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketInventoryConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2682
class Aws::S3::Types::GetBucketInventoryConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLifecycleConfigurationOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2692
class Aws::S3::Types::GetBucketLifecycleConfigurationOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketLifecycleConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLifecycleConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2709
class Aws::S3::Types::GetBucketLifecycleConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLifecycleOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2719
class Aws::S3::Types::GetBucketLifecycleOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketLifecycleRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLifecycleRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2736
class Aws::S3::Types::GetBucketLifecycleRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLocationOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2746
class Aws::S3::Types::GetBucketLocationOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketLocationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLocationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2763
class Aws::S3::Types::GetBucketLocationRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLoggingOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2773
class Aws::S3::Types::GetBucketLoggingOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketLoggingRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLoggingRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2790
class Aws::S3::Types::GetBucketLoggingRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketMetricsConfigurationOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2801
class Aws::S3::Types::GetBucketMetricsConfigurationOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketMetricsConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   id: "MetricsId", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketMetricsConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2826
class Aws::S3::Types::GetBucketMetricsConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketNotificationConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketNotificationConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2844
class Aws::S3::Types::GetBucketNotificationConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketPolicyOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2855
class Aws::S3::Types::GetBucketPolicyOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketPolicyRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketPolicyRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2872
class Aws::S3::Types::GetBucketPolicyRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketPolicyStatusOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2883
class Aws::S3::Types::GetBucketPolicyStatusOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketPolicyStatusRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketPolicyStatusRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2902
class Aws::S3::Types::GetBucketPolicyStatusRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketReplicationOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2912
class Aws::S3::Types::GetBucketReplicationOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketReplicationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketReplicationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2929
class Aws::S3::Types::GetBucketReplicationRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketRequestPaymentOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2940
class Aws::S3::Types::GetBucketRequestPaymentOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketRequestPaymentRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketRequestPaymentRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2957
class Aws::S3::Types::GetBucketRequestPaymentRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketTaggingOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2967
class Aws::S3::Types::GetBucketTaggingOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketTaggingRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketTaggingRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#2984
class Aws::S3::Types::GetBucketTaggingRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketVersioningOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3003
class Aws::S3::Types::GetBucketVersioningOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketVersioningRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketVersioningRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3020
class Aws::S3::Types::GetBucketVersioningRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketWebsiteOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3042
class Aws::S3::Types::GetBucketWebsiteOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetBucketWebsiteRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketWebsiteRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3059
class Aws::S3::Types::GetBucketWebsiteRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectAclOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3080
class Aws::S3::Types::GetObjectAclOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetObjectAclRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   version_id: "ObjectVersionId",
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectAclRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3118
class Aws::S3::Types::GetObjectAclRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectLegalHoldOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3129
class Aws::S3::Types::GetObjectLegalHoldOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetObjectLegalHoldRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   version_id: "ObjectVersionId",
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectLegalHoldRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3172
class Aws::S3::Types::GetObjectLegalHoldRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectLockConfigurationOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3183
class Aws::S3::Types::GetObjectLockConfigurationOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetObjectLockConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectLockConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3201
class Aws::S3::Types::GetObjectLockConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3389
class Aws::S3::Types::GetObjectOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetObjectRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   if_match: "IfMatch",
#   if_modified_since: Time.now,
#   if_none_match: "IfNoneMatch",
#   if_unmodified_since: Time.now,
#   key: "ObjectKey", # required
#   range: "Range",
#   response_cache_control: "ResponseCacheControl",
#   response_content_disposition: "ResponseContentDisposition",
#   response_content_encoding: "ResponseContentEncoding",
#   response_content_language: "ResponseContentLanguage",
#   response_content_type: "ResponseContentType",
#   response_expires: Time.now,
#   version_id: "ObjectVersionId",
#   sse_customer_algorithm: "SSECustomerAlgorithm",
#   sse_customer_key: "SSECustomerKey",
#   sse_customer_key_md5: "SSECustomerKeyMD5",
#   request_payer: "requester", # accepts requester
#   part_number: 1,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3533
class Aws::S3::Types::GetObjectRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectRetentionOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3544
class Aws::S3::Types::GetObjectRetentionOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetObjectRetentionRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   version_id: "ObjectVersionId",
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectRetentionRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3587
class Aws::S3::Types::GetObjectRetentionRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectTaggingOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3601
class Aws::S3::Types::GetObjectTaggingOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetObjectTaggingRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   version_id: "ObjectVersionId",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectTaggingRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3628
class Aws::S3::Types::GetObjectTaggingRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectTorrentOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3644
class Aws::S3::Types::GetObjectTorrentOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetObjectTorrentRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectTorrentRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3676
class Aws::S3::Types::GetObjectTorrentRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetPublicAccessBlockOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3688
class Aws::S3::Types::GetPublicAccessBlockOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GetPublicAccessBlockRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetPublicAccessBlockRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3707
class Aws::S3::Types::GetPublicAccessBlockRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass GlacierJobParameters
#   data as a hash:
#
#   {
#   tier: "Standard", # required, accepts Standard, Bulk, Expedited
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GlacierJobParameters AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3725
class Aws::S3::Types::GlacierJobParameters < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass Grant
#   data as a hash:
#
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Grant AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3754
class Aws::S3::Types::Grant < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass Grantee
#   data as a hash:
#
#   {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Grantee AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3796
class Aws::S3::Types::Grantee < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass HeadBucketRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadBucketRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3813
class Aws::S3::Types::HeadBucketRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadObjectOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#3984
class Aws::S3::Types::HeadObjectOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass HeadObjectRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   if_match: "IfMatch",
#   if_modified_since: Time.now,
#   if_none_match: "IfNoneMatch",
#   if_unmodified_since: Time.now,
#   key: "ObjectKey", # required
#   range: "Range",
#   version_id: "ObjectVersionId",
#   sse_customer_algorithm: "SSECustomerAlgorithm",
#   sse_customer_key: "SSECustomerKey",
#   sse_customer_key_md5: "SSECustomerKeyMD5",
#   request_payer: "requester", # accepts requester
#   part_number: 1,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadObjectRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4092
class Aws::S3::Types::HeadObjectRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass IndexDocument
#   data as a hash:
#
#   {
#   suffix: "Suffix", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/IndexDocument AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4114
class Aws::S3::Types::IndexDocument < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Initiator AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4131
class Aws::S3::Types::Initiator < ::Struct
  include ::Aws::Structure
end

# Describes the serialization format of the object.
#
# @note When making an API call, you may pass InputSerialization
#   data as a hash:
#
#   {
#   csv: {
#   file_header_info: "USE", # accepts USE, IGNORE, NONE
#   comments: "Comments",
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   allow_quoted_record_delimiter: false,
#   },
#   compression_type: "NONE", # accepts NONE, GZIP, BZIP2
#   json: {
#   type: "DOCUMENT", # accepts DOCUMENT, LINES
#   },
#   parquet: {
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/InputSerialization AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4181
class Aws::S3::Types::InputSerialization < ::Struct
  include ::Aws::Structure
end

# Specifies the inventory configuration for an Amazon S3 bucket. For
# more information, see [GET Bucket inventory][1] in the *Amazon Simple
# Storage Service API Reference*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html
#
# @note When making an API call, you may pass InventoryConfiguration
#   data as a hash:
#
#   {
#   destination: { # required
#   s3_bucket_destination: { # required
#   account_id: "AccountId",
#   bucket: "BucketName", # required
#   format: "CSV", # required, accepts CSV, ORC, Parquet
#   prefix: "Prefix",
#   encryption: {
#   sses3: {
#   },
#   ssekms: {
#   key_id: "SSEKMSKeyId", # required
#   },
#   },
#   },
#   },
#   is_enabled: false, # required
#   filter: {
#   prefix: "Prefix", # required
#   },
#   id: "InventoryId", # required
#   included_object_versions: "All", # required, accepts All, Current
#   optional_fields: ["Size"], # accepts Size, LastModifiedDate, StorageClass, ETag, IsMultipartUploaded, ReplicationStatus, EncryptionStatus, ObjectLockRetainUntilDate, ObjectLockMode, ObjectLockLegalHoldStatus
#   schedule: { # required
#   frequency: "Daily", # required, accepts Daily, Weekly
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/InventoryConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4269
class Aws::S3::Types::InventoryConfiguration < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass InventoryDestination
#   data as a hash:
#
#   {
#   s3_bucket_destination: { # required
#   account_id: "AccountId",
#   bucket: "BucketName", # required
#   format: "CSV", # required, accepts CSV, ORC, Parquet
#   prefix: "Prefix",
#   encryption: {
#   sses3: {
#   },
#   ssekms: {
#   key_id: "SSEKMSKeyId", # required
#   },
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/InventoryDestination AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4300
class Aws::S3::Types::InventoryDestination < ::Struct
  include ::Aws::Structure
end

# Contains the type of server-side encryption used to encrypt the
# inventory results.
#
# @note When making an API call, you may pass InventoryEncryption
#   data as a hash:
#
#   {
#   sses3: {
#   },
#   ssekms: {
#   key_id: "SSEKMSKeyId", # required
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/InventoryEncryption AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4330
class Aws::S3::Types::InventoryEncryption < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass InventoryFilter
#   data as a hash:
#
#   {
#   prefix: "Prefix", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/InventoryFilter AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4349
class Aws::S3::Types::InventoryFilter < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass InventoryS3BucketDestination
#   data as a hash:
#
#   {
#   account_id: "AccountId",
#   bucket: "BucketName", # required
#   format: "CSV", # required, accepts CSV, ORC, Parquet
#   prefix: "Prefix",
#   encryption: {
#   sses3: {
#   },
#   ssekms: {
#   key_id: "SSEKMSKeyId", # required
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/InventoryS3BucketDestination AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4399
class Aws::S3::Types::InventoryS3BucketDestination < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass InventorySchedule
#   data as a hash:
#
#   {
#   frequency: "Daily", # required, accepts Daily, Weekly
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/InventorySchedule AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4417
class Aws::S3::Types::InventorySchedule < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass JSONInput
#   data as a hash:
#
#   {
#   type: "DOCUMENT", # accepts DOCUMENT, LINES
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/JSONInput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4435
class Aws::S3::Types::JSONInput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass JSONOutput
#   data as a hash:
#
#   {
#   record_delimiter: "RecordDelimiter",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/JSONOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4453
class Aws::S3::Types::JSONOutput < ::Struct
  include ::Aws::Structure
end

# A container for specifying the configuration for AWS Lambda
# notifications.
#
# @note When making an API call, you may pass LambdaFunctionConfiguration
#   data as a hash:
#
#   {
#   id: "NotificationId",
#   lambda_function_arn: "LambdaFunctionArn", # required
#   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   filter: {
#   key: {
#   filter_rules: [
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   },
#   ],
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/LambdaFunctionConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4509
class Aws::S3::Types::LambdaFunctionConfiguration < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass LifecycleConfiguration
#   data as a hash:
#
#   {
#   rules: [ # required
#   {
#   expiration: {
#   date: Time.now,
#   days: 1,
#   expired_object_delete_marker: false,
#   },
#   id: "ID",
#   prefix: "Prefix", # required
#   status: "Enabled", # required, accepts Enabled, Disabled
#   transition: {
#   date: Time.now,
#   days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   noncurrent_version_transition: {
#   noncurrent_days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   noncurrent_version_expiration: {
#   noncurrent_days: 1,
#   },
#   abort_incomplete_multipart_upload: {
#   days_after_initiation: 1,
#   },
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/LifecycleConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4552
class Aws::S3::Types::LifecycleConfiguration < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass LifecycleExpiration
#   data as a hash:
#
#   {
#   date: Time.now,
#   days: 1,
#   expired_object_delete_marker: false,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/LifecycleExpiration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4587
class Aws::S3::Types::LifecycleExpiration < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass LifecycleRule
#   data as a hash:
#
#   {
#   expiration: {
#   date: Time.now,
#   days: 1,
#   expired_object_delete_marker: false,
#   },
#   id: "ID",
#   prefix: "Prefix",
#   filter: {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   },
#   status: "Enabled", # required, accepts Enabled, Disabled
#   transitions: [
#   {
#   date: Time.now,
#   days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   ],
#   noncurrent_version_transitions: [
#   {
#   noncurrent_days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   ],
#   noncurrent_version_expiration: {
#   noncurrent_days: 1,
#   },
#   abort_incomplete_multipart_upload: {
#   days_after_initiation: 1,
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/LifecycleRule AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4684
class Aws::S3::Types::LifecycleRule < ::Struct
  include ::Aws::Structure
end

# This is used in a Lifecycle Rule Filter to apply a logical AND to two
# or more predicates. The Lifecycle Rule will apply to any object
# matching all of the predicates configured inside the And operator.
#
# @note When making an API call, you may pass LifecycleRuleAndOperator
#   data as a hash:
#
#   {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/LifecycleRuleAndOperator AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4717
class Aws::S3::Types::LifecycleRuleAndOperator < ::Struct
  include ::Aws::Structure
end

# The Filter is used to identify objects that a Lifecycle Rule applies
# to. A Filter must have exactly one of Prefix, Tag, or And specified.
#
# @note When making an API call, you may pass LifecycleRuleFilter
#   data as a hash:
#
#   {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/LifecycleRuleFilter AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4761
class Aws::S3::Types::LifecycleRuleFilter < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketAnalyticsConfigurationsOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4793
class Aws::S3::Types::ListBucketAnalyticsConfigurationsOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass ListBucketAnalyticsConfigurationsRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   continuation_token: "Token",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketAnalyticsConfigurationsRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4819
class Aws::S3::Types::ListBucketAnalyticsConfigurationsRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketInventoryConfigurationsOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4851
class Aws::S3::Types::ListBucketInventoryConfigurationsOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass ListBucketInventoryConfigurationsRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   continuation_token: "Token",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketInventoryConfigurationsRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4879
class Aws::S3::Types::ListBucketInventoryConfigurationsRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketMetricsConfigurationsOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4913
class Aws::S3::Types::ListBucketMetricsConfigurationsOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass ListBucketMetricsConfigurationsRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   continuation_token: "Token",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketMetricsConfigurationsRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4941
class Aws::S3::Types::ListBucketMetricsConfigurationsRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketsOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#4955
class Aws::S3::Types::ListBucketsOutput < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListMultipartUploadsOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5029
class Aws::S3::Types::ListMultipartUploadsOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass ListMultipartUploadsRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   delimiter: "Delimiter",
#   encoding_type: "url", # accepts url
#   key_marker: "KeyMarker",
#   max_uploads: 1,
#   prefix: "Prefix",
#   upload_id_marker: "UploadIdMarker",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListMultipartUploadsRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5093
class Aws::S3::Types::ListMultipartUploadsRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectVersionsOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5163
class Aws::S3::Types::ListObjectVersionsOutput < ::Struct
  include ::Aws::Structure

  # TODO : Remove this customization once the resource code
  #        generator correct handles the JMESPath || expression.
  #        Only used by the Bucket#object_versions collection.
  #
  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/customizations/types/list_object_versions_output.rb#7
  def versions_delete_markers; end
end

# @note When making an API call, you may pass ListObjectVersionsRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   delimiter: "Delimiter",
#   encoding_type: "url", # accepts url
#   key_marker: "KeyMarker",
#   max_keys: 1,
#   prefix: "Prefix",
#   version_id_marker: "VersionIdMarker",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectVersionsRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5222
class Aws::S3::Types::ListObjectVersionsRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectsOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5280
class Aws::S3::Types::ListObjectsOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass ListObjectsRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   delimiter: "Delimiter",
#   encoding_type: "url", # accepts url
#   marker: "Marker",
#   max_keys: 1,
#   prefix: "Prefix",
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectsRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5341
class Aws::S3::Types::ListObjectsRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectsV2Output AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5421
class Aws::S3::Types::ListObjectsV2Output < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass ListObjectsV2Request
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   delimiter: "Delimiter",
#   encoding_type: "url", # accepts url
#   max_keys: 1,
#   prefix: "Prefix",
#   continuation_token: "Token",
#   fetch_owner: false,
#   start_after: "StartAfter",
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectsV2Request AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5497
class Aws::S3::Types::ListObjectsV2Request < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListPartsOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5577
class Aws::S3::Types::ListPartsOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass ListPartsRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   max_parts: 1,
#   part_number_marker: 1,
#   upload_id: "MultipartUploadId", # required
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListPartsRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5629
class Aws::S3::Types::ListPartsRequest < ::Struct
  include ::Aws::Structure
end

# Describes where logs are stored and the prefix that Amazon S3 assigns
# to all log object keys for a bucket. For more information, see [PUT
# Bucket logging][1] in the *Amazon Simple Storage Service API
# Reference*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html
#
# @note When making an API call, you may pass LoggingEnabled
#   data as a hash:
#
#   {
#   target_bucket: "TargetBucket", # required
#   target_grants: [
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, READ, WRITE
#   },
#   ],
#   target_prefix: "TargetPrefix", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/LoggingEnabled AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5686
class Aws::S3::Types::LoggingEnabled < ::Struct
  include ::Aws::Structure
end

# A metadata key-value pair to store with an object.
#
# @note When making an API call, you may pass MetadataEntry
#   data as a hash:
#
#   {
#   name: "MetadataKey",
#   value: "MetadataValue",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/MetadataEntry AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5710
class Aws::S3::Types::MetadataEntry < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass MetricsAndOperator
#   data as a hash:
#
#   {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/MetricsAndOperator AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5739
class Aws::S3::Types::MetricsAndOperator < ::Struct
  include ::Aws::Structure
end

# Specifies a metrics configuration for the CloudWatch request metrics
# (specified by the metrics configuration ID) from an Amazon S3 bucket.
# If you're updating an existing metrics configuration, note that this
# is a full replacement of the existing metrics configuration. If you
# don't include the elements you want to keep, they are erased. For
# more information, see [ PUT Bucket metrics][1] in the *Amazon Simple
# Storage Service API Reference*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html
#
# @note When making an API call, you may pass MetricsConfiguration
#   data as a hash:
#
#   {
#   id: "MetricsId", # required
#   filter: {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/MetricsConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5792
class Aws::S3::Types::MetricsConfiguration < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass MetricsFilter
#   data as a hash:
#
#   {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/MetricsFilter AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5836
class Aws::S3::Types::MetricsFilter < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/MultipartUpload AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5871
class Aws::S3::Types::MultipartUpload < ::Struct
  include ::Aws::Structure
end

# Specifies when noncurrent object versions expire. Upon expiration,
# Amazon S3 permanently deletes the noncurrent object versions. You set
# this lifecycle configuration action on a bucket that has versioning
# enabled (or suspended) to request that Amazon S3 delete noncurrent
# object versions at a specific period in the object's lifetime.
#
# @note When making an API call, you may pass NoncurrentVersionExpiration
#   data as a hash:
#
#   {
#   noncurrent_days: 1,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/NoncurrentVersionExpiration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5903
class Aws::S3::Types::NoncurrentVersionExpiration < ::Struct
  include ::Aws::Structure
end

# Container for the transition rule that describes when noncurrent
# objects transition to the `STANDARD_IA`, `ONEZONE_IA`,
# `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE` storage class. If
# your bucket is versioning-enabled (or versioning is suspended), you
# can set this action to request that Amazon S3 transition noncurrent
# object versions to the `STANDARD_IA`, `ONEZONE_IA`,
# `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE` storage class at a
# specific period in the object's lifetime.
#
# @note When making an API call, you may pass NoncurrentVersionTransition
#   data as a hash:
#
#   {
#   noncurrent_days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/NoncurrentVersionTransition AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#5944
class Aws::S3::Types::NoncurrentVersionTransition < ::Struct
  include ::Aws::Structure
end

# A container for specifying the notification configuration of the
# bucket. If this element is empty, notifications are turned off for the
# bucket.
#
# @note When making an API call, you may pass NotificationConfiguration
#   data as a hash:
#
#   {
#   topic_configurations: [
#   {
#   id: "NotificationId",
#   topic_arn: "TopicArn", # required
#   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   filter: {
#   key: {
#   filter_rules: [
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   },
#   ],
#   },
#   },
#   },
#   ],
#   queue_configurations: [
#   {
#   id: "NotificationId",
#   queue_arn: "QueueArn", # required
#   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   filter: {
#   key: {
#   filter_rules: [
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   },
#   ],
#   },
#   },
#   },
#   ],
#   lambda_function_configurations: [
#   {
#   id: "NotificationId",
#   lambda_function_arn: "LambdaFunctionArn", # required
#   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   filter: {
#   key: {
#   filter_rules: [
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   },
#   ],
#   },
#   },
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/NotificationConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6029
class Aws::S3::Types::NotificationConfiguration < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass NotificationConfigurationDeprecated
#   data as a hash:
#
#   {
#   topic_configuration: {
#   id: "NotificationId",
#   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   topic: "TopicArn",
#   },
#   queue_configuration: {
#   id: "NotificationId",
#   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   queue: "QueueArn",
#   },
#   cloud_function_configuration: {
#   id: "NotificationId",
#   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   cloud_function: "CloudFunction",
#   invocation_role: "CloudFunctionInvocationRole",
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/NotificationConfigurationDeprecated AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6072
class Aws::S3::Types::NotificationConfigurationDeprecated < ::Struct
  include ::Aws::Structure
end

# Specifies object key name filtering rules. For information about key
# name filtering, see [Configuring Event Notifications][1] in the
# *Amazon Simple Storage Service Developer Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html
#
# @note When making an API call, you may pass NotificationConfigurationFilter
#   data as a hash:
#
#   {
#   key: {
#   filter_rules: [
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/NotificationConfigurationFilter AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6104
class Aws::S3::Types::NotificationConfigurationFilter < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Object AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6135
class Aws::S3::Types::Object < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass ObjectIdentifier
#   data as a hash:
#
#   {
#   key: "ObjectKey", # required
#   version_id: "ObjectVersionId",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ObjectIdentifier AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6159
class Aws::S3::Types::ObjectIdentifier < ::Struct
  include ::Aws::Structure
end

# The container element for object lock configuration parameters.
#
# @note When making an API call, you may pass ObjectLockConfiguration
#   data as a hash:
#
#   {
#   object_lock_enabled: "Enabled", # accepts Enabled
#   rule: {
#   default_retention: {
#   mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
#   days: 1,
#   years: 1,
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ObjectLockConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6192
class Aws::S3::Types::ObjectLockConfiguration < ::Struct
  include ::Aws::Structure
end

# A Legal Hold configuration for an object.
#
# @note When making an API call, you may pass ObjectLockLegalHold
#   data as a hash:
#
#   {
#   status: "ON", # accepts ON, OFF
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ObjectLockLegalHold AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6212
class Aws::S3::Types::ObjectLockLegalHold < ::Struct
  include ::Aws::Structure
end

# A Retention configuration for an object.
#
# @note When making an API call, you may pass ObjectLockRetention
#   data as a hash:
#
#   {
#   mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
#   retain_until_date: Time.now,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ObjectLockRetention AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6238
class Aws::S3::Types::ObjectLockRetention < ::Struct
  include ::Aws::Structure
end

# The container element for an object lock rule.
#
# @note When making an API call, you may pass ObjectLockRule
#   data as a hash:
#
#   {
#   default_retention: {
#   mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
#   days: 1,
#   years: 1,
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ObjectLockRule AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6263
class Aws::S3::Types::ObjectLockRule < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ObjectVersion AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6308
class Aws::S3::Types::ObjectVersion < ::Struct
  include ::Aws::Structure
end

# Describes the location where the restore job's output is stored.
#
# @note When making an API call, you may pass OutputLocation
#   data as a hash:
#
#   {
#   s3: {
#   bucket_name: "BucketName", # required
#   prefix: "LocationPrefix", # required
#   encryption: {
#   encryption_type: "AES256", # required, accepts AES256, aws:kms
#   kms_key_id: "SSEKMSKeyId",
#   kms_context: "KMSContext",
#   },
#   canned_acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
#   access_control_list: [
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
#   },
#   ],
#   tagging: {
#   tag_set: [ # required
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   user_metadata: [
#   {
#   name: "MetadataKey",
#   value: "MetadataValue",
#   },
#   ],
#   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/OutputLocation AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6365
class Aws::S3::Types::OutputLocation < ::Struct
  include ::Aws::Structure
end

# Describes how results of the Select job are serialized.
#
# @note When making an API call, you may pass OutputSerialization
#   data as a hash:
#
#   {
#   csv: {
#   quote_fields: "ALWAYS", # accepts ALWAYS, ASNEEDED
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   },
#   json: {
#   record_delimiter: "RecordDelimiter",
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/OutputSerialization AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6399
class Aws::S3::Types::OutputSerialization < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass Owner
#   data as a hash:
#
#   {
#   display_name: "DisplayName",
#   id: "ID",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Owner AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6421
class Aws::S3::Types::Owner < ::Struct
  include ::Aws::Structure
end

# @api private
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ParquetInput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6429
class Aws::S3::Types::ParquetInput < ::Aws::EmptyStructure; end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Part AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6454
class Aws::S3::Types::Part < ::Struct
  include ::Aws::Structure
end

# The container element for a bucket's policy status.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PolicyStatus AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6468
class Aws::S3::Types::PolicyStatus < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Progress AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6489
class Aws::S3::Types::Progress < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ProgressEvent AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6501
class Aws::S3::Types::ProgressEvent < ::Struct
  include ::Aws::Structure
end

# Specifies the Block Public Access configuration for an Amazon S3
# bucket.
#
# @note When making an API call, you may pass PublicAccessBlockConfiguration
#   data as a hash:
#
#   {
#   block_public_acls: false,
#   ignore_public_acls: false,
#   block_public_policy: false,
#   restrict_public_buckets: false,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PublicAccessBlockConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6568
class Aws::S3::Types::PublicAccessBlockConfiguration < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketAccelerateConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   accelerate_configuration: { # required
#   status: "Enabled", # accepts Enabled, Suspended
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAccelerateConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6595
class Aws::S3::Types::PutBucketAccelerateConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketAclRequest
#   data as a hash:
#
#   {
#   acl: "private", # accepts private, public-read, public-read-write, authenticated-read
#   access_control_policy: {
#   grants: [
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
#   },
#   ],
#   owner: {
#   display_name: "DisplayName",
#   id: "ID",
#   },
#   },
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   grant_full_control: "GrantFullControl",
#   grant_read: "GrantRead",
#   grant_read_acp: "GrantReadACP",
#   grant_write: "GrantWrite",
#   grant_write_acp: "GrantWriteACP",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAclRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6679
class Aws::S3::Types::PutBucketAclRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketAnalyticsConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   id: "AnalyticsId", # required
#   analytics_configuration: { # required
#   id: "AnalyticsId", # required
#   filter: {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   },
#   storage_class_analysis: { # required
#   data_export: {
#   output_schema_version: "V_1", # required, accepts V_1
#   destination: { # required
#   s3_bucket_destination: { # required
#   format: "CSV", # required, accepts CSV
#   bucket_account_id: "AccountId",
#   bucket: "BucketName", # required
#   prefix: "Prefix",
#   },
#   },
#   },
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAnalyticsConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6741
class Aws::S3::Types::PutBucketAnalyticsConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketCorsRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   cors_configuration: { # required
#   cors_rules: [ # required
#   {
#   allowed_headers: ["AllowedHeader"],
#   allowed_methods: ["AllowedMethod"], # required
#   allowed_origins: ["AllowedOrigin"], # required
#   expose_headers: ["ExposeHeader"],
#   max_age_seconds: 1,
#   },
#   ],
#   },
#   content_md5: "ContentMD5",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketCorsRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6778
class Aws::S3::Types::PutBucketCorsRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketEncryptionRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   server_side_encryption_configuration: { # required
#   rules: [ # required
#   {
#   apply_server_side_encryption_by_default: {
#   sse_algorithm: "AES256", # required, accepts AES256, aws:kms
#   kms_master_key_id: "SSEKMSKeyId",
#   },
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketEncryptionRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6826
class Aws::S3::Types::PutBucketEncryptionRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketInventoryConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   id: "InventoryId", # required
#   inventory_configuration: { # required
#   destination: { # required
#   s3_bucket_destination: { # required
#   account_id: "AccountId",
#   bucket: "BucketName", # required
#   format: "CSV", # required, accepts CSV, ORC, Parquet
#   prefix: "Prefix",
#   encryption: {
#   sses3: {
#   },
#   ssekms: {
#   key_id: "SSEKMSKeyId", # required
#   },
#   },
#   },
#   },
#   is_enabled: false, # required
#   filter: {
#   prefix: "Prefix", # required
#   },
#   id: "InventoryId", # required
#   included_object_versions: "All", # required, accepts All, Current
#   optional_fields: ["Size"], # accepts Size, LastModifiedDate, StorageClass, ETag, IsMultipartUploaded, ReplicationStatus, EncryptionStatus, ObjectLockRetainUntilDate, ObjectLockMode, ObjectLockLegalHoldStatus
#   schedule: { # required
#   frequency: "Daily", # required, accepts Daily, Weekly
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketInventoryConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6883
class Aws::S3::Types::PutBucketInventoryConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketLifecycleConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   lifecycle_configuration: {
#   rules: [ # required
#   {
#   expiration: {
#   date: Time.now,
#   days: 1,
#   expired_object_delete_marker: false,
#   },
#   id: "ID",
#   prefix: "Prefix",
#   filter: {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   },
#   status: "Enabled", # required, accepts Enabled, Disabled
#   transitions: [
#   {
#   date: Time.now,
#   days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   ],
#   noncurrent_version_transitions: [
#   {
#   noncurrent_days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   ],
#   noncurrent_version_expiration: {
#   noncurrent_days: 1,
#   },
#   abort_incomplete_multipart_upload: {
#   days_after_initiation: 1,
#   },
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLifecycleConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#6953
class Aws::S3::Types::PutBucketLifecycleConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketLifecycleRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   lifecycle_configuration: {
#   rules: [ # required
#   {
#   expiration: {
#   date: Time.now,
#   days: 1,
#   expired_object_delete_marker: false,
#   },
#   id: "ID",
#   prefix: "Prefix", # required
#   status: "Enabled", # required, accepts Enabled, Disabled
#   transition: {
#   date: Time.now,
#   days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   noncurrent_version_transition: {
#   noncurrent_days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   noncurrent_version_expiration: {
#   noncurrent_days: 1,
#   },
#   abort_incomplete_multipart_upload: {
#   days_after_initiation: 1,
#   },
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLifecycleRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7008
class Aws::S3::Types::PutBucketLifecycleRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketLoggingRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   bucket_logging_status: { # required
#   logging_enabled: {
#   target_bucket: "TargetBucket", # required
#   target_grants: [
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, READ, WRITE
#   },
#   ],
#   target_prefix: "TargetPrefix", # required
#   },
#   },
#   content_md5: "ContentMD5",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLoggingRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7052
class Aws::S3::Types::PutBucketLoggingRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketMetricsConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   id: "MetricsId", # required
#   metrics_configuration: { # required
#   id: "MetricsId", # required
#   filter: {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketMetricsConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7100
class Aws::S3::Types::PutBucketMetricsConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketNotificationConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   notification_configuration: { # required
#   topic_configurations: [
#   {
#   id: "NotificationId",
#   topic_arn: "TopicArn", # required
#   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   filter: {
#   key: {
#   filter_rules: [
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   },
#   ],
#   },
#   },
#   },
#   ],
#   queue_configurations: [
#   {
#   id: "NotificationId",
#   queue_arn: "QueueArn", # required
#   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   filter: {
#   key: {
#   filter_rules: [
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   },
#   ],
#   },
#   },
#   },
#   ],
#   lambda_function_configurations: [
#   {
#   id: "NotificationId",
#   lambda_function_arn: "LambdaFunctionArn", # required
#   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   filter: {
#   key: {
#   filter_rules: [
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   },
#   ],
#   },
#   },
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketNotificationConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7174
class Aws::S3::Types::PutBucketNotificationConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketNotificationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   notification_configuration: { # required
#   topic_configuration: {
#   id: "NotificationId",
#   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   topic: "TopicArn",
#   },
#   queue_configuration: {
#   id: "NotificationId",
#   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   queue: "QueueArn",
#   },
#   cloud_function_configuration: {
#   id: "NotificationId",
#   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   cloud_function: "CloudFunction",
#   invocation_role: "CloudFunctionInvocationRole",
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketNotificationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7221
class Aws::S3::Types::PutBucketNotificationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketPolicyRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   confirm_remove_self_bucket_access: false,
#   policy: "Policy", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketPolicyRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7256
class Aws::S3::Types::PutBucketPolicyRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketReplicationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   replication_configuration: { # required
#   role: "Role", # required
#   rules: [ # required
#   {
#   id: "ID",
#   priority: 1,
#   prefix: "Prefix",
#   filter: {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   },
#   status: "Enabled", # required, accepts Enabled, Disabled
#   source_selection_criteria: {
#   sse_kms_encrypted_objects: {
#   status: "Enabled", # required, accepts Enabled, Disabled
#   },
#   },
#   destination: { # required
#   bucket: "BucketName", # required
#   account: "AccountId",
#   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
#   access_control_translation: {
#   owner: "Destination", # required, accepts Destination
#   },
#   encryption_configuration: {
#   replica_kms_key_id: "ReplicaKmsKeyID",
#   },
#   },
#   delete_marker_replication: {
#   status: "Enabled", # accepts Enabled, Disabled
#   },
#   },
#   ],
#   },
#   token: "ObjectLockToken",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketReplicationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7338
class Aws::S3::Types::PutBucketReplicationRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketRequestPaymentRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   request_payment_configuration: { # required
#   payer: "Requester", # required, accepts Requester, BucketOwner
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketRequestPaymentRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7367
class Aws::S3::Types::PutBucketRequestPaymentRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketTaggingRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   tagging: { # required
#   tag_set: [ # required
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketTaggingRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7401
class Aws::S3::Types::PutBucketTaggingRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketVersioningRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   mfa: "MFA",
#   versioning_configuration: { # required
#   mfa_delete: "Enabled", # accepts Enabled, Disabled
#   status: "Enabled", # accepts Enabled, Suspended
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketVersioningRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7439
class Aws::S3::Types::PutBucketVersioningRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutBucketWebsiteRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   website_configuration: { # required
#   error_document: {
#   key: "ObjectKey", # required
#   },
#   index_document: {
#   suffix: "Suffix", # required
#   },
#   redirect_all_requests_to: {
#   host_name: "HostName", # required
#   protocol: "http", # accepts http, https
#   },
#   routing_rules: [
#   {
#   condition: {
#   http_error_code_returned_equals: "HttpErrorCodeReturnedEquals",
#   key_prefix_equals: "KeyPrefixEquals",
#   },
#   redirect: { # required
#   host_name: "HostName",
#   http_redirect_code: "HttpRedirectCode",
#   protocol: "http", # accepts http, https
#   replace_key_prefix_with: "ReplaceKeyPrefixWith",
#   replace_key_with: "ReplaceKeyWith",
#   },
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketWebsiteRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7492
class Aws::S3::Types::PutBucketWebsiteRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectAclOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7504
class Aws::S3::Types::PutObjectAclOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutObjectAclRequest
#   data as a hash:
#
#   {
#   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
#   access_control_policy: {
#   grants: [
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
#   },
#   ],
#   owner: {
#   display_name: "DisplayName",
#   id: "ID",
#   },
#   },
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   grant_full_control: "GrantFullControl",
#   grant_read: "GrantRead",
#   grant_read_acp: "GrantReadACP",
#   grant_write: "GrantWrite",
#   grant_write_acp: "GrantWriteACP",
#   key: "ObjectKey", # required
#   request_payer: "requester", # accepts requester
#   version_id: "ObjectVersionId",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectAclRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7609
class Aws::S3::Types::PutObjectAclRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectLegalHoldOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7621
class Aws::S3::Types::PutObjectLegalHoldOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutObjectLegalHoldRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   legal_hold: {
#   status: "ON", # accepts ON, OFF
#   },
#   request_payer: "requester", # accepts requester
#   version_id: "ObjectVersionId",
#   content_md5: "ContentMD5",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectLegalHoldRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7677
class Aws::S3::Types::PutObjectLegalHoldRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectLockConfigurationOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7689
class Aws::S3::Types::PutObjectLockConfigurationOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutObjectLockConfigurationRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   object_lock_configuration: {
#   object_lock_enabled: "Enabled", # accepts Enabled
#   rule: {
#   default_retention: {
#   mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
#   days: 1,
#   years: 1,
#   },
#   },
#   },
#   request_payer: "requester", # accepts requester
#   token: "ObjectLockToken",
#   content_md5: "ContentMD5",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectLockConfigurationRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7747
class Aws::S3::Types::PutObjectLockConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#7811
class Aws::S3::Types::PutObjectOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutObjectRequest
#   data as a hash:
#
#   {
#   acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
#   body: source_file,
#   bucket: "BucketName", # required
#   cache_control: "CacheControl",
#   content_disposition: "ContentDisposition",
#   content_encoding: "ContentEncoding",
#   content_language: "ContentLanguage",
#   content_length: 1,
#   content_md5: "ContentMD5",
#   content_type: "ContentType",
#   expires: Time.now,
#   grant_full_control: "GrantFullControl",
#   grant_read: "GrantRead",
#   grant_read_acp: "GrantReadACP",
#   grant_write_acp: "GrantWriteACP",
#   key: "ObjectKey", # required
#   metadata: {
#   "MetadataKey" => "MetadataValue",
#   },
#   server_side_encryption: "AES256", # accepts AES256, aws:kms
#   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
#   website_redirect_location: "WebsiteRedirectLocation",
#   sse_customer_algorithm: "SSECustomerAlgorithm",
#   sse_customer_key: "SSECustomerKey",
#   sse_customer_key_md5: "SSECustomerKeyMD5",
#   ssekms_key_id: "SSEKMSKeyId",
#   ssekms_encryption_context: "SSEKMSEncryptionContext",
#   request_payer: "requester", # accepts requester
#   tagging: "TaggingHeader",
#   object_lock_mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
#   object_lock_retain_until_date: Time.now,
#   object_lock_legal_hold_status: "ON", # accepts ON, OFF
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8035
class Aws::S3::Types::PutObjectRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectRetentionOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8047
class Aws::S3::Types::PutObjectRetentionOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutObjectRetentionRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   retention: {
#   mode: "GOVERNANCE", # accepts GOVERNANCE, COMPLIANCE
#   retain_until_date: Time.now,
#   },
#   request_payer: "requester", # accepts requester
#   version_id: "ObjectVersionId",
#   bypass_governance_retention: false,
#   content_md5: "ContentMD5",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectRetentionRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8112
class Aws::S3::Types::PutObjectRetentionRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectTaggingOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8122
class Aws::S3::Types::PutObjectTaggingOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutObjectTaggingRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   version_id: "ObjectVersionId",
#   content_md5: "ContentMD5",
#   tagging: { # required
#   tag_set: [ # required
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectTaggingRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8166
class Aws::S3::Types::PutObjectTaggingRequest < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass PutPublicAccessBlockRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   content_md5: "ContentMD5",
#   public_access_block_configuration: { # required
#   block_public_acls: false,
#   ignore_public_acls: false,
#   block_public_policy: false,
#   restrict_public_buckets: false,
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutPublicAccessBlockRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8210
class Aws::S3::Types::PutPublicAccessBlockRequest < ::Struct
  include ::Aws::Structure
end

# Specifies the configuration for publishing messages to an Amazon
# Simple Queue Service (Amazon SQS) queue when Amazon S3 detects
# specified events.
#
# @note When making an API call, you may pass QueueConfiguration
#   data as a hash:
#
#   {
#   id: "NotificationId",
#   queue_arn: "QueueArn", # required
#   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   filter: {
#   key: {
#   filter_rules: [
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   },
#   ],
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/QueueConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8261
class Aws::S3::Types::QueueConfiguration < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass QueueConfigurationDeprecated
#   data as a hash:
#
#   {
#   id: "NotificationId",
#   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   queue: "QueueArn",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/QueueConfigurationDeprecated AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8297
class Aws::S3::Types::QueueConfigurationDeprecated < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/RecordsEvent AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8309
class Aws::S3::Types::RecordsEvent < ::Struct
  include ::Aws::Structure
end

# Specifies how requests are redirected. In the event of an error, you
# can specify a different error code to return.
#
# @note When making an API call, you may pass Redirect
#   data as a hash:
#
#   {
#   host_name: "HostName",
#   http_redirect_code: "HttpRedirectCode",
#   protocol: "http", # accepts http, https
#   replace_key_prefix_with: "ReplaceKeyPrefixWith",
#   replace_key_with: "ReplaceKeyWith",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Redirect AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8365
class Aws::S3::Types::Redirect < ::Struct
  include ::Aws::Structure
end

# Specifies the redirect behavior of all requests to a website endpoint
# of an Amazon S3 bucket.
#
# @note When making an API call, you may pass RedirectAllRequestsTo
#   data as a hash:
#
#   {
#   host_name: "HostName", # required
#   protocol: "http", # accepts http, https
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/RedirectAllRequestsTo AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8393
class Aws::S3::Types::RedirectAllRequestsTo < ::Struct
  include ::Aws::Structure
end

# A container for replication rules. You can add up to 1,000 rules. The
# maximum size of a replication configuration is 2 MB.
#
# @note When making an API call, you may pass ReplicationConfiguration
#   data as a hash:
#
#   {
#   role: "Role", # required
#   rules: [ # required
#   {
#   id: "ID",
#   priority: 1,
#   prefix: "Prefix",
#   filter: {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   },
#   status: "Enabled", # required, accepts Enabled, Disabled
#   source_selection_criteria: {
#   sse_kms_encrypted_objects: {
#   status: "Enabled", # required, accepts Enabled, Disabled
#   },
#   },
#   destination: { # required
#   bucket: "BucketName", # required
#   account: "AccountId",
#   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
#   access_control_translation: {
#   owner: "Destination", # required, accepts Destination
#   },
#   encryption_configuration: {
#   replica_kms_key_id: "ReplicaKmsKeyID",
#   },
#   },
#   delete_marker_replication: {
#   status: "Enabled", # accepts Enabled, Disabled
#   },
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ReplicationConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8472
class Aws::S3::Types::ReplicationConfiguration < ::Struct
  include ::Aws::Structure
end

# Specifies which Amazon S3 objects to replicate and where to store the
# replicas.
#
# @note When making an API call, you may pass ReplicationRule
#   data as a hash:
#
#   {
#   id: "ID",
#   priority: 1,
#   prefix: "Prefix",
#   filter: {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   },
#   status: "Enabled", # required, accepts Enabled, Disabled
#   source_selection_criteria: {
#   sse_kms_encrypted_objects: {
#   status: "Enabled", # required, accepts Enabled, Disabled
#   },
#   },
#   destination: { # required
#   bucket: "BucketName", # required
#   account: "AccountId",
#   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
#   access_control_translation: {
#   owner: "Destination", # required, accepts Destination
#   },
#   encryption_configuration: {
#   replica_kms_key_id: "ReplicaKmsKeyID",
#   },
#   },
#   delete_marker_replication: {
#   status: "Enabled", # accepts Enabled, Disabled
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ReplicationRule AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8589
class Aws::S3::Types::ReplicationRule < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass ReplicationRuleAndOperator
#   data as a hash:
#
#   {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ReplicationRuleAndOperator AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8616
class Aws::S3::Types::ReplicationRuleAndOperator < ::Struct
  include ::Aws::Structure
end

# A filter that identifies the subset of objects to which the
# replication rule applies. A `Filter` must specify exactly one
# `Prefix`, `Tag`, or an `And` child element.
#
# @note When making an API call, you may pass ReplicationRuleFilter
#   data as a hash:
#
#   {
#   prefix: "Prefix",
#   tag: {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   and: {
#   prefix: "Prefix",
#   tags: [
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ReplicationRuleFilter AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8672
class Aws::S3::Types::ReplicationRuleFilter < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass RequestPaymentConfiguration
#   data as a hash:
#
#   {
#   payer: "Requester", # required, accepts Requester, BucketOwner
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/RequestPaymentConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8690
class Aws::S3::Types::RequestPaymentConfiguration < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass RequestProgress
#   data as a hash:
#
#   {
#   enabled: false,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/RequestProgress AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8709
class Aws::S3::Types::RequestProgress < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/RestoreObjectOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8727
class Aws::S3::Types::RestoreObjectOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass RestoreObjectRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   version_id: "ObjectVersionId",
#   restore_request: {
#   days: 1,
#   glacier_job_parameters: {
#   tier: "Standard", # required, accepts Standard, Bulk, Expedited
#   },
#   type: "SELECT", # accepts SELECT
#   tier: "Standard", # accepts Standard, Bulk, Expedited
#   description: "Description",
#   select_parameters: {
#   input_serialization: { # required
#   csv: {
#   file_header_info: "USE", # accepts USE, IGNORE, NONE
#   comments: "Comments",
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   allow_quoted_record_delimiter: false,
#   },
#   compression_type: "NONE", # accepts NONE, GZIP, BZIP2
#   json: {
#   type: "DOCUMENT", # accepts DOCUMENT, LINES
#   },
#   parquet: {
#   },
#   },
#   expression_type: "SQL", # required, accepts SQL
#   expression: "Expression", # required
#   output_serialization: { # required
#   csv: {
#   quote_fields: "ALWAYS", # accepts ALWAYS, ASNEEDED
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   },
#   json: {
#   record_delimiter: "RecordDelimiter",
#   },
#   },
#   },
#   output_location: {
#   s3: {
#   bucket_name: "BucketName", # required
#   prefix: "LocationPrefix", # required
#   encryption: {
#   encryption_type: "AES256", # required, accepts AES256, aws:kms
#   kms_key_id: "SSEKMSKeyId",
#   kms_context: "KMSContext",
#   },
#   canned_acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
#   access_control_list: [
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
#   },
#   ],
#   tagging: {
#   tag_set: [ # required
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   user_metadata: [
#   {
#   name: "MetadataKey",
#   value: "MetadataValue",
#   },
#   ],
#   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
#   },
#   },
#   },
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/RestoreObjectRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8849
class Aws::S3::Types::RestoreObjectRequest < ::Struct
  include ::Aws::Structure
end

# Container for restore job parameters.
#
# @note When making an API call, you may pass RestoreRequest
#   data as a hash:
#
#   {
#   days: 1,
#   glacier_job_parameters: {
#   tier: "Standard", # required, accepts Standard, Bulk, Expedited
#   },
#   type: "SELECT", # accepts SELECT
#   tier: "Standard", # accepts Standard, Bulk, Expedited
#   description: "Description",
#   select_parameters: {
#   input_serialization: { # required
#   csv: {
#   file_header_info: "USE", # accepts USE, IGNORE, NONE
#   comments: "Comments",
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   allow_quoted_record_delimiter: false,
#   },
#   compression_type: "NONE", # accepts NONE, GZIP, BZIP2
#   json: {
#   type: "DOCUMENT", # accepts DOCUMENT, LINES
#   },
#   parquet: {
#   },
#   },
#   expression_type: "SQL", # required, accepts SQL
#   expression: "Expression", # required
#   output_serialization: { # required
#   csv: {
#   quote_fields: "ALWAYS", # accepts ALWAYS, ASNEEDED
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   },
#   json: {
#   record_delimiter: "RecordDelimiter",
#   },
#   },
#   },
#   output_location: {
#   s3: {
#   bucket_name: "BucketName", # required
#   prefix: "LocationPrefix", # required
#   encryption: {
#   encryption_type: "AES256", # required, accepts AES256, aws:kms
#   kms_key_id: "SSEKMSKeyId",
#   kms_context: "KMSContext",
#   },
#   canned_acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
#   access_control_list: [
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
#   },
#   ],
#   tagging: {
#   tag_set: [ # required
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   user_metadata: [
#   {
#   name: "MetadataKey",
#   value: "MetadataValue",
#   },
#   ],
#   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/RestoreRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#8979
class Aws::S3::Types::RestoreRequest < ::Struct
  include ::Aws::Structure
end

# Specifies the redirect behavior and when a redirect is applied.
#
# @note When making an API call, you may pass RoutingRule
#   data as a hash:
#
#   {
#   condition: {
#   http_error_code_returned_equals: "HttpErrorCodeReturnedEquals",
#   key_prefix_equals: "KeyPrefixEquals",
#   },
#   redirect: { # required
#   host_name: "HostName",
#   http_redirect_code: "HttpRedirectCode",
#   protocol: "http", # accepts http, https
#   replace_key_prefix_with: "ReplaceKeyPrefixWith",
#   replace_key_with: "ReplaceKeyWith",
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/RoutingRule AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9020
class Aws::S3::Types::RoutingRule < ::Struct
  include ::Aws::Structure
end

# Specifies lifecycle rules for an Amazon S3 bucket. For more
# information, see [PUT Bucket lifecycle][1] in the *Amazon Simple
# Storage Service API Reference*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html
#
# @note When making an API call, you may pass Rule
#   data as a hash:
#
#   {
#   expiration: {
#   date: Time.now,
#   days: 1,
#   expired_object_delete_marker: false,
#   },
#   id: "ID",
#   prefix: "Prefix", # required
#   status: "Enabled", # required, accepts Enabled, Disabled
#   transition: {
#   date: Time.now,
#   days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   noncurrent_version_transition: {
#   noncurrent_days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   },
#   noncurrent_version_expiration: {
#   noncurrent_days: 1,
#   },
#   abort_incomplete_multipart_upload: {
#   days_after_initiation: 1,
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Rule AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9101
class Aws::S3::Types::Rule < ::Struct
  include ::Aws::Structure
end

# A container for object key name prefix and suffix filtering rules.
#
# @note When making an API call, you may pass S3KeyFilter
#   data as a hash:
#
#   {
#   filter_rules: [
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/S3KeyFilter AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9125
class Aws::S3::Types::S3KeyFilter < ::Struct
  include ::Aws::Structure
end

# Describes an S3 location that will receive the results of the restore
# request.
#
# @note When making an API call, you may pass S3Location
#   data as a hash:
#
#   {
#   bucket_name: "BucketName", # required
#   prefix: "LocationPrefix", # required
#   encryption: {
#   encryption_type: "AES256", # required, accepts AES256, aws:kms
#   kms_key_id: "SSEKMSKeyId",
#   kms_context: "KMSContext",
#   },
#   canned_acl: "private", # accepts private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, bucket-owner-full-control
#   access_control_list: [
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP
#   },
#   ],
#   tagging: {
#   tag_set: [ # required
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   },
#   user_metadata: [
#   {
#   name: "MetadataKey",
#   value: "MetadataValue",
#   },
#   ],
#   storage_class: "STANDARD", # accepts STANDARD, REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/S3Location AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9215
class Aws::S3::Types::S3Location < ::Struct
  include ::Aws::Structure
end

# Specifies the use of SSE-KMS to encrypt delivered Inventory reports.
#
# @note When making an API call, you may pass SSEKMS
#   data as a hash:
#
#   {
#   key_id: "SSEKMSKeyId", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/SSEKMS AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9236
class Aws::S3::Types::SSEKMS < ::Struct
  include ::Aws::Structure
end

# Specifies the use of SSE-S3 to encrypt delivered Inventory reports.
#
# @api private
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/SSES3 AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9246
class Aws::S3::Types::SSES3 < ::Aws::EmptyStructure; end

# EventStream is an Enumerator of Events.
#  #event_types #=> Array, returns all modeled event types in the stream
#
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/SelectObjectContentEventStream AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#10332
class Aws::S3::Types::SelectObjectContentEventStream < ::Enumerator
  # source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#10334
  def event_types; end
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/SelectObjectContentOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9254
class Aws::S3::Types::SelectObjectContentOutput < ::Struct
  include ::Aws::Structure
end

# Request to filter the contents of an Amazon S3 object based on a
# simple Structured Query Language (SQL) statement. In the request,
# along with the SQL expression, you must specify a data serialization
# format (JSON or CSV) of the object. Amazon S3 uses this to parse
# object data into records. It returns only records that match the
# specified SQL expression. You must also specify the data serialization
# format for the response. For more information, see [S3Select API
# Documentation][1].
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectSELECTContent.html
#
# @note When making an API call, you may pass SelectObjectContentRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   key: "ObjectKey", # required
#   sse_customer_algorithm: "SSECustomerAlgorithm",
#   sse_customer_key: "SSECustomerKey",
#   sse_customer_key_md5: "SSECustomerKeyMD5",
#   expression: "Expression", # required
#   expression_type: "SQL", # required, accepts SQL
#   request_progress: {
#   enabled: false,
#   },
#   input_serialization: { # required
#   csv: {
#   file_header_info: "USE", # accepts USE, IGNORE, NONE
#   comments: "Comments",
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   allow_quoted_record_delimiter: false,
#   },
#   compression_type: "NONE", # accepts NONE, GZIP, BZIP2
#   json: {
#   type: "DOCUMENT", # accepts DOCUMENT, LINES
#   },
#   parquet: {
#   },
#   },
#   output_serialization: { # required
#   csv: {
#   quote_fields: "ALWAYS", # accepts ALWAYS, ASNEEDED
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   },
#   json: {
#   record_delimiter: "RecordDelimiter",
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/SelectObjectContentRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9387
class Aws::S3::Types::SelectObjectContentRequest < ::Struct
  include ::Aws::Structure
end

# Describes the parameters for Select job types.
#
# @note When making an API call, you may pass SelectParameters
#   data as a hash:
#
#   {
#   input_serialization: { # required
#   csv: {
#   file_header_info: "USE", # accepts USE, IGNORE, NONE
#   comments: "Comments",
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   allow_quoted_record_delimiter: false,
#   },
#   compression_type: "NONE", # accepts NONE, GZIP, BZIP2
#   json: {
#   type: "DOCUMENT", # accepts DOCUMENT, LINES
#   },
#   parquet: {
#   },
#   },
#   expression_type: "SQL", # required, accepts SQL
#   expression: "Expression", # required
#   output_serialization: { # required
#   csv: {
#   quote_fields: "ALWAYS", # accepts ALWAYS, ASNEEDED
#   quote_escape_character: "QuoteEscapeCharacter",
#   record_delimiter: "RecordDelimiter",
#   field_delimiter: "FieldDelimiter",
#   quote_character: "QuoteCharacter",
#   },
#   json: {
#   record_delimiter: "RecordDelimiter",
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/SelectParameters AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9452
class Aws::S3::Types::SelectParameters < ::Struct
  include ::Aws::Structure
end

# Describes the default server-side encryption to apply to new objects
# in the bucket. If a PUT Object request doesn't specify any
# server-side encryption, this default encryption will be applied. For
# more information, see [PUT Bucket encryption][1] in the *Amazon Simple
# Storage Service API Reference*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html
#
# @note When making an API call, you may pass ServerSideEncryptionByDefault
#   data as a hash:
#
#   {
#   sse_algorithm: "AES256", # required, accepts AES256, aws:kms
#   kms_master_key_id: "SSEKMSKeyId",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ServerSideEncryptionByDefault AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9487
class Aws::S3::Types::ServerSideEncryptionByDefault < ::Struct
  include ::Aws::Structure
end

# Specifies the default server-side-encryption configuration.
#
# @note When making an API call, you may pass ServerSideEncryptionConfiguration
#   data as a hash:
#
#   {
#   rules: [ # required
#   {
#   apply_server_side_encryption_by_default: {
#   sse_algorithm: "AES256", # required, accepts AES256, aws:kms
#   kms_master_key_id: "SSEKMSKeyId",
#   },
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ServerSideEncryptionConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9515
class Aws::S3::Types::ServerSideEncryptionConfiguration < ::Struct
  include ::Aws::Structure
end

# Specifies the default server-side encryption configuration.
#
# @note When making an API call, you may pass ServerSideEncryptionRule
#   data as a hash:
#
#   {
#   apply_server_side_encryption_by_default: {
#   sse_algorithm: "AES256", # required, accepts AES256, aws:kms
#   kms_master_key_id: "SSEKMSKeyId",
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ServerSideEncryptionRule AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9540
class Aws::S3::Types::ServerSideEncryptionRule < ::Struct
  include ::Aws::Structure
end

# A container that describes additional filters for identifying the
# source objects that you want to replicate. You can choose to enable or
# disable the replication of these objects. Currently, Amazon S3
# supports only the filter that you can specify for objects created with
# server-side encryption using an AWS KMS-Managed Key (SSE-KMS).
#
# @note When making an API call, you may pass SourceSelectionCriteria
#   data as a hash:
#
#   {
#   sse_kms_encrypted_objects: {
#   status: "Enabled", # required, accepts Enabled, Disabled
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/SourceSelectionCriteria AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9569
class Aws::S3::Types::SourceSelectionCriteria < ::Struct
  include ::Aws::Structure
end

# A container for filter information for the selection of S3 objects
# encrypted with AWS KMS.
#
# @note When making an API call, you may pass SseKmsEncryptedObjects
#   data as a hash:
#
#   {
#   status: "Enabled", # required, accepts Enabled, Disabled
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/SseKmsEncryptedObjects AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9591
class Aws::S3::Types::SseKmsEncryptedObjects < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Stats AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9612
class Aws::S3::Types::Stats < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/StatsEvent AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9624
class Aws::S3::Types::StatsEvent < ::Struct
  include ::Aws::Structure
end

# Specifies data related to access patterns to be collected and made
# available to analyze the tradeoffs between different storage classes
# for an Amazon S3 bucket.
#
# @note When making an API call, you may pass StorageClassAnalysis
#   data as a hash:
#
#   {
#   data_export: {
#   output_schema_version: "V_1", # required, accepts V_1
#   destination: { # required
#   s3_bucket_destination: { # required
#   format: "CSV", # required, accepts CSV
#   bucket_account_id: "AccountId",
#   bucket: "BucketName", # required
#   prefix: "Prefix",
#   },
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/StorageClassAnalysis AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9657
class Aws::S3::Types::StorageClassAnalysis < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass StorageClassAnalysisDataExport
#   data as a hash:
#
#   {
#   output_schema_version: "V_1", # required, accepts V_1
#   destination: { # required
#   s3_bucket_destination: { # required
#   format: "CSV", # required, accepts CSV
#   bucket_account_id: "AccountId",
#   bucket: "BucketName", # required
#   prefix: "Prefix",
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/StorageClassAnalysisDataExport AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9689
class Aws::S3::Types::StorageClassAnalysisDataExport < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass Tag
#   data as a hash:
#
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Tag AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9713
class Aws::S3::Types::Tag < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass Tagging
#   data as a hash:
#
#   {
#   tag_set: [ # required
#   {
#   key: "ObjectKey", # required
#   value: "Value", # required
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Tagging AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9735
class Aws::S3::Types::Tagging < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass TargetGrant
#   data as a hash:
#
#   {
#   grantee: {
#   display_name: "DisplayName",
#   email_address: "EmailAddress",
#   id: "ID",
#   type: "CanonicalUser", # required, accepts CanonicalUser, AmazonCustomerByEmail, Group
#   uri: "URI",
#   },
#   permission: "FULL_CONTROL", # accepts FULL_CONTROL, READ, WRITE
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/TargetGrant AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9764
class Aws::S3::Types::TargetGrant < ::Struct
  include ::Aws::Structure
end

# A container for specifying the configuration for publication of
# messages to an Amazon Simple Notification Service (Amazon SNS) topic
# when Amazon S3 detects specified events.
#
# @note When making an API call, you may pass TopicConfiguration
#   data as a hash:
#
#   {
#   id: "NotificationId",
#   topic_arn: "TopicArn", # required
#   events: ["s3:ReducedRedundancyLostObject"], # required, accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   filter: {
#   key: {
#   filter_rules: [
#   {
#   name: "prefix", # accepts prefix, suffix
#   value: "FilterRuleValue",
#   },
#   ],
#   },
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/TopicConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9822
class Aws::S3::Types::TopicConfiguration < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass TopicConfigurationDeprecated
#   data as a hash:
#
#   {
#   id: "NotificationId",
#   events: ["s3:ReducedRedundancyLostObject"], # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   event: "s3:ReducedRedundancyLostObject", # accepts s3:ReducedRedundancyLostObject, s3:ObjectCreated:*, s3:ObjectCreated:Put, s3:ObjectCreated:Post, s3:ObjectCreated:Copy, s3:ObjectCreated:CompleteMultipartUpload, s3:ObjectRemoved:*, s3:ObjectRemoved:Delete, s3:ObjectRemoved:DeleteMarkerCreated, s3:ObjectRestore:Post, s3:ObjectRestore:Completed
#   topic: "TopicArn",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/TopicConfigurationDeprecated AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9860
class Aws::S3::Types::TopicConfigurationDeprecated < ::Struct
  include ::Aws::Structure
end

# Specifies when an object transitions to a specified storage class.
#
# @note When making an API call, you may pass Transition
#   data as a hash:
#
#   {
#   date: Time.now,
#   days: 1,
#   storage_class: "GLACIER", # accepts GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/Transition AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9896
class Aws::S3::Types::Transition < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/UploadPartCopyOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#9945
class Aws::S3::Types::UploadPartCopyOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass UploadPartCopyRequest
#   data as a hash:
#
#   {
#   bucket: "BucketName", # required
#   copy_source: "CopySource", # required
#   copy_source_if_match: "CopySourceIfMatch",
#   copy_source_if_modified_since: Time.now,
#   copy_source_if_none_match: "CopySourceIfNoneMatch",
#   copy_source_if_unmodified_since: Time.now,
#   copy_source_range: "CopySourceRange",
#   key: "ObjectKey", # required
#   part_number: 1, # required
#   upload_id: "MultipartUploadId", # required
#   sse_customer_algorithm: "SSECustomerAlgorithm",
#   sse_customer_key: "SSECustomerKey",
#   sse_customer_key_md5: "SSECustomerKeyMD5",
#   copy_source_sse_customer_algorithm: "CopySourceSSECustomerAlgorithm",
#   copy_source_sse_customer_key: "CopySourceSSECustomerKey",
#   copy_source_sse_customer_key_md5: "CopySourceSSECustomerKeyMD5",
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/UploadPartCopyRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#10085
class Aws::S3::Types::UploadPartCopyRequest < ::Struct
  include ::Aws::Structure
end

# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/UploadPartOutput AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#10129
class Aws::S3::Types::UploadPartOutput < ::Struct
  include ::Aws::Structure
end

# @note When making an API call, you may pass UploadPartRequest
#   data as a hash:
#
#   {
#   body: source_file,
#   bucket: "BucketName", # required
#   content_length: 1,
#   content_md5: "ContentMD5",
#   key: "ObjectKey", # required
#   part_number: 1, # required
#   upload_id: "MultipartUploadId", # required
#   sse_customer_algorithm: "SSECustomerAlgorithm",
#   sse_customer_key: "SSECustomerKey",
#   sse_customer_key_md5: "SSECustomerKeyMD5",
#   request_payer: "requester", # accepts requester
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/UploadPartRequest AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#10225
class Aws::S3::Types::UploadPartRequest < ::Struct
  include ::Aws::Structure
end

# Describes the versioning state of an Amazon S3 bucket. For more
# information, see [PUT Bucket versioning][1] in the *Amazon Simple
# Storage Service API Reference*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html
#
# @note When making an API call, you may pass VersioningConfiguration
#   data as a hash:
#
#   {
#   mfa_delete: "Enabled", # accepts Enabled, Disabled
#   status: "Enabled", # accepts Enabled, Suspended
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/VersioningConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#10260
class Aws::S3::Types::VersioningConfiguration < ::Struct
  include ::Aws::Structure
end

# Specifies website configuration parameters for an Amazon S3 bucket.
#
# @note When making an API call, you may pass WebsiteConfiguration
#   data as a hash:
#
#   {
#   error_document: {
#   key: "ObjectKey", # required
#   },
#   index_document: {
#   suffix: "Suffix", # required
#   },
#   redirect_all_requests_to: {
#   host_name: "HostName", # required
#   protocol: "http", # accepts http, https
#   },
#   routing_rules: [
#   {
#   condition: {
#   http_error_code_returned_equals: "HttpErrorCodeReturnedEquals",
#   key_prefix_equals: "KeyPrefixEquals",
#   },
#   redirect: { # required
#   host_name: "HostName",
#   http_redirect_code: "HttpRedirectCode",
#   protocol: "http", # accepts http, https
#   replace_key_prefix_with: "ReplaceKeyPrefixWith",
#   replace_key_with: "ReplaceKeyWith",
#   },
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/WebsiteConfiguration AWS API Documentation
#
# source://aws-sdk-s3//lib/aws-sdk-s3/types.rb#10323
class Aws::S3::Types::WebsiteConfiguration < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#11
module Aws::S3::Waiters; end

# source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#13
class Aws::S3::Waiters::BucketExists
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash]
  # @return [BucketExists] a new instance of BucketExists
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#21
  def initialize(options); end

  # @option params
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#56
  def wait(params = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#61
  def waiter; end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#65
class Aws::S3::Waiters::BucketNotExists
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash]
  # @return [BucketNotExists] a new instance of BucketNotExists
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#73
  def initialize(options); end

  # @option params
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#91
  def wait(params = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#96
  def waiter; end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#100
class Aws::S3::Waiters::ObjectExists
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash]
  # @return [ObjectExists] a new instance of ObjectExists
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#108
  def initialize(options); end

  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @return [Types::HeadObjectOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::HeadObjectOutput#delete_marker #delete_marker} => Boolean
  #   * {Types::HeadObjectOutput#accept_ranges #accept_ranges} => String
  #   * {Types::HeadObjectOutput#expiration #expiration} => String
  #   * {Types::HeadObjectOutput#restore #restore} => String
  #   * {Types::HeadObjectOutput#last_modified #last_modified} => Time
  #   * {Types::HeadObjectOutput#content_length #content_length} => Integer
  #   * {Types::HeadObjectOutput#etag #etag} => String
  #   * {Types::HeadObjectOutput#missing_meta #missing_meta} => Integer
  #   * {Types::HeadObjectOutput#version_id #version_id} => String
  #   * {Types::HeadObjectOutput#cache_control #cache_control} => String
  #   * {Types::HeadObjectOutput#content_disposition #content_disposition} => String
  #   * {Types::HeadObjectOutput#content_encoding #content_encoding} => String
  #   * {Types::HeadObjectOutput#content_language #content_language} => String
  #   * {Types::HeadObjectOutput#content_type #content_type} => String
  #   * {Types::HeadObjectOutput#expires #expires} => Time
  #   * {Types::HeadObjectOutput#expires_string #expires_string} => String
  #   * {Types::HeadObjectOutput#website_redirect_location #website_redirect_location} => String
  #   * {Types::HeadObjectOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::HeadObjectOutput#metadata #metadata} => Hash&lt;String,String&gt;
  #   * {Types::HeadObjectOutput#sse_customer_algorithm #sse_customer_algorithm} => String
  #   * {Types::HeadObjectOutput#sse_customer_key_md5 #sse_customer_key_md5} => String
  #   * {Types::HeadObjectOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::HeadObjectOutput#storage_class #storage_class} => String
  #   * {Types::HeadObjectOutput#request_charged #request_charged} => String
  #   * {Types::HeadObjectOutput#replication_status #replication_status} => String
  #   * {Types::HeadObjectOutput#parts_count #parts_count} => Integer
  #   * {Types::HeadObjectOutput#object_lock_mode #object_lock_mode} => String
  #   * {Types::HeadObjectOutput#object_lock_retain_until_date #object_lock_retain_until_date} => Time
  #   * {Types::HeadObjectOutput#object_lock_legal_hold_status #object_lock_legal_hold_status} => String
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#133
  def wait(params = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#138
  def waiter; end
end

# source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#142
class Aws::S3::Waiters::ObjectNotExists
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash]
  # @return [ObjectNotExists] a new instance of ObjectNotExists
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#150
  def initialize(options); end

  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @return [Types::HeadObjectOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::HeadObjectOutput#delete_marker #delete_marker} => Boolean
  #   * {Types::HeadObjectOutput#accept_ranges #accept_ranges} => String
  #   * {Types::HeadObjectOutput#expiration #expiration} => String
  #   * {Types::HeadObjectOutput#restore #restore} => String
  #   * {Types::HeadObjectOutput#last_modified #last_modified} => Time
  #   * {Types::HeadObjectOutput#content_length #content_length} => Integer
  #   * {Types::HeadObjectOutput#etag #etag} => String
  #   * {Types::HeadObjectOutput#missing_meta #missing_meta} => Integer
  #   * {Types::HeadObjectOutput#version_id #version_id} => String
  #   * {Types::HeadObjectOutput#cache_control #cache_control} => String
  #   * {Types::HeadObjectOutput#content_disposition #content_disposition} => String
  #   * {Types::HeadObjectOutput#content_encoding #content_encoding} => String
  #   * {Types::HeadObjectOutput#content_language #content_language} => String
  #   * {Types::HeadObjectOutput#content_type #content_type} => String
  #   * {Types::HeadObjectOutput#expires #expires} => Time
  #   * {Types::HeadObjectOutput#expires_string #expires_string} => String
  #   * {Types::HeadObjectOutput#website_redirect_location #website_redirect_location} => String
  #   * {Types::HeadObjectOutput#server_side_encryption #server_side_encryption} => String
  #   * {Types::HeadObjectOutput#metadata #metadata} => Hash&lt;String,String&gt;
  #   * {Types::HeadObjectOutput#sse_customer_algorithm #sse_customer_algorithm} => String
  #   * {Types::HeadObjectOutput#sse_customer_key_md5 #sse_customer_key_md5} => String
  #   * {Types::HeadObjectOutput#ssekms_key_id #ssekms_key_id} => String
  #   * {Types::HeadObjectOutput#storage_class #storage_class} => String
  #   * {Types::HeadObjectOutput#request_charged #request_charged} => String
  #   * {Types::HeadObjectOutput#replication_status #replication_status} => String
  #   * {Types::HeadObjectOutput#parts_count #parts_count} => Integer
  #   * {Types::HeadObjectOutput#object_lock_mode #object_lock_mode} => String
  #   * {Types::HeadObjectOutput#object_lock_retain_until_date #object_lock_retain_until_date} => Time
  #   * {Types::HeadObjectOutput#object_lock_legal_hold_status #object_lock_legal_hold_status} => String
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#168
  def wait(params = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-s3//lib/aws-sdk-s3/waiters.rb#173
  def waiter; end
end
