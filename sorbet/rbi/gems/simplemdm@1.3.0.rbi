# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `simplemdm` gem.
# Please instead update this file by running `bin/tapioca gem simplemdm`.

# source://simplemdm//lib/simplemdm/version.rb#1
module SimpleMDM
  class << self
    # source://simplemdm//lib/simplemdm/simplemdm.rb#9
    def api_key; end

    # source://simplemdm//lib/simplemdm/simplemdm.rb#5
    def api_key=(value); end

    # source://simplemdm//lib/simplemdm/simplemdm.rb#21
    def api_url; end

    # source://simplemdm//lib/simplemdm/simplemdm.rb#17
    def base_url; end

    # source://simplemdm//lib/simplemdm/simplemdm.rb#13
    def base_url=(value); end
  end
end

# source://simplemdm//lib/simplemdm/account.rb#4
class SimpleMDM::Account < ::Hash
  include ::Singleton
  extend ::Singleton::SingletonClassMethods

  # @return [Account] a new instance of Account
  #
  # source://simplemdm//lib/simplemdm/account.rb#7
  def initialize; end

  # source://simplemdm//lib/simplemdm/account.rb#13
  def name; end
end

# source://simplemdm//lib/simplemdm/app.rb#2
class SimpleMDM::App < ::SimpleMDM::Base
  # overwrite base class
  #
  # @return [App] a new instance of App
  #
  # source://simplemdm//lib/simplemdm/app.rb#5
  def initialize(source_hash = T.unsafe(nil), default = T.unsafe(nil), &blk); end

  # source://simplemdm//lib/simplemdm/app.rb#33
  def binary=(val); end

  # source://simplemdm//lib/simplemdm/app.rb#14
  def build(hash = T.unsafe(nil)); end

  # source://simplemdm//lib/simplemdm/app.rb#73
  def destroy; end

  # source://simplemdm//lib/simplemdm/app.rb#40
  def name=(val); end

  # source://simplemdm//lib/simplemdm/app.rb#48
  def save; end

  class << self
    # source://simplemdm//lib/simplemdm/app.rb#21
    def all; end

    # source://simplemdm//lib/simplemdm/app.rb#27
    def find(id); end
  end
end

# source://simplemdm//lib/simplemdm/app_group.rb#2
class SimpleMDM::AppGroup < ::SimpleMDM::Base
  # source://simplemdm//lib/simplemdm/app_group.rb#67
  def add_app(app); end

  # source://simplemdm//lib/simplemdm/app_group.rb#127
  def add_device(device); end

  # source://simplemdm//lib/simplemdm/app_group.rb#97
  def add_device_group(device_group); end

  # source://simplemdm//lib/simplemdm/app_group.rb#51
  def auto_deploy=(val); end

  # source://simplemdm//lib/simplemdm/app_group.rb#4
  def build(hash = T.unsafe(nil)); end

  # source://simplemdm//lib/simplemdm/app_group.rb#59
  def destroy; end

  # source://simplemdm//lib/simplemdm/app_group.rb#43
  def name=(val); end

  # source://simplemdm//lib/simplemdm/app_group.rb#157
  def push_apps; end

  # source://simplemdm//lib/simplemdm/app_group.rb#82
  def remove_app(app); end

  # source://simplemdm//lib/simplemdm/app_group.rb#142
  def remove_device(device); end

  # source://simplemdm//lib/simplemdm/app_group.rb#112
  def remove_device_group(device_group); end

  # source://simplemdm//lib/simplemdm/app_group.rb#22
  def save; end

  class << self
    # source://simplemdm//lib/simplemdm/app_group.rb#10
    def all; end

    # source://simplemdm//lib/simplemdm/app_group.rb#16
    def find(id); end
  end
end

# source://simplemdm//lib/simplemdm/base.rb#6
class SimpleMDM::Base < ::Hashie::Mash
  private

  # source://simplemdm//lib/simplemdm/base.rb#68
  def fetch(method, verb = T.unsafe(nil), params = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://simplemdm//lib/simplemdm/base.rb#44
  def new?; end

  class << self
    # source://simplemdm//lib/simplemdm/base.rb#8
    def build(hash = T.unsafe(nil)); end

    # source://simplemdm//lib/simplemdm/base.rb#48
    def fetch(method, verb = T.unsafe(nil), params = T.unsafe(nil)); end
  end
end

# source://simplemdm//lib/simplemdm/device.rb#2
class SimpleMDM::Device < ::SimpleMDM::Base
  # source://simplemdm//lib/simplemdm/device.rb#51
  def clear_passcode; end

  # source://simplemdm//lib/simplemdm/device.rb#35
  def installed_apps; end

  # source://simplemdm//lib/simplemdm/device.rb#43
  def lock(options = T.unsafe(nil)); end

  # source://simplemdm//lib/simplemdm/device.rb#63
  def push_apps; end

  # source://simplemdm//lib/simplemdm/device.rb#16
  def save; end

  # source://simplemdm//lib/simplemdm/device.rb#57
  def wipe; end

  class << self
    # source://simplemdm//lib/simplemdm/device.rb#4
    def all; end

    # source://simplemdm//lib/simplemdm/device.rb#10
    def find(id); end
  end
end

# source://simplemdm//lib/simplemdm/device_group.rb#2
class SimpleMDM::DeviceGroup < ::SimpleMDM::Base
  # source://simplemdm//lib/simplemdm/device_group.rb#16
  def add_device(device); end

  class << self
    # source://simplemdm//lib/simplemdm/device_group.rb#4
    def all; end

    # source://simplemdm//lib/simplemdm/device_group.rb#10
    def find(id); end
  end
end

# source://simplemdm//lib/simplemdm/installed_app.rb#2
class SimpleMDM::InstalledApp < ::SimpleMDM::Base
  # source://simplemdm//lib/simplemdm/installed_app.rb#10
  def uninstall; end

  class << self
    # source://simplemdm//lib/simplemdm/installed_app.rb#4
    def find(id); end
  end
end

# source://simplemdm//lib/simplemdm/version.rb#2
SimpleMDM::VERSION = T.let(T.unsafe(nil), String)
